/*
 * Copyright (c) 2025, Marc Himmelberger <marc dot himmelberger at inf dot ethz dot ch>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 *  * Redistributions of source code must retain the above copyright notice,
 *    this list of conditions and the following disclaimer.
 *
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *    this list of conditions and the following disclaimer in the documentation
 *    and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

package encoding_kemeleon

import (
	"bytes"
	"encoding/hex"
	"flag"
	"fmt"
	"os"
	"slices"
	"testing"

	"gitlab.torproject.org/tpo/anti-censorship/pluggable-transports/lyrebird/common/csrand"
	"gitlab.torproject.org/tpo/anti-censorship/pluggable-transports/lyrebird/internal/cryptodata"
	"gitlab.torproject.org/tpo/anti-censorship/pluggable-transports/lyrebird/internal/cryptofactory/oqs_wrapper"
	"gitlab.torproject.org/tpo/anti-censorship/pluggable-transports/lyrebird/internal/kems"
)

var parameterSets = []string{
	"ML-KEM-512",
	"ML-KEM-768",
	"ML-KEM-1024",
}

const minSuccessRate = float32(1.0)            // encoding should never reject
const minLooksOkRate = float32(0.96875 - 0.05) // 2^-5 probability of all padding bits being 0 and some margin

// Number of times to repeat correctness tests for applicable KEMs.
var numRepeats int

func TestMain(m *testing.M) {
	flag.Parse()
	if testing.Short() {
		numRepeats = 10
	} else {
		numRepeats = 100
	}
	code := m.Run()
	os.Exit(code)
}

func TestEncoding(t *testing.T) {
	for _, kemName := range parameterSets {
		t.Run(kemName, func(t *testing.T) {
			encodingOkNum := 0
			looksOkNum := 0
			for range numRepeats {
				encodingOk, looksOk := testSingleKemEncoding(t, kemName)
				if encodingOk {
					encodingOkNum++
					if looksOk {
						looksOkNum++
					}
				}
			}

			successRate := float32(encodingOkNum) / float32(numRepeats)
			looksOkRate := float32(looksOkNum) / float32(encodingOkNum)
			if successRate < minSuccessRate {
				t.Fatalf("Success Rate of %f too low. Minimum: %f", successRate, minSuccessRate)
			}
			t.Logf("Success Rate of %f acceptable. Minimum: %f", successRate, minSuccessRate)
			if looksOkRate < minLooksOkRate {
				t.Fatalf("Looks-OK Rate of %f too low. Minimum: %f", looksOkRate, minLooksOkRate)
			}
			t.Logf("Looks-OK Rate of %f acceptable. Minimum: %f", looksOkRate, minLooksOkRate)
		})
	}
}

func testSingleKemEncoding(t *testing.T, kemName string) (ok bool, looksOk bool) {
	kem := (kems.KeyEncapsulationMechanism)(oqs_wrapper.NewOqsWrapper(kemName))
	encoder := &KemeleonEncoder{}

	encoder.Init(kem)

	// Specific to Kemeleon: Check KEM output size
	if kem.LengthCiphertext() != encoder.kemCtxtLength {
		panic("encoding_mlkem_kemeleon: Received invalid ciphertext size from KEM")
	}

	// KeyGen, Encaps
	keypair := kem.KeyGen()
	ctxt, _, _ := kem.Encaps(keypair.Public())

	// EncodeCtxt
	encodedCtxt := make([]byte, encoder.LengthObfuscatedCiphertext())
	ok = encoder.EncodeCiphertext(encodedCtxt, ctxt.Bytes())
	if !ok {
		t.Log("encoder.EncodeCiphertext(ctxt) failed")
		return
	}

	// Specific to Kemeleon: Check layout of encodedCtxt
	looksOk = true

	// DecodeCtxt
	decodedCtxt := make([]byte, kem.LengthCiphertext())
	encoder.DecodeCiphertext(decodedCtxt, encodedCtxt)
	if !bytes.Equal(ctxt.Bytes(), decodedCtxt) {
		c1Exp, c2Exp := encoder.splitCtxt(ctxt.Bytes())
		compr1Exp, compr2Exp := encoder.decodeBytes(c1Exp, c2Exp)
		uExp, vExp := encoder.decompress(compr1Exp, compr2Exp)

		c1, c2 := encoder.splitCtxt(decodedCtxt)
		if !bytes.Equal(c1, c1Exp) {
			t.Logf("c1 don't match")
		} else {
			t.Logf("c1 do match")
		}
		if !bytes.Equal(c2, c2Exp) {
			t.Logf("c2 don't match")
		} else {
			t.Logf("c2 do match")
		}
		compr1, compr2 := encoder.decodeBytes(c1, c2)
		if !slices.Equal(compr1, compr1Exp) {
			t.Logf("compr1 don't match")
		} else {
			t.Logf("compr1 do match")
		}
		if !slices.Equal(compr2, compr2Exp) {
			t.Logf("compr2 don't match")
		} else {
			t.Logf("compr2 do match")
		}
		u, v := encoder.decompress(compr1, compr2)
		if !slices.Equal(u, uExp) {
			t.Logf("u don't match")
		} else {
			t.Logf("u do match")
		}
		if !slices.Equal(v, vExp) {
			t.Logf("v don't match")
		} else {
			t.Logf("v do match")
		}

		expected := ctxt.Bytes()
		for i, v := range expected {
			w := decodedCtxt[i]
			if v != w {
				t.Logf("pos %d: %d != %d", i, v, w)
			}
		}

		t.Fatalf("correctness violation in encoding: expected %x, actual: %x", ctxt.Bytes(), decodedCtxt)
	}

	return
}
func fromHex(t *testing.T, hexString string) []byte {
	val, err := hex.DecodeString(hexString)
	if err != nil {
		t.Fatalf("hex.DecodeString() failed for value '%s'. The error was: %v", hexString, err)
	}
	return val
}

func TestWithTestVectors512(t *testing.T) {
	// Test vectors from https://github.com/C2SP/CCTV/blob/main/ML-KEM/intermediate/ML-KEM-512.txt
	kemName := "ML-KEM-512"
	ek := fromHex(t, "f29c866c361d910341f296c64b46c2a2e30b1535a5c0602593415d156b43036b21b14ba3a0c72e848c5ee03466cab97721d83defdab1f6708971d3c4581441ce397fe7bbc7a08acfdcc417c5f56dfdd4423e306f1f69a86e5b5ba3e031bf92a16702861a51a2feb974f4844812b8302dc83026ea566a1c110cd2c4af48bedd742f1c02cd3fca0dfb8331f414b115849bcb05a2df615b49a90ec0a433e8787e185142aa406003d35409ec842af304459b40fffa0d84340156b5767ee0ca6e2850ec8ccaed317ecf711e27d59b3c985555e44c935988092981da95b42573b9bc38122ed44a800510756429f1b0640685b048597842cbb93dc6b2f9144dcf41a624eb90202a30381410f4cbaaccf61e485524ee593ad7d5974f774ae59ba20c7c6eb0009b39962dc0f828e8538ef583b4dc40c09555a3968ab257d407cc4ab801c7521bf7564b163fab927b4703225b1b497a096b4eb984dfd3512ecb2eaea46fb53c3b3840af3c4aaf78b1461e0564290c0a8f93a1e1b1c50cdb5fd56970046103600a1cc109b58cc32e52c7a168e17107a9c77cc448b01a5a7dc90603d708c6d717c3165e772c74763821f35934a613b0297246370020eb113645d75593c5130072acc0483118067bfb8093b518066318c3f936bd29e8acba8318c68a3c47a1be713c5b5a3c3df82514a5db7f70150b44b3927aa5c7b5507f8e693eed04369340141b1c75069b5f3abb016833b936a1adf7ccbedfe775f0494acb6404307a787e19b2fcba2aa8b3cf94ea6aa4303cfe4821fc9a62ee5acbcaa42556d046e4ab2e65e57e4dcc874276c89f980ac1a52fde549064b7abeab30e81d540af393a51bb917d87098ae238946033f3bb31d82b418ea863b9fc2008613e4751aed8c9aaa41840579116b571ad6df0cfc1185b17612008900d104a83b67a36acd8c783c5b1c21026f03b4ab57b23bd160a103920729b13334395a500a2a5a126bd66c75c5c2a046a97ebb8565cbb65fc6a3e1c11a990e20a9c88c96aa3924961159ef22082e45c86a9bb80d7b8936cc9eec593e5e4523ddc5438c819551328557982cf6784b1720e4ed5ac0add457f573a041465bcbd7ca4e1d7d53eaadeda511962a36eb0")
	dk := fromHex(t, "2d17c4ba262edec00f00f2247692b87bc2564ffc7910f113fb8c7d8b1c3981ac95d8a8488781bedab191e69170151c2ce942191276691eeb395cc29afde6091591ccef038ae9235a201510eef014554626010c9574e7ccfa5657d0999445664045fb20a22a5b3168268b12abfb9933e2486e45b84b8d3973785c8e158915fb499493e0195cf70443bcc4517b7cc323b0051ba31ae44bdb415e63c66fa0f14334f75e376411b91bb7296a18f323b6ef37bee5c8b84ecbb65f9c00bd504b316a9a6a7c6091d28fe65c3436b5c9c0f89a47104767f7b0f79a8fc2901d49e31611b2b18c52b510ac054e926229f532d2187657244836254c193014fde766e8d29038e0a388774cb55335439732bb032399c32301052a8f155e3a49a33914581729b11fe0602bbac54b495c1a96b5ff16152a659617c7b79d8245c7d4aba65b5d5ccc941e24c09dea2630d1acda6811b21b78ac89b662581cba46586257c7348022632948cb1cc8a12c8c6712176e6154d5b2ce9e17b20ed770fc959f03f4a2e251845ca128031c5f37631f6e6241fce131164092ba676483c7050890279672a9f8a2329b752eb9b09eb7e4747e13587ec54b99582e2d905ed2b55ef7aa52a185caacf037d4946a95c94f0b80423fd4884a8370af576f0e4b1b6c851583312500b4420676a288019bfd8c2c24116eec8c5dd5822da84c446e09c47887b9c912b8c1786f9ad83e1d36961750175398606b42b2c3a095d104bc0aac455a72554aa9ac1d9ac5a801ab8c6723d53a259ba20c094bbe3094534c88817703a114f94b2070c4901a4bb7d02858b31dbc614aa7c3a10344956b940eb619adafd9c29397bd63c0600d910e97a0554515163221194dc2bcecb5786f081f79478af2f2559056b66453789ce53877db743a3c8378d20f92b3c42f46a712aa92eb765de933bd0a53a531f552218c5da3b57775881bbd8240eabc1881ec3519ca80243a8fc4ccaa7108099a959726b72aee522780649c91f4a82aab2045834b2f64039e542c37b7b81f602be2f0688cb5250f295591c999390499822140ff4325011860fa753b81e85bf29c866c361d910341f296c64b46c2a2e30b1535a5c0602593415d156b43036b21b14ba3a0c72e848c5ee03466cab97721d83defdab1f6708971d3c4581441ce397fe7bbc7a08acfdcc417c5f56dfdd4423e306f1f69a86e5b5ba3e031bf92a16702861a51a2feb974f4844812b8302dc83026ea566a1c110cd2c4af48bedd742f1c02cd3fca0dfb8331f414b115849bcb05a2df615b49a90ec0a433e8787e185142aa406003d35409ec842af304459b40fffa0d84340156b5767ee0ca6e2850ec8ccaed317ecf711e27d59b3c985555e44c935988092981da95b42573b9bc38122ed44a800510756429f1b0640685b048597842cbb93dc6b2f9144dcf41a624eb90202a30381410f4cbaaccf61e485524ee593ad7d5974f774ae59ba20c7c6eb0009b39962dc0f828e8538ef583b4dc40c09555a3968ab257d407cc4ab801c7521bf7564b163fab927b4703225b1b497a096b4eb984dfd3512ecb2eaea46fb53c3b3840af3c4aaf78b1461e0564290c0a8f93a1e1b1c50cdb5fd56970046103600a1cc109b58cc32e52c7a168e17107a9c77cc448b01a5a7dc90603d708c6d717c3165e772c74763821f35934a613b0297246370020eb113645d75593c5130072acc0483118067bfb8093b518066318c3f936bd29e8acba8318c68a3c47a1be713c5b5a3c3df82514a5db7f70150b44b3927aa5c7b5507f8e693eed04369340141b1c75069b5f3abb016833b936a1adf7ccbedfe775f0494acb6404307a787e19b2fcba2aa8b3cf94ea6aa4303cfe4821fc9a62ee5acbcaa42556d046e4ab2e65e57e4dcc874276c89f980ac1a52fde549064b7abeab30e81d540af393a51bb917d87098ae238946033f3bb31d82b418ea863b9fc2008613e4751aed8c9aaa41840579116b571ad6df0cfc1185b17612008900d104a83b67a36acd8c783c5b1c21026f03b4ab57b23bd160a103920729b13334395a500a2a5a126bd66c75c5c2a046a97ebb8565cbb65fc6a3e1c11a990e20a9c88c96aa3924961159ef22082e45c86a9bb80d7b8936cc9eec593e5e4523ddc5438c819551328557982cf6784b1720e4ed5ac0add457f573a041465bcbd7ca4e1d7d53eaadeda511962a36eb0a9ce0ecbcfbbbd9a2636e23a0c1c22683943639cd44af051ff235b8dfbb73a4dc6f5785a6f2b42e843228be53eb768d64c6f9d4355ae95f083e51ed57c437310")
	K := fromHex(t, "62a8c220b01793ecd183dea9762c5602211e0aab001cbc892d0a95693ab17cc1")
	compress_u_0 := []uint16{918, 369, 440, 277, 347, 731, 523, 493, 485, 282, 189, 787, 358, 409, 95, 937, 1017, 282, 101, 95, 956, 294, 84, 886, 494, 485, 306, 272, 166, 306, 766, 464, 451, 363, 793, 687, 203, 883, 235, 57, 695, 825, 117, 227, 672, 90, 170, 847, 239, 487, 546, 783, 63, 324, 920, 815, 911, 332, 124, 797, 1015, 336, 520, 946, 356, 886, 473, 289, 82, 257, 587, 181, 82, 678, 189, 962, 252, 419, 93, 594, 278, 968, 437, 846, 111, 348, 131, 881, 381, 886, 239, 603, 255, 148, 540, 753, 22, 924, 348, 869, 42, 222, 133, 809, 22, 821, 873, 543, 96, 441, 767, 636, 650, 728, 40, 223, 875, 217, 482, 990, 884, 711, 136, 522, 990, 819, 223, 929, 141, 644, 600, 485, 251, 533, 407, 164, 465, 876, 1017, 886, 440, 339, 742, 889, 901, 903, 473, 561, 643, 10, 844, 133, 487, 372, 961, 420, 995, 992, 986, 414, 970, 117, 281, 165, 1006, 572, 892, 387, 999, 573, 577, 805, 751, 508, 469, 601, 485, 366, 601, 37, 660, 520, 96, 651, 449, 85, 647, 683, 260, 142, 58, 292, 773, 771, 470, 703, 912, 398, 801, 24, 990, 365, 70, 631, 580, 66, 37, 698, 83, 244, 228, 38, 382, 37, 322, 163, 417, 306, 639, 26, 770, 314, 181, 82, 785, 247, 540, 129, 978, 682, 726, 4, 321, 675, 633, 748, 888, 151, 1016, 506, 925, 548, 495, 557, 412, 668, 689, 754, 750, 940, 775, 87, 801, 112, 156, 118}
	c1 := fromHex(t, "96c7855b455b6dbb607be569d4cbc46665f645eaf96b54c617bc9b4485ddee95271344a6c8e42f74c3ad95f1abcbccbd4e0eb7e65cc738a06aa1cad3ef9c27e2c33f1085f9cb8f33c547c7f74385a0ec64d99d5d485204b4642d5298da8bf0fc8cd6859416215f9bd36f703548dc7dd9fdce96ff50c261bc1670ce55d92a785348ca16d49cf68760e4f62f9f8a628bc2376b67239ef7741f8b8882decffc4de88d108a6579fb54781929d1b19dbfddb84d656ede851f9e5d8c832ac07421e7d1153c69e383afbd67cad7915129eef3c8f760e7f71864c9eff2575d96e5b9956509942208c6a2c15571e8aa0439a20349050f6cddaf903b163206deb765c49d440a5182ae53d0438e097e9520d428a1c9f4a70602eb548b1411dfc36120d2ab6a2d01418d9a27bb785f82bf7e9d93f85e8b9c711aabbceeb27ef01521c3c1891de892ffaaf5e03810479c6907dd09e2d71930d6bf2b99ddf05898c2610681226f5a4bf1c006e940deb9665432396d4920336c413471e077c38b85413b21e5836daee8cb4446bf328ab759bc4277fbc1043e67fe664358ea352f1babe7a1fd363d41e37a5207325c565e1794c3ce36ec97fd72fd7f04a18a266383630e92e02e9700a26830c6ead2057a7883bb46606e64efbd92feb5a87cf8eb40835b3f201288af60abb625972f774608e65189e016cc7b61ac28806966173e55d8572f7eb5f5f2de7adcad59f00e6f66623e7640645069877b779d373ad09400dfa2dcedeb65c9786bb7cac61de399eec7779ddbebda8a3262054a1318157de19d76612f71ae5829cec49a7b895f36e72cdc215058338aa4d9b99815ed13def463bb27ad3e8a9d0995f964436519bd7037e3cf73f79bec5115762ba82314d2152701e325aefb")
	compress_v := []uint16{3, 3, 7, 10, 13, 12, 9, 11, 2, 7, 12, 1, 12, 7, 1, 9, 12, 12, 4, 8, 3, 6, 14, 3, 9, 6, 10, 11, 5, 12, 0, 14, 15, 11, 7, 10, 14, 11, 8, 2, 12, 11, 9, 4, 6, 6, 9, 5, 6, 13, 14, 4, 9, 14, 12, 13, 11, 13, 13, 15, 8, 3, 14, 4, 4, 10, 14, 8, 1, 10, 5, 2, 11, 10, 9, 8, 3, 10, 6, 11, 1, 14, 0, 13, 9, 6, 11, 2, 2, 7, 11, 8, 7, 1, 1, 1, 1, 1, 1, 1, 13, 5, 11, 2, 12, 15, 5, 0, 10, 5, 3, 7, 13, 11, 3, 12, 10, 7, 0, 7, 2, 15, 4, 1, 12, 5, 13, 7, 5, 1, 6, 10, 11, 9, 14, 1, 10, 11, 7, 13, 1, 8, 15, 13, 3, 10, 13, 12, 5, 11, 1, 4, 11, 8, 13, 2, 9, 2, 9, 9, 3, 3, 8, 5, 7, 5, 6, 2, 8, 15, 4, 8, 2, 10, 11, 0, 15, 6, 1, 6, 2, 6, 10, 4, 2, 5, 12, 0, 14, 6, 9, 14, 13, 1, 9, 11, 13, 4, 4, 15, 15, 2, 15, 11, 13, 0, 15, 0, 15, 6, 11, 3, 15, 11, 6, 1, 15, 11, 15, 11, 14, 4, 0, 15, 4, 1, 6, 11, 4, 4, 12, 12, 10, 4, 0, 6, 1, 8, 11, 8, 1, 3, 14, 10, 6, 15, 12, 4, 11, 11, 0, 6, 10, 13, 15, 3}
	c2 := fromHex(t, "33a7cdb9721c7c91cc84633e69bac5e0bfa7be28bc496659d64ee9dcdbfd384ea48ea125ab89a3b6e1d0692b728b171111115d2bfc055a73bdc37a70f2145c7d15a69b1ebad781dfa3cdb5418b2d299933585726f884a20b6f61624a520c6ee91db94df42fbf0d0f6f3bbf16bfbf4ef014b644cc4a60818b31aef64cbb60da3f")
	c := fromHex(t, "96c7855b455b6dbb607be569d4cbc46665f645eaf96b54c617bc9b4485ddee95271344a6c8e42f74c3ad95f1abcbccbd4e0eb7e65cc738a06aa1cad3ef9c27e2c33f1085f9cb8f33c547c7f74385a0ec64d99d5d485204b4642d5298da8bf0fc8cd6859416215f9bd36f703548dc7dd9fdce96ff50c261bc1670ce55d92a785348ca16d49cf68760e4f62f9f8a628bc2376b67239ef7741f8b8882decffc4de88d108a6579fb54781929d1b19dbfddb84d656ede851f9e5d8c832ac07421e7d1153c69e383afbd67cad7915129eef3c8f760e7f71864c9eff2575d96e5b9956509942208c6a2c15571e8aa0439a20349050f6cddaf903b163206deb765c49d440a5182ae53d0438e097e9520d428a1c9f4a70602eb548b1411dfc36120d2ab6a2d01418d9a27bb785f82bf7e9d93f85e8b9c711aabbceeb27ef01521c3c1891de892ffaaf5e03810479c6907dd09e2d71930d6bf2b99ddf05898c2610681226f5a4bf1c006e940deb9665432396d4920336c413471e077c38b85413b21e5836daee8cb4446bf328ab759bc4277fbc1043e67fe664358ea352f1babe7a1fd363d41e37a5207325c565e1794c3ce36ec97fd72fd7f04a18a266383630e92e02e9700a26830c6ead2057a7883bb46606e64efbd92feb5a87cf8eb40835b3f201288af60abb625972f774608e65189e016cc7b61ac28806966173e55d8572f7eb5f5f2de7adcad59f00e6f66623e7640645069877b779d373ad09400dfa2dcedeb65c9786bb7cac61de399eec7779ddbebda8a3262054a1318157de19d76612f71ae5829cec49a7b895f36e72cdc215058338aa4d9b99815ed13def463bb27ad3e8a9d0995f964436519bd7037e3cf73f79bec5115762ba82314d2152701e325aefb33a7cdb9721c7c91cc84633e69bac5e0bfa7be28bc496659d64ee9dcdbfd384ea48ea125ab89a3b6e1d0692b728b171111115d2bfc055a73bdc37a70f2145c7d15a69b1ebad781dfa3cdb5418b2d299933585726f884a20b6f61624a520c6ee91db94df42fbf0d0f6f3bbf16bfbf4ef014b644cc4a60818b31aef64cbb60da3f")
	u_d := "a80b4b965538688494a4366429563966f29f8c24533561beea5c3948511324cc3b1101b4469662e343371c323eba495ebac549129a8b9472b3fc920bd3a8a77c212e8958122922ac09f362ef269fcdd041afaba5927b4393f1a1e44c449b36c08504b402c63a0b413474c7240bc1896672c33323552eb17888b3c48de5ab69b146aa01b3d704b409837a3d131edc069948c0bb6b94b089202db061a448d0a6165b6e38a159bd498141f89382502d1d1b2c1f26c93a7b90ba116a927ca6d5c2bccae1829f976230536c2b5521e805b2ea0cb496e5446ca9b4718bb70206722a1802b80a1b2f964b345c55a39cc9852c5451cc17928321c64c7454ab4eb07c745497a3893967f5257a29664aa2870762b869384184b4451137c88a4de31cbd503bd1b99cf8d58e95eb502cea04923c4ae430805e770d78d08d0e9131e5c207da84071724214c353e1d5805c7d93f4cb210f83932dc361a6b9c8a38d9001424890a089847bb1ee7dc66bf6b6f4936713bc587c038998609bfd8b9112cca16fb01187369cab988c7d8e2026f017f164ba9feb1b7fb450182d49bccc3b0eb29486fc8164ce1682f8a874c12c4f148752ea0b4da2839395a2ea3b40363ca57d3a00f9756613bfc474e2030ac93323fa98db33c3e45719b23f76138059997fa9465e0038a2abbe9b7369fd74c96f915ed9b18858c2c07442af6eb4297869e89a44c4b802eff822cc09cb05adacd9d310d29521f038b2decb27659495d1db083527150b058ab91266eb36098e4f0ba6477c2e768bdf6fa8893a19b2eb06ae91a03af936e39f293198b1eac4b5d4fb1062c26799b8612582c1304f920e05453c064321401669d69668d652649c6630bc67dd1090ce9171facec5fd0100565f86d51fbae4a2b2fa482074c46840b069bb297a3475b602c92a11f7a807669a2c3f496e7d8b141781c18213c3e4042681cb77fe812a0d95b368279dff29fb52b7b66162cef529edf0641df8a846bc7b059c248281910d26233102c20b31885fec50725a540b05052929309448bb862bc60ad35c048144fd3988872001b6fb41fc4694c5f69cc"
	v_d := "700227b01582911a9c51178fa0015bc1090dc1095bd01075c1199c40136870024e610b2751074e21188f10149c0010b6311c8fb01582611b8f81061ac1198f510734e0044e510741e014a9610b345117b6c119a9f118a9911ac3810627610b34401382611b68d0108210041af11882511768701282e0148fd010b60010a951074ef1081aa0015bf11868b0050dd0000dd0000dd0000d910a41f1081ac119c310040021084170025b911a8f70129c21085b00005ba011c340030dc10941910a5b10040de01482f11875610b0d21188fb015a9d01068311ca9701282911a9c10148fd00034f11868910a1a51071a511775700227810641b00541e0041a8116c3401368a01182f10800310c4ed0004ea0014e210834a00141c10900610b4e5117b6910a0d51178f910a344013c3310c1a311c8f910a00310c00310c4ef10827311c8fe0040d311c8f311c8f610b340010c340030de0148f400334c1199c21083400004ed01068f11868d00027611b82e014c3c10934f1188f00004e2118a9310c27"

	testWithTestVectors(t, kemName, ek, dk, c, K, c1, c2, compress_u_0, compress_v, u_d, v_d)
}

func TestWithTestVectors768(t *testing.T) {
	// Test vectors from https://github.com/C2SP/CCTV/blob/main/ML-KEM/intermediate/ML-KEM-768.txt
	kemName := "ML-KEM-768"
	ek := fromHex(t, "d0f1a25721155a28143a355f99c582c2d258a270b9f78941af004116e94f2f9825af17c50b600705ea1a9c2440df6803518a5ba558acb5b732d06a3c80e555fa374d80d82f08c5b47ca12cbe6520340538c2100b5e094392acacafe1ce4ad74fa451c4379219140103e9c3ba7ba683cddca0d3b02d57104c292b2e25bc791d8b11d5079477d7b0f930176fb0a5cda99afbfb6fca86226cb8152b250a536ca60b6ccf93880007068b41bbc5c6e9b8bd92af8a717e37c69ac7db7e76a2c36eb028c1e098915274b4d59def6c42d3c25bb35310846809c96bc43b639e52a3730654cc8db548faf21e446ca874a3caba777bac25b56902481c79a744d70d12130ad6bc8136349e3234c556267e97b0a8ccf772528299fa26111172c223f2484102917bdb6de7770682698763e5b2038779f812363a727f40949b76b6913c8910d6f51dd48983ba149c070590582662fbc9053b667e1eea1ca7173e421576f2d8ad7bf415899484bd1530b4fc855354952cf28d0f1216dfba00ec100bdd76c4f4b405c913baa78958ae31c578463877138cf89255a3935cfbd1b77dbb5f66b87543131da4aabb6781427f417e841141dcb47fcd82a92aeb3c50030d71eb7f3b17b0207a6cdf654d563a420bb742ac30c0e01235910886ff045652d5035b7ab98a1b6abac88ea5996b965c2d3f3305e075bbca267e8547c6c7769fb9f91e20849b524b7822965fe036a515c60e24636a3665b23b878c5b7658f7c49f2059255c89536426510875cbdca111bdc29183459340c125df30c05a7698490193d88c52410a14a7f12a118495413487b434568d105f2d7b9c0fc32e80a13e142528ca1825e0830cd41071aac7124042145be35e30d541c2ba31a82a5f479b3bad881164aa347386c9bfa505c9968fdea866120c8b4e809bdb1482d790a03fcb1ca88c15aae8047e1678ba66833ca430d592638bf3be19592027b3ccb044a9a4d01f3804c2fe0ca60cc7c017dc14dff60562f20d912650fc24449a78998d2b0ce4d9b131955affe7b5c12278cb5b23847c8090fc0578f71760918e9ee8274673845ca29f8d338fa89637265c518f902a9ba8ad9615764ce9835b322e0b5bb1fe928888318988e435cc3c3a918ccc773371a9687884f0822558ae634a54d7c74556528f2d7cb212f1901a82ae68905330b4550518b7b44c117f335f9c818635a2a29e59b39784b021d88354d707cfe0b3599b54fa4a1218261dc72a00cf2ccef8c6c2fe131899f9a239f545c4605296d7b39beb0832732eb608464df29d193b2f2c3b7c69cbbc2082cda14863071235a75544320c1c7930262f82ac7ba788c6c09586c2420d7385a0a6c50d050910e2956844b558fa78b6cb2969e866a0bcc1b7b980a02669c226b6c9267f6e66995d6b37eedc8e34f516ef48a69a3461f3742cc6268b26a8c158e4bf34c072d4e37a4e273ee3464aea81b57c52ab4d5a1e94a668c9a14612196f6a792646581a8ff545179323aaa8369c21181c1329464099cdf940fa56ce1f204ad4b048d5e783e1948b3493b273b2a33d8c0183e386786c7e7e421b1536610cecb16b7a98641b95693879a7d8bc444931cedaa6c45303aac0a48ac29041085526ffff11b531b1800f4e1fa75c4d008c4f9a112932c669d543551204405da8b4")
	dk := fromHex(t, "3261790e9484c6453502778de5faccecc56d94fbbb3d6a039d03ceb70b254f2a201a9192b5992885eb6c9f44b9bb70c584cc4891782e47caa4124cab6db66f6eacb09aec6d6cf5324ed22cfc2a3ca366ad3da0b0b9b0aa1ae7c07c9776c7f2734c28a4a57577378aa2b7fa49e489a8f7a2c80d360e622a3a41180fb1167e56533ff3e3a00365090b8455170896946c7fe95b100cd176bf3c442d6c96e8d4b996a980d671a2406c15a826cab288359cfa2b5a3580f5bb5584b6c8dcbc5024c7149fbc580f081da2eb739a1c560a39b1d1b02b15f730fef1315589455ca13e3409526a5640f3924090586cfd376c21375b77630b7e0aabdc8c811e564c7155158ac14cff898ee621af8c05cfcd2cc41be341215818e6e5a37c167a381ba1c4a65724f64da94ac06e530d260229bb2c61a1d17630aa3b3f4aa4a1db7f740bafbd9aba41490f19b6127dfb651c2032317123662830c6eab9ed4b47037c30a5d4048ea69de1769323a85726766277a82554c00cf3b500f6a9ba070b6e1e010fe667429d5259d027ccaaec559c760ae99b62c014cf76b08c89a72d3e233af5251976e288da3a8fa2820e6ca8ca953ab8f504060fd2c0104558af67c34691c1c4c2878d5904c94390b1639548e206659804a3759a6a7930921a3fc2853d8e90cd94b523fe1a30704030f04b9d4fc919fd22c27966aa53180916009e3f831a47b53f5951087d110c010cb81a415d88c3cb19031e3f30a21496903f59ce75742227b22ca7687ad3b05c0aca42e3747bc5fb1683b796a10bac6a158a745836478829707b70aca820d3a9b6adda8091bc0c44c9bca1f57bae60165940ac87815c1e36a783a88b2b68655d22ccebd1490d4440a00775dd1a68f0d3125c7cb48d8a91db2993542c5541137e817206705bb23a261eb3740d952b1af92181f8a629e156b7a6d703d9225706a5bee26845bd80552df9a620f16b4c1444ed2514ec8c2aed453bedb9805174ada9610c91aca500ccb221c109a56377bfc043fc0410340c0d4a509be7d1252d65af888905ad42bfd9cc0e84b63d82032de9cb1cc1264fb6b65c2304818c566fdb36c47e43b3e43b405f7b8944340f78830901507d145b1818c86d9b003d03e5a33310ca66c44d63b2bdb427cc0dd68fd32176292359ce639c9177454e6a36d7cb808e13a9d309310b455202ec6bcf2891d2590755b92e4f0354e766b049d77b4b5cbd8b332a6d1261cc58a384ebb842d92273202eb7b45570cc42fb039c18b4a1308062d6710601c209f5b425d3a6b8735911fdb6bb26a556595c5e69d66a5fc346552526d8a8a292b3cda869b28fab0b2cb6162e583e8c9c558c4c8c457cb83e67c2f03960011091fdf5a35b88712d3aa5e0d0961242653850acca27be2a8523b0557dc38a3fd90acddb190c813c3e86d50e2dac874f2316c607a3582aacef1c14dee409551a9e02f60e9737c9940799b39932cd645341444414c77f4fa9046ee4020fb68d607b46759615803572502a296c291965b2c92320c663d504e06a0bce3286a854c74a6256e168c0b750805359986493a25f75b5f8923bbbd4b2a30b6e9092ce0a5035939c47e900c4235a447796a426713e1bd269a13493d0f1a25721155a28143a355f99c582c2d258a270b9f78941af004116e94f2f9825af17c50b600705ea1a9c2440df6803518a5ba558acb5b732d06a3c80e555fa374d80d82f08c5b47ca12cbe6520340538c2100b5e094392acacafe1ce4ad74fa451c4379219140103e9c3ba7ba683cddca0d3b02d57104c292b2e25bc791d8b11d5079477d7b0f930176fb0a5cda99afbfb6fca86226cb8152b250a536ca60b6ccf93880007068b41bbc5c6e9b8bd92af8a717e37c69ac7db7e76a2c36eb028c1e098915274b4d59def6c42d3c25bb35310846809c96bc43b639e52a3730654cc8db548faf21e446ca874a3caba777bac25b56902481c79a744d70d12130ad6bc8136349e3234c556267e97b0a8ccf772528299fa26111172c223f2484102917bdb6de7770682698763e5b2038779f812363a727f40949b76b6913c8910d6f51dd48983ba149c070590582662fbc9053b667e1eea1ca7173e421576f2d8ad7bf415899484bd1530b4fc855354952cf28d0f1216dfba00ec100bdd76c4f4b405c913baa78958ae31c578463877138cf89255a3935cfbd1b77dbb5f66b87543131da4aabb6781427f417e841141dcb47fcd82a92aeb3c50030d71eb7f3b17b0207a6cdf654d563a420bb742ac30c0e01235910886ff045652d5035b7ab98a1b6abac88ea5996b965c2d3f3305e075bbca267e8547c6c7769fb9f91e20849b524b7822965fe036a515c60e24636a3665b23b878c5b7658f7c49f2059255c89536426510875cbdca111bdc29183459340c125df30c05a7698490193d88c52410a14a7f12a118495413487b434568d105f2d7b9c0fc32e80a13e142528ca1825e0830cd41071aac7124042145be35e30d541c2ba31a82a5f479b3bad881164aa347386c9bfa505c9968fdea866120c8b4e809bdb1482d790a03fcb1ca88c15aae8047e1678ba66833ca430d592638bf3be19592027b3ccb044a9a4d01f3804c2fe0ca60cc7c017dc14dff60562f20d912650fc24449a78998d2b0ce4d9b131955affe7b5c12278cb5b23847c8090fc0578f71760918e9ee8274673845ca29f8d338fa89637265c518f902a9ba8ad9615764ce9835b322e0b5bb1fe928888318988e435cc3c3a918ccc773371a9687884f0822558ae634a54d7c74556528f2d7cb212f1901a82ae68905330b4550518b7b44c117f335f9c818635a2a29e59b39784b021d88354d707cfe0b3599b54fa4a1218261dc72a00cf2ccef8c6c2fe131899f9a239f545c4605296d7b39beb0832732eb608464df29d193b2f2c3b7c69cbbc2082cda14863071235a75544320c1c7930262f82ac7ba788c6c09586c2420d7385a0a6c50d050910e2956844b558fa78b6cb2969e866a0bcc1b7b980a02669c226b6c9267f6e66995d6b37eedc8e34f516ef48a69a3461f3742cc6268b26a8c158e4bf34c072d4e37a4e273ee3464aea81b57c52ab4d5a1e94a668c9a14612196f6a792646581a8ff545179323aaa8369c21181c1329464099cdf940fa56ce1f204ad4b048d5e783e1948b3493b273b2a33d8c0183e386786c7e7e421b1536610cecb16b7a98641b95693879a7d8bc444931cedaa6c45303aac0a48ac29041085526ffff11b531b1800f4e1fa75c4d008c4f9a112932c669d543551204405da8b4704649a5d8034c6224ae18950bd7b979342c03c7499f7bab9cdea742db9e086cd1d49a515250dbceb9f6e3fcc1c7d5306918964b21ddb22207e03e57f0600da8")
	K := fromHex(t, "4b4eba37eff0315dc6009dcffb4dfbbb680f8f2ebde8715fa3d6daf70256a2d9")
	compress_u_0 := []uint16{943, 301, 130, 414, 267, 479, 868, 633, 480, 275, 919, 193, 58, 528, 923, 846, 149, 891, 748, 78, 593, 103, 865, 567, 496, 202, 937, 319, 984, 485, 354, 234, 748, 766, 462, 251, 408, 97, 328, 333, 190, 135, 569, 867, 491, 353, 377, 899, 580, 691, 264, 711, 279, 345, 163, 1, 626, 549, 964, 227, 767, 698, 782, 1000, 498, 448, 527, 801, 48, 240, 6, 832, 694, 448, 587, 805, 3, 1017, 1018, 1, 864, 767, 532, 140, 286, 152, 532, 183, 529, 54, 364, 563, 484, 433, 474, 709, 985, 875, 481, 830, 235, 306, 795, 58, 347, 826, 90, 150, 659, 863, 528, 218, 874, 392, 221, 595, 321, 49, 114, 882, 299, 958, 844, 939, 853, 717, 225, 0, 791, 8, 721, 395, 293, 138, 662, 5, 796, 552, 587, 11, 434, 563, 412, 101, 111, 978, 158, 862, 968, 523, 599, 36, 352, 244, 78, 798, 304, 593, 335, 752, 655, 709, 959, 334, 940, 218, 955, 740, 357, 290, 884, 559, 14, 156, 72, 92, 636, 1014, 407, 175, 428, 94, 450, 792, 913, 446, 816, 510, 281, 297, 811, 565, 94, 977, 315, 588, 534, 95, 374, 659, 362, 587, 736, 724, 504, 376, 757, 247, 590, 952, 747, 294, 267, 46, 71, 605, 30, 36, 348, 729, 504, 10, 63, 269, 102, 944, 803, 55, 921, 886, 97, 682, 30, 741, 827, 340, 266, 261, 115, 372, 807, 9, 172, 634, 262, 476, 45, 620, 774, 449, 420, 236, 82, 140, 781, 512}
	c1 := fromHex(t, "afb72488670b7d47769ee04d7479303a40b8b9d395eccdae13519e11f68df02993fa4fd89727963aecfaebdc3e9885815453be1c92e3d8eb8595d7e044ce8ad0b11765354a00729648fc38ffeaea30faf201f760c830c06300d0b602b764c903e4af7f0060ff4b21231e6142e12d11dac0d68ce4c5a65db1d9af1d9ecfebc8b4b10e5be9ac8525937e0da1366a23d6cd9441c52087dc2bf9cef4ea55371b0e00172310ed6225296269011ca3b8e402b2cdc859196f48ef89d7c82f78250960d1e384c73045f914bc8f16fbbb53ac6bb33bb9658944f78b0e708204177cda7fd92bac79211cc691fb06b37f19a5b4728d5e44bf1393167e61d7a46a2d092eb5f8e155ef3d4ee2beae490bb97044971e90c055b6f829f0434366c03ef20d99db1d86aa1e94bb33550a1534075d2727c08a9e0671d7029b0607471a3b5230d2308006bd48533a2d34ee1a4e2badd2e29a7c76c83984fa0aadb9954c99a1258faecb5ac9304619c8ff6003510ea38a720006ce7b96ae58e668b90cd310c05a6d3be3a3f1ca5749596919811fbbc324bbd2025b680e4e5f595e1e83865f05494415a0c979107c5e880133526cb60b82314b6bfe0d7a2d4be6e936fa9d9fe64e16fcce1207bff6e28fb3a7f2fa0a019745cd0d53a44553a19cf96be357a4cfcde068389f47347b7b977f73755ccf05afead81b488fce6f2964def2b6d1a59557ba59ad71af9c2900b63836ff669e8de1438b929edf802d59f1c4b76f65d04f7ceb8f9e36f87d4d8391007e1990191938e14856ed4f84f63d38b9b655189d7f76ef508204af931a75e1fd011ff899f13d0bfff972cb1a679e2f073587dfdf3b8a6457fe897fcefd1ff8956bf3d7ad1355611ddd9002af05ba9f3a66346ab26b015035be428f3146227be21447c9dc002d7ea371f2e98a156a1f2f2205d43961fdadd1939763ee054d07ca1a6f1bae0f102d207a9f11039d5b6041d9e92071d72f755c57f3525d0e1e954a1e465b5406fd5af583aca7e48cdc5a9c266ddae6f3c124c4a9698aed2d69ce2c4d25485d70480fdd0da18a4f6d42aeaf97baa4858b440602582a634f96938eadb63f9cc74ac1e54fd0772a3ff66fa92dbdb6a4ec7c7923d0ee6fb5f9bc300701ac6c2f920d7e23188ed6798cf47f0df850f40a471cc8840ecbaf7834bb5b78b3ace2bd0a5e9dee5fafda8d73388671abe30574ff6e0478e3d1138d50289cd8254129a9cc3a7ac758428d73cf58ed848abb192c70b842809b141b4e82a899bcbd4d281f15443287bc3eec2330367688da43f24e30f3ad10f435508b461608b18d3baead359c35dd61d29ff574a100686c8b4521a82a10588cc1")
	compress_v := []uint16{12, 1, 1, 9, 15, 15, 8, 1, 12, 11, 2, 15, 11, 0, 12, 6, 12, 1, 15, 13, 3, 12, 3, 2, 0, 11, 15, 9, 3, 3, 0, 13, 9, 0, 2, 7, 0, 11, 4, 10, 7, 4, 13, 13, 2, 13, 1, 10, 9, 13, 12, 5, 2, 3, 15, 14, 12, 12, 13, 9, 6, 2, 4, 2, 0, 2, 10, 0, 3, 10, 0, 11, 9, 4, 3, 15, 2, 8, 8, 14, 9, 10, 7, 8, 7, 10, 15, 6, 11, 10, 11, 5, 13, 13, 0, 8, 9, 8, 8, 8, 7, 10, 5, 12, 2, 10, 12, 13, 3, 9, 15, 9, 11, 2, 4, 3, 11, 15, 7, 10, 11, 13, 1, 7, 4, 8, 11, 8, 12, 1, 10, 10, 10, 6, 0, 2, 2, 4, 15, 4, 1, 2, 6, 3, 12, 11, 13, 5, 15, 0, 12, 8, 4, 0, 3, 6, 15, 9, 8, 12, 8, 1, 14, 12, 10, 2, 9, 13, 11, 4, 12, 15, 7, 0, 8, 2, 1, 9, 5, 4, 6, 1, 5, 7, 6, 12, 6, 5, 12, 6, 6, 13, 8, 6, 6, 11, 14, 10, 14, 5, 15, 15, 1, 7, 1, 10, 15, 15, 14, 5, 15, 12, 7, 5, 9, 6, 7, 8, 12, 0, 8, 1, 11, 2, 1, 3, 0, 12, 7, 15, 14, 9, 1, 3, 0, 14, 4, 4, 14, 14, 7, 12, 9, 15, 14, 15, 10, 14, 1, 4, 14, 6, 1, 4, 11, 0}
	c2 := fromHex(t, "1c91ff18bcf20b6c1cdfc323b09f33d00972b0a447ddd2a1d95c32efcc9d2624200aa3b049f382e8a987a76fab5bdd808988a7c5a2dc939f2b34fba7db71848b1caa6a20424f2136bc5d0f8c04639fc818ce2ad94bfc072891451675c6566cd668b6ae5eff71a1ff5ecf5769870c182b31c0f79e31e044eec7f9feea416e410b")
	c := fromHex(t, "afb72488670b7d47769ee04d7479303a40b8b9d395eccdae13519e11f68df02993fa4fd89727963aecfaebdc3e9885815453be1c92e3d8eb8595d7e044ce8ad0b11765354a00729648fc38ffeaea30faf201f760c830c06300d0b602b764c903e4af7f0060ff4b21231e6142e12d11dac0d68ce4c5a65db1d9af1d9ecfebc8b4b10e5be9ac8525937e0da1366a23d6cd9441c52087dc2bf9cef4ea55371b0e00172310ed6225296269011ca3b8e402b2cdc859196f48ef89d7c82f78250960d1e384c73045f914bc8f16fbbb53ac6bb33bb9658944f78b0e708204177cda7fd92bac79211cc691fb06b37f19a5b4728d5e44bf1393167e61d7a46a2d092eb5f8e155ef3d4ee2beae490bb97044971e90c055b6f829f0434366c03ef20d99db1d86aa1e94bb33550a1534075d2727c08a9e0671d7029b0607471a3b5230d2308006bd48533a2d34ee1a4e2badd2e29a7c76c83984fa0aadb9954c99a1258faecb5ac9304619c8ff6003510ea38a720006ce7b96ae58e668b90cd310c05a6d3be3a3f1ca5749596919811fbbc324bbd2025b680e4e5f595e1e83865f05494415a0c979107c5e880133526cb60b82314b6bfe0d7a2d4be6e936fa9d9fe64e16fcce1207bff6e28fb3a7f2fa0a019745cd0d53a44553a19cf96be357a4cfcde068389f47347b7b977f73755ccf05afead81b488fce6f2964def2b6d1a59557ba59ad71af9c2900b63836ff669e8de1438b929edf802d59f1c4b76f65d04f7ceb8f9e36f87d4d8391007e1990191938e14856ed4f84f63d38b9b655189d7f76ef508204af931a75e1fd011ff899f13d0bfff972cb1a679e2f073587dfdf3b8a6457fe897fcefd1ff8956bf3d7ad1355611ddd9002af05ba9f3a66346ab26b015035be428f3146227be21447c9dc002d7ea371f2e98a156a1f2f2205d43961fdadd1939763ee054d07ca1a6f1bae0f102d207a9f11039d5b6041d9e92071d72f755c57f3525d0e1e954a1e465b5406fd5af583aca7e48cdc5a9c266ddae6f3c124c4a9698aed2d69ce2c4d25485d70480fdd0da18a4f6d42aeaf97baa4858b440602582a634f96938eadb63f9cc74ac1e54fd0772a3ff66fa92dbdb6a4ec7c7923d0ee6fb5f9bc300701ac6c2f920d7e23188ed6798cf47f0df850f40a471cc8840ecbaf7834bb5b78b3ace2bd0a5e9dee5fafda8d73388671abe30574ff6e0478e3d1138d50289cd8254129a9cc3a7ac758428d73cf58ed848abb192c70b842809b141b4e82a899bcbd4d281f15443287bc3eec2330367688da43f24e30f3ad10f435508b461608b18d3baead359c35dd61d29ff574a100686c8b4521a82a10588cc11c91ff18bcf20b6c1cdfc323b09f33d00972b0a447ddd2a1d95c32efcc9d2624200aa3b049f382e8a987a76fab5bdd808988a7c5a2dc939f2b34fba7db71848b1caa6a20424f2136bc5d0f8c04639fc818ce2ad94bfc072891451675c6566cd668b6ae5eff71a1ff5ecf5769870c182b31c0f79e31e044eec7f9feea416e410b")
	u_d := "fa3b3da7215464536106ab8018e637ac3b27bd506bb9ebabe411b580e90f88f714fc3a734c1629e6db407f9c627f942f80a99bde05332eb5132ab4436a721b3a37b03cc647cab4b65e678c5a73908b2346123200f3976f3e2c2ebdd98dee39cb53065bb1c6a29cc0301410a9d0085b7497a30aa0ceed3c00f9da9bc2761ca2e31ec23625b8060b9f647225065805169082dcb11ca6a8fc323e19da0b68d4a725811e5e68afb5562c19ab4fcee27814f4097331b3cca3c2b8dabed5ba91db02000caa01284950b9131c6808011c3a707447028365723b851469b1c60222af4b4c6a9b5707789431fe20a2dc837841d4985118902eec43f05b2c216c9689f43a3a9b712eb01feab0121408ce2b95236f2513b7f5a098ab5a5daa6792633c4dda723281c6008477c85613c0e48599447759299366664c9d39327e77c17cc93b646309e7f07a6250076b2494661602cdb0364cd1bf333a0bb20bb43b918a629096811a4561133576914b40da012fd28054b36092007ed4495b55f52f0b711ceb1968549371e9532f92b0b876653fccc32213c77d14f86dbc5b6bad79a9b58b7937c414a54774f63b8ce4a127244469f4ac4e4a23ba1d977073014ed8926468c870c9275559a2276b139c658494261785903965e4914896440e6606987ae290cc43022851bbd8724da2c7ba9f506d754475dd401148357f57c36432f1135daa42e03798684028b55abbd5226353ba5182882c6d06cbd6074048e0c2cfb305ed68263ae3919f488e39d2002b85accb724355752ac5367fea5c2cda8485e1650a4eb82dc68b37073c64ac5b2ddc0a4be145c3a938b058b0c6f2d25a8520bb538a94e86549ca649762c415a3397f85004e85eb2bbd29bbc142b79bfa2036a6b5e0447705fa9f148c4654d34054dbce32562c6666afa9407681567b44c31451e00fce2146c3ec37133b32f6635768b413bf5b54a3a941a741c3fd9315bd74b465301966c61496fc087da62653c215cf07cb73112b784bce273c70065bba05a267dee5cf64bb791d3b674fe90f55f4ade8a575c7c949c9ab813d273992e8909c0400d57a9a972a1442d11b10683f6f91a3cb12a99fbc84f04781368211198bc4ef1604f1e50f783c8d685c623aa7c151e35e08c2152a4bb72d030d92b08363460e4af39691163502d60bfbf9aed9f3a1bdb4c54bc4ba18267971774f89854454d38ed51a6bf06b3c9e32b325f1552b69b1ac3c1978579f6655873f3925d677a6ab421e2ab404b7610c0fa60d29a240e357b9ad297b5d624956b23794166899785081872ef5028d102c9f89c13cb4a5ce4d5361491a51bd9989d393577437c0d3242d4713c2a9347e627c2757139c1169261bb5b63387134ed87f87b2c6dda4687183c6e1899fa3e16bee39cd817b2a218c6c743a8c1f968b18d67fc6ccc769357376e1500f3a8b224634e40c5a0d202da21310ca216cb7f5afb953785b38a63d276107e5358bcbc807d5c02ef89538c5236c61230d607e024ab775f088f1a1b2c8b220a5133536ca6de4289f4a072730f76d62153793e903673a8d34704d4a3371641769f5097340d7b1e5da7eed3318bcd3811ce31221805420fb47c2968889e06880429d"
	v_d := "c1090dd01075311cc381060dc1198fa011c3f10800c1094ec1090d311ca970129c70021a00108f311c757002270010a9510700a0015b00108f401382b00534911aa9a011a9d010825117a9c10941a00127311cb6c1199c911a75e0041a40031a00001a21080070128200108f5107347012c3a011688116b6511782b01568b01582310c4ef11882f10841911aa9001068511768811668b0158210149ca01182c119a9701275311c75f1081a400327f118c3b01582f118a9d0005b401368f11868c1090d21188221084e00001aa00134310c34d0001ae00427c1198f910a41310c00c1196840030070024e311c7581169c81060d611b9c21081a5117a9f10834c119c3b0050081061ad01075100434e0040d10045be0149ce00441c1094ee014a981064ee0148f611b82610b41311cc3d0005bd01082311cc3610b41311c9cb0054151074eb01568c1090081060df1081ad0002700109cb015c3611b75d000270010b6400334611bb6b0159c5117c3611bc32118b6d00034610b4ed00034f10800"

	testWithTestVectors(t, kemName, ek, dk, c, K, c1, c2, compress_u_0, compress_v, u_d, v_d)
}

func TestWithTestVectors1024(t *testing.T) {
	// Test vectors from https://github.com/C2SP/CCTV/blob/main/ML-KEM/intermediate/ML-KEM-1024.txt
	kemName := "ML-KEM-1024"
	ek := fromHex(t, "ed859032bbb74c7412a7271c8ef23a5a08c31551a2a5cb8ada78538ce6c96d11625cb45e87b133163b16a4705aba1514f006afccbccf3c5c05acbc4563771bb8508072745d0ba56f57566181c3073b6c2b0dda50a2a83e74c67bcd48c0820b809d03a6ae4193dbd3bc06d072d2c64fd1e0b408a9c29818cd2df7790f9779536b0a076b4fb57b56f8cbb8ea3290c2f8b381c993d9eb49d8b4873ec660895528ab9ac306a66ae8209e2db9b79cb89220fab9d5cbb290ac690c79199218229aa8276393a73c826459429baed8365b88733871450e9523959c3f28691a3a0622e923259d2c90a61ca1525caf75a3a4292036957a5966d55840927234e1c5445b6685396890e3ccb9869147e63ce0b23defbb1c00f46df3819dd4a5756a355f61c1793b25a9b713c3abd12605198083773cf26909ffc92cd423cd290ba1801c694e7c80d6e2c9c1b943c69a5e7387ade187b21bd2a598c49ec772cde74656f1b43fa21021bcb86db8f91e03522bb4a76823483033f68659b57fa972c42673795b9a5dafa229fd8818f940a1b38a925cf06af712332b789a6f64ce91c7010af8a531101de8541a3ba4b4b893bfe7e791e693a5987a3d2d7224aeb213c5aba14aa0686efbbf31258d37122c304151916a9291181ffe788864f52acf001d788a3d80e4ad14623e9c402090b73fae5cb4225802cc4ab9c323c8cb914231c31c14c12a20ab7b5df5b6815bc04d991a32b6ccd229cf9692bf2e549ceb66512be58afe284b1d4990e46b5bafcca72589024e0b710169445e793cbbda9ca2664882199a54c31484d9364c2545876758999027c8f6423fa1a9ea810731092ca41c2451f29452c24d1d120517e06eaac91a77a47dec3c036ff84bfda92bcb396a36a75007014c0b6882a939b7e2c109c6046c04e9c1e4b1bd83444cf7838ca909946b512cb8d06ed3ab66a62071eb439632cccbced23c06c3456cdabf321328a17263e6aa3fee0028bef312cc99477ac71c53909740502e340b7cc06111eeb90bb08c58bfb97d78acbb10e7240ee5672062783636565c1744217787ffa33287f5075464b97707aec6864b38c918e0ebaf40fc9aac6128db4863a40c80b9d23261344a370c7b2dcb76e38623e5443242bcce9fb872b4c589b886aeb9fc79347cbf216b6ea8d1c7f5c5802fa24d1e68a4dc161699f90681069898e41d34a82cced119189b6547587972c4b17851a292f728f638a90164b97416c5b5b9231f1c675cf12c8ec1ce4866673f61addf98950263680efb56124b5936862f5328a3de923c4b2435b543ceee3b9761b5515aaaaecbdbb9cf8202090c82a2e5301fd0aee4fa4b39b0302d1813ab87cc1ba15595c36ef953401a92b8a88465c29ca4062626bc45b2a762c4ed957e53551827322351701db42c73e340566a476f559ac776283816da810c76af10f41482577544302e80eb6ab2fb720c2a950464c62970a450e65983c336dde77039722c614143a2b72c40256cf2142365ebaf288b0d9d69b56671b45f72c90a26ad50229d8fd6291ae6306d614aba34b65af02fa7cc2f5d7c5c8f4b30dc715f65f82c6320088fe0cfd4f05dc63a22ffeb0f38f68c5e08af5603c605007c9efc1f1574c94d322191f248cf34246d9bb06c650e85a8ce1832860689af7791054bd01b79a11cc41ca05f3a174d9393191bc541678989b0a6fbea82c488aa828b077003a69b335098d00616e28d7853ab98b54c0b99840ff94393532285ccbc003120cd8b77c5c18d0e654750893de5c071a60a152350cc537a34a60c7032c21623c1bd0ce38046b986e786051e9891a7784223b45cc09682dbfacd92776f594377d07290667a81726c7a62ab1e883329b22205b3e72165c846261429dd3cccedd4933bb38f4b9000a066c2464844ab47899269033078c1f2473e564a2c697caeded4cda82b8516c287b23a84ee997fe9206874f73d130a73d5a14e10668365089a9695b7870806fa8431663120eac9b9133937117cb3bcf862e306747139253f181deb0352e6bb6b888561d46b3406fa31ec08520b275bacb6b1fd1bc40076958ed1bf96b70c5f567c9f83a3abdcc85e81aa0f99a50c2aac18a4177aa0bd1d7caaabb11e09a3bc211685396750a4723c8c8334433019c1844c9aa22b6e6995bc703ddb09edbe4f1a61a62a23531cf707976a861efef13e8347210d77f3d080e9ba89")
	dk := fromHex(t, "82b25c61f7099f870f988428ad662203f75c638390c593035b3aa1a91092b2d276fddb56bcab637e00a26ee68058376ad13c0e5d7b31ed29b2c24710b47b60246214bf308f8dd77379590842740c84ab6d8adc71a1cb22c4e98e58112d803998a104bd606cb439e0b686384148a209f5d171e4b63e29f66863aacba2c5a489600dfb64b65ce21f848b4c7621c6a3e65792497d1354a72e22405057cf9330332b419ca396cf69d374df850a2481c943488ab45cb71c992e12034baa94272a32cc694294ab6867d4f8758f972520ec5f90159fda33ad91d893273ac9a3e35f2976bbff525a2de84cbc55acbca91fa9ea91700abb87323d2a67c95d62cad3dc534aa83ff3fb6837ea908f0b953ca88bfb01b62068a1ade3c19e7b153f8b34b19295e054334f59b73855c030e597b688c3d2a14a336a2929393e0b27171315805e5cc3053b6d90843d82b933c1cc1574c18d9dda933f3b33b8cb7bf7143f6f595b1ec7113fd46f629930f28c4d4f666ce24bccd8bca5d74488de3b2480b176c0eb6f9dd19434ec33563303fcf7cdbe09c55d4216ad524379e451e74a2121c442c4412de5e137ed18421e07779b598860cc2e4e42c10f58a01617936c4548453183739c5624c68915b79a25a90257b1437a1583a9107d7d0587bee15570f3c008b9140f779cdce06fba05ac57991020162bb2096911594109f9032a09007eea48e1b5b5e11c9643d75284256c5a73b935668abb12aeeab7b040f71e17a74235e166d1942f7caa890869ccb1184cd44a9e82a89f31e83602e21de2b5cacfc254282470e0c66b020a5b058043e9135ab06c4fe1329d7a280ba6dc3de017c1041a26cf3b10d305c73594c469ac11b091bcb20412dfdc3ef0b712aee31fc2a81bfbd9990ca296fe45bcb992ba92d4148591a2f80990f218a2991bb3f3098a36c6568db8a40ab03b9e017305d893b48285a5178ee6b80dd2c5555837c3e976afd36b895c10acb438ca7009ad7723b31b3aa6a680156ec3cfe4e813dbf010e6e5b39a890b76984d20e965c5a39a6cda801ec55c55245abe3b946bda7c8e70c99ac62e2ca2c2ce165722d710a1c443a6467f91c63ed53c3f223580fbd058b6c8b4f134ae3b490ae97466e1983b0e669b22615df1732df9e9a98d4575720571ffa60dc888a65f6644902a9ad89a93c4b22132515d808ca445bab49e3276caa8a48d272b823477a0bc151491c229ab38bd6a4485257374cbcd03d6a6c655b6a1d06751995fa1c394116476f399673b5b40857cb9c68721168a936d89a3008923b81c2d7eb94ba63c3eff45b4ccb48a9d2142e8d5238ce904376bcd1e088b864a6a5acab75b138b9be44b08f00825bc3a804835337cac36bc41ca8bab90384a51341875c7ad27d109afa36e2965cafe1922811762a077af789b8d6c490c0f102b62869ca38a83effb05f14ac82346645de63cb60bba30b665a3f1c9f842952aea89fe630f6404b63164a39692180d806d65da3c1be076ae77b42d665edd2b93c1210427909d294a2fbad460444032a727960210005b7b3ad367cc300738187b3c64bbc00b16257f09182537129b14bf94c482bfdb9b82634821862a7fb0234ae0b5685582de054cb5575e9f8464336609cbd7ad5b486117ac4ea2468be9147e8c96b3a07993d5725f85c31c79405541c2c13b3abdc55b2dfa2ab02842a711a2b877097769c22be065622ab0a92d5108bfa10c644935ee4652efca95fafca3b5cccf0187a45708cf68838ffa79427a0400f8439f15b11e064b2b777c0715aa8a91c96ea7f1a851f47f8f077514a36c901059892273ca8695b3b418c8187558d18f1b9153d6c0b966e08f9a675889aa519224cdc4fc1fee51082ec26cea593124435f4bf95b3d852ad9554953088aae602e0ad3023d17576123929b1150fa496b850ab4e5f372ab7188f3127d2dcb970df56c4f5a2548903bd5ec50fb9196cf2374d7cc728243757743083d4a93c4b6adca54314a3200fe5a303aba4c07d4cf3eb632eca5b353190decd984395192d1f63d3d9291e00aa17e0872df27a405832d0a7b43115b05e6a4cb9293812ab26eb2e148e4b5082ba99039d6847a03be1693afc09a3ab95044107586e0db02720145c84cc800b669c51c8a96e526c4a99970234409414ed623cced859032bbb74c7412a7271c8ef23a5a08c31551a2a5cb8ada78538ce6c96d11625cb45e87b133163b16a4705aba1514f006afccbccf3c5c05acbc4563771bb8508072745d0ba56f57566181c3073b6c2b0dda50a2a83e74c67bcd48c0820b809d03a6ae4193dbd3bc06d072d2c64fd1e0b408a9c29818cd2df7790f9779536b0a076b4fb57b56f8cbb8ea3290c2f8b381c993d9eb49d8b4873ec660895528ab9ac306a66ae8209e2db9b79cb89220fab9d5cbb290ac690c79199218229aa8276393a73c826459429baed8365b88733871450e9523959c3f28691a3a0622e923259d2c90a61ca1525caf75a3a4292036957a5966d55840927234e1c5445b6685396890e3ccb9869147e63ce0b23defbb1c00f46df3819dd4a5756a355f61c1793b25a9b713c3abd12605198083773cf26909ffc92cd423cd290ba1801c694e7c80d6e2c9c1b943c69a5e7387ade187b21bd2a598c49ec772cde74656f1b43fa21021bcb86db8f91e03522bb4a76823483033f68659b57fa972c42673795b9a5dafa229fd8818f940a1b38a925cf06af712332b789a6f64ce91c7010af8a531101de8541a3ba4b4b893bfe7e791e693a5987a3d2d7224aeb213c5aba14aa0686efbbf31258d37122c304151916a9291181ffe788864f52acf001d788a3d80e4ad14623e9c402090b73fae5cb4225802cc4ab9c323c8cb914231c31c14c12a20ab7b5df5b6815bc04d991a32b6ccd229cf9692bf2e549ceb66512be58afe284b1d4990e46b5bafcca72589024e0b710169445e793cbbda9ca2664882199a54c31484d9364c2545876758999027c8f6423fa1a9ea810731092ca41c2451f29452c24d1d120517e06eaac91a77a47dec3c036ff84bfda92bcb396a36a75007014c0b6882a939b7e2c109c6046c04e9c1e4b1bd83444cf7838ca909946b512cb8d06ed3ab66a62071eb439632cccbced23c06c3456cdabf321328a17263e6aa3fee0028bef312cc99477ac71c53909740502e340b7cc06111eeb90bb08c58bfb97d78acbb10e7240ee5672062783636565c1744217787ffa33287f5075464b97707aec6864b38c918e0ebaf40fc9aac6128db4863a40c80b9d23261344a370c7b2dcb76e38623e5443242bcce9fb872b4c589b886aeb9fc79347cbf216b6ea8d1c7f5c5802fa24d1e68a4dc161699f90681069898e41d34a82cced119189b6547587972c4b17851a292f728f638a90164b97416c5b5b9231f1c675cf12c8ec1ce4866673f61addf98950263680efb56124b5936862f5328a3de923c4b2435b543ceee3b9761b5515aaaaecbdbb9cf8202090c82a2e5301fd0aee4fa4b39b0302d1813ab87cc1ba15595c36ef953401a92b8a88465c29ca4062626bc45b2a762c4ed957e53551827322351701db42c73e340566a476f559ac776283816da810c76af10f41482577544302e80eb6ab2fb720c2a950464c62970a450e65983c336dde77039722c614143a2b72c40256cf2142365ebaf288b0d9d69b56671b45f72c90a26ad50229d8fd6291ae6306d614aba34b65af02fa7cc2f5d7c5c8f4b30dc715f65f82c6320088fe0cfd4f05dc63a22ffeb0f38f68c5e08af5603c605007c9efc1f1574c94d322191f248cf34246d9bb06c650e85a8ce1832860689af7791054bd01b79a11cc41ca05f3a174d9393191bc541678989b0a6fbea82c488aa828b077003a69b335098d00616e28d7853ab98b54c0b99840ff94393532285ccbc003120cd8b77c5c18d0e654750893de5c071a60a152350cc537a34a60c7032c21623c1bd0ce38046b986e786051e9891a7784223b45cc09682dbfacd92776f594377d07290667a81726c7a62ab1e883329b22205b3e72165c846261429dd3cccedd4933bb38f4b9000a066c2464844ab47899269033078c1f2473e564a2c697caeded4cda82b8516c287b23a84ee997fe9206874f73d130a73d5a14e10668365089a9695b7870806fa8431663120eac9b9133937117cb3bcf862e306747139253f181deb0352e6bb6b888561d46b3406fa31ec08520b275bacb6b1fd1bc40076958ed1bf96b70c5f567c9f83a3abdcc85e81aa0f99a50c2aac18a4177aa0bd1d7caaabb11e09a3bc211685396750a4723c8c8334433019c1844c9aa22b6e6995bc703ddb09edbe4f1a61a62a23531cf707976a861efef13e8347210d77f3d080e9ba89fa12bd4f75caa74f23b4af606902f6187dd9be62a43b1b529344f1114e69391d5f574ef7f013d4336801fed022178c3ed91d0b6d51325315fc1dcabf4770a2ea")
	K := fromHex(t, "6c4f4a231255a8cdfb7424c8dabf3a624cefaffd28964efe220ab6178fa6b324")
	compress_u_0 := []uint16{1415, 759, 1924, 643, 1597, 759, 479, 1571, 605, 190, 253, 898, 1934, 1950, 812, 532, 1117, 1076, 1877, 917, 1070, 942, 1981, 1617, 146, 501, 1665, 1978, 1922, 1408, 1432, 477, 1783, 1950, 1737, 320, 1084, 322, 1019, 829, 1454, 1813, 1561, 69, 658, 1965, 1456, 986, 50, 1071, 268, 103, 1552, 724, 1257, 1419, 480, 610, 1473, 1431, 696, 559, 1748, 1297, 842, 1767, 501, 989, 1800, 589, 950, 1201, 1291, 1390, 1058, 1957, 754, 680, 1255, 346, 1600, 1314, 1970, 1215, 1182, 1178, 358, 1157, 1404, 400, 1153, 508, 1705, 511, 189, 233, 118, 1745, 647, 836, 636, 1559, 1341, 1724, 623, 1004, 1591, 1818, 288, 64, 1418, 30, 1679, 1422, 582, 616, 28, 671, 1704, 253, 164, 953, 1291, 628, 1407, 1127, 1770, 1233, 1106, 564, 711, 1170, 1569, 816, 283, 1811, 651, 1484, 1106, 462, 1246, 1324, 119, 1244, 1124, 840, 992, 559, 1232, 1810, 1490, 1496, 319, 749, 179, 1911, 1685, 260, 984, 1181, 18, 1844, 412, 1144, 715, 1892, 82, 1040, 135, 1574, 510, 1711, 699, 910, 1115, 114, 15, 1560, 46, 255, 1272, 2002, 937, 615, 835, 1, 1222, 1412, 1711, 896, 849, 1786, 869, 978, 1628, 546, 693, 1376, 1098, 789, 1806, 311, 418, 1569, 1606, 586, 1302, 204, 1273, 1819, 1106, 508, 44, 1576, 1561, 1491, 755, 1000, 551, 1809, 493, 581, 1703, 1972, 420, 1570, 1292, 656, 369, 437, 1886, 138, 1192, 1646, 1831, 133, 1855, 1662, 1676, 752, 51, 1705, 1376, 561, 1454, 1054, 65, 59, 1646, 1449, 368, 109, 497, 455, 412, 639}
	c1 := fromHex(t, "87bd17e107d5e37b7d67c45df2453f04e778cfb38c425da461d52be742d7f53eca92a84fa0752f78c062b63bf7f67cb281c243a1ecaf67aead78868b20a9d6c3567b32782143ce00616aa573b1e01153702f8bab17513ba24a3b777dba87f026d92e960b75ab084b2f2f549d532b4016a9ec7fe9494d9aa5907c854c20f993eafff4221d7688f6a188c6a70bf794d76f62df8d350e122028d6038f76ac91d0c4814fa1ba1fa4c8dd42e9f4d733aa3b9a52a4d1b1241962986d64e28b62ae149de34d96de819b64441af85e044d894b17bb3f69d72cee5e698260af9312a03967f0b82cb24b01828730b17f5ebd2bc76d510e0fc0b00bfe814fe9a7ee4c430b803109fb6ac0454ddf65931e9745542bb02ab1620ebf8968426c6425599419f9dcb814f9c302146778baf342df8922de9e229d9af6a4113143211597da785d11a874f3c90bf1733f331a5e3348355863e45a0f0661076e4e2d5cda109fe370e64fedfaeee5d3ea0131d7b8bf3a6344abf7dcc77699f4325c6f0e9aaa8b4bfae413e22c5ea945b5d59b417c733780d03069f169be61813c15391f2dd1619cd93357ceadf8688e97b37e162a19335e3e17c676e540a0646a50f0c88357dad7e868ac1570e0ec068bce9b87e1de6c3e03098f77ee87854d97e20cf9e1bc15d9ce1833814a9f15667d8f61396bfdaf0132211ba1e639f65a4a7735e6edf3b6355f586e7434a5ffba59f7790c091c806debd0921d64d3360cf8eb42aa6238924865dbe79b50552317752633b44e1f64ebeab992225c395010a91d0966ca3b5356d2023489c38fbab20582a6cf6ba5d946e97a090da7496f8ab2e197f3a2113893980d6c48bcf834536b255ff6520350638e563b049ade5243a6c7210e56d8873f96ad5a2a8d527d4598255b7f5d5d663e8e18917f2ffa7fca37a5e0917c8a2343446b3587345ca13c78c29e813455744b8037a3c6da691087f9cd3b3bb64b948eba4eddf7d0dbcff1d31b2759e0c82d36b56e3ea3c0d21fe7d19855ff5632cdeeea2c78a5bdea96263445c653e4a12447d4c1200240ad537875571d4bf88dcc40b35437942b85aedeb211969551a9ff863704d6d9f097858ff2da1d3525aeb656a908819d0438ebb16eb81b10087f3c0d9c036a59bf3ee15579f85f1ecb16ecbf807167548635401ab6c1ca6c1edb6eed3c1efe0d2eaad683ccbfc89aa7c4dea656983cc0b959445f92c596011667e83528a964ba4a067991e745372bc05792958ed2f776b57ec98f8181e2caf7b542999c04dea5075247e70fa43ceae837fc9b3a9354668309cfbffe0194937c7064e03ad6c756c5b3e4bb0c514018d31b7084db418f105b48ba93b86095591df4157aaa82f9c186e54181e6966751ce26a6f8357b61000944218bc69c309f720a35cff5dfd27bad2197000c3f9ccb97bd00049a4a66bbc18105026430fab2aac0713534473cf1f46cf92d31f3129eeb95772f2c3ad5590210a3fcbd6603cd7420fca5fb5516629edf73d86ef03899f279d3b8f1962a71dc0d3702cb164bacac3414e9f4736992ac8fe2afeffeca9d6dfb0af61901adf9b210afcb2a1e990cd9bbba5b90ed1e230f9e39b1888ccd8fd9e1b5c37bfbf802fd6d90adfa632ec26f90cd0f4d7ab3859ef964d726851c4d2b120d154c86ac60a05918a9b0381f4cdad739261d43ce4e79de1f4fbaf09cbb3dc329303bb03af964fbd45c0b1e801530293e39754ff36c5681395931b0bff4896cb3ece79c531c72597de5451a1c56448cc25d2aacc9f1404b6440f6eb10567b0965d8d18a0368ba4d1723359130fadc83f80848c23274e7cdfcaf97ee63750cb206e25caf8b0b8b2cf066c2ccd61d844873d912109e28ee334f71eeba2d3cdc31d93415e55e82362119f81cef055694d869bff6e0d70e1ed69834b9fd40768611e1d88be19bd77d946f4910c0564b1ce0ccf0e53a45b8f065d8ec2023f226f20928f351971d")
	compress_v := []uint16{30, 25, 7, 11, 10, 19, 9, 12, 15, 11, 10, 30, 21, 28, 19, 13, 1, 1, 28, 3, 29, 9, 24, 27, 14, 12, 0, 11, 12, 1, 24, 26, 21, 10, 15, 24, 29, 0, 21, 12, 2, 9, 28, 8, 14, 9, 20, 2, 22, 31, 15, 21, 3, 23, 9, 1, 6, 17, 20, 9, 24, 22, 2, 10, 11, 2, 15, 30, 4, 23, 26, 4, 25, 28, 22, 8, 22, 3, 5, 17, 2, 21, 24, 16, 30, 13, 31, 4, 0, 5, 13, 25, 17, 16, 0, 23, 1, 1, 5, 13, 29, 22, 19, 3, 12, 18, 21, 25, 26, 11, 22, 6, 27, 26, 0, 7, 30, 27, 19, 28, 24, 15, 25, 26, 22, 25, 24, 14, 31, 24, 18, 30, 14, 12, 30, 23, 21, 30, 3, 26, 17, 1, 28, 2, 11, 20, 26, 22, 5, 19, 15, 15, 1, 22, 26, 19, 23, 15, 27, 30, 7, 13, 19, 15, 22, 30, 4, 24, 15, 24, 24, 0, 9, 3, 4, 6, 29, 7, 24, 4, 5, 16, 19, 30, 30, 14, 27, 25, 27, 16, 16, 27, 7, 20, 18, 5, 20, 10, 1, 8, 7, 2, 11, 17, 23, 13, 15, 20, 10, 5, 19, 20, 12, 23, 18, 2, 5, 23, 26, 13, 30, 0, 27, 27, 23, 14, 6, 25, 0, 26, 14, 9, 18, 11, 14, 3, 7, 18, 3, 7, 2, 20, 12, 6, 25, 3, 1, 17, 9, 28, 21, 8, 4, 21, 21, 14}
	c2 := fromHex(t, "3e9fa566626f295ff96c21f0d113de8e81c502d6553ddc41652271e41215f6bf3a6e0a26d284ad504b3c4fae26995b644789a262e8db27a0b41c21b82194d6ed1c4cd6ac97355b83e3f7e4f8656d33761f4bef98bfd50f1d03178b6a5be67bc1ea79dff6a7cd673dc10f63900631fd6052e0f4deedbc21dc87ca42554047ac78dba3aa4ccaae14e5eae6c1ded7990cb44b72b971e43882329347888957446a75")
	c := fromHex(t, "87bd17e107d5e37b7d67c45df2453f04e778cfb38c425da461d52be742d7f53eca92a84fa0752f78c062b63bf7f67cb281c243a1ecaf67aead78868b20a9d6c3567b32782143ce00616aa573b1e01153702f8bab17513ba24a3b777dba87f026d92e960b75ab084b2f2f549d532b4016a9ec7fe9494d9aa5907c854c20f993eafff4221d7688f6a188c6a70bf794d76f62df8d350e122028d6038f76ac91d0c4814fa1ba1fa4c8dd42e9f4d733aa3b9a52a4d1b1241962986d64e28b62ae149de34d96de819b64441af85e044d894b17bb3f69d72cee5e698260af9312a03967f0b82cb24b01828730b17f5ebd2bc76d510e0fc0b00bfe814fe9a7ee4c430b803109fb6ac0454ddf65931e9745542bb02ab1620ebf8968426c6425599419f9dcb814f9c302146778baf342df8922de9e229d9af6a4113143211597da785d11a874f3c90bf1733f331a5e3348355863e45a0f0661076e4e2d5cda109fe370e64fedfaeee5d3ea0131d7b8bf3a6344abf7dcc77699f4325c6f0e9aaa8b4bfae413e22c5ea945b5d59b417c733780d03069f169be61813c15391f2dd1619cd93357ceadf8688e97b37e162a19335e3e17c676e540a0646a50f0c88357dad7e868ac1570e0ec068bce9b87e1de6c3e03098f77ee87854d97e20cf9e1bc15d9ce1833814a9f15667d8f61396bfdaf0132211ba1e639f65a4a7735e6edf3b6355f586e7434a5ffba59f7790c091c806debd0921d64d3360cf8eb42aa6238924865dbe79b50552317752633b44e1f64ebeab992225c395010a91d0966ca3b5356d2023489c38fbab20582a6cf6ba5d946e97a090da7496f8ab2e197f3a2113893980d6c48bcf834536b255ff6520350638e563b049ade5243a6c7210e56d8873f96ad5a2a8d527d4598255b7f5d5d663e8e18917f2ffa7fca37a5e0917c8a2343446b3587345ca13c78c29e813455744b8037a3c6da691087f9cd3b3bb64b948eba4eddf7d0dbcff1d31b2759e0c82d36b56e3ea3c0d21fe7d19855ff5632cdeeea2c78a5bdea96263445c653e4a12447d4c1200240ad537875571d4bf88dcc40b35437942b85aedeb211969551a9ff863704d6d9f097858ff2da1d3525aeb656a908819d0438ebb16eb81b10087f3c0d9c036a59bf3ee15579f85f1ecb16ecbf807167548635401ab6c1ca6c1edb6eed3c1efe0d2eaad683ccbfc89aa7c4dea656983cc0b959445f92c596011667e83528a964ba4a067991e745372bc05792958ed2f776b57ec98f8181e2caf7b542999c04dea5075247e70fa43ceae837fc9b3a9354668309cfbffe0194937c7064e03ad6c756c5b3e4bb0c514018d31b7084db418f105b48ba93b86095591df4157aaa82f9c186e54181e6966751ce26a6f8357b61000944218bc69c309f720a35cff5dfd27bad2197000c3f9ccb97bd00049a4a66bbc18105026430fab2aac0713534473cf1f46cf92d31f3129eeb95772f2c3ad5590210a3fcbd6603cd7420fca5fb5516629edf73d86ef03899f279d3b8f1962a71dc0d3702cb164bacac3414e9f4736992ac8fe2afeffeca9d6dfb0af61901adf9b210afcb2a1e990cd9bbba5b90ed1e230f9e39b1888ccd8fd9e1b5c37bfbf802fd6d90adfa632ec26f90cd0f4d7ab3859ef964d726851c4d2b120d154c86ac60a05918a9b0381f4cdad739261d43ce4e79de1f4fbaf09cbb3dc329303bb03af964fbd45c0b1e801530293e39754ff36c5681395931b0bff4896cb3ece79c531c72597de5451a1c56448cc25d2aacc9f1404b6440f6eb10567b0965d8d18a0368ba4d1723359130fadc83f80848c23274e7cdfcaf97ee63750cb206e25caf8b0b8b2cf066c2ccd61d844873d912109e28ee334f71eeba2d3cdc31d93415e55e82362119f81cef055694d869bff6e0d70e1ed69834b9fd40768611e1d88be19bd77d946f4910c0564b1ce0ccf0e53a45b8f065d8ec2023f226f20928f351971d3e9fa566626f295ff96c21f0d113de8e81c502d6553ddc41652271e41215f6bf3a6e0a26d284ad504b3c4fae26995b644789a262e8db27a0b41c21b82194d6ed1c4cd6ac97355b83e3f7e4f8656d33761f4bef98bfd50f1d03178b6a5be67bc1ea79dff6a7cd673dc10f63900631fd6052e0f4deedbc21dc87ca42554047ac78dba3aa4ccaae14e5eae6c1ded7990cb44b72b971e43882329347888957446a75")
	u_d := "fc284d375c41242a4d0ba39fd753139b415b482cc628153618576deb3b5dcbb65f944ca4ede03292fac8341c8f187930522bc6078b20e2b6207846543b39b8e909072ea4c73f396451d06cb4710adb9949fb37900c033e5a69916bd43819cb835985b32e83646edb3b08067a33388db8d6c6ca1445f82723298a85827c7b81b777469275eaa82852a733d3fa3333b117c040b11cf4540a649e8428aff503661abab8d48106011903a97a90b2933e2e3044d2ba190bd16033d83fef88723d4b7d06573984e476f6e952cc01b822c49606f72ee98786c1607e2357554cd638d3e7b776099807124c2321c2b37a1a3f06781d50bb9e42748a34c085b069dbf09f3dd3ad70745c14970b18809e4be0191468cbf3853e4d2500c2778fdd0a5b6475b5856563568a3766d48bf9365078ab1fa7629f339a3b44c81415d8b806a7334820a0e98997cb946580d3b721033bd05ac8ab829f34a84258622cfa0b0e9247a7a08b0dc7eba8a46a4c5330adbd08393b196b6a0006743a9356120b28432e9ef240c1b49856bc8c3100a617ca9b3f450eda9aa84c174c5e6829f6db2ee9b397acd73215b8b7087a8644384ad3520deb072dd0b09e2b498156d647953b11beab92cffba01989a6d3358d93d12e5a2abf48923cc2874cc6bb1385990b47737cab46c325664c0cec72a8fa568966b640cb23bfeb62e8392d5d9c02708bb48edc47e0b7863b65caeea746838572304582b68c11c65832fae891bdbc5751f71acc917d77918e8d374c8552c14c9bae6a82bad39b3edcec97f26bbcd0769c0250b2df4677b0063f64a168f79a7514d12ded307912cc9a2f58ad66195f1eb5a97f9835e9ba639b171c36c234ea96b1ecc07c4a9b43cc2309d3f72d9af18d50b2696f5c8eb30a59b1ea4c4cc587d8db21096b66be1b55c7997718298fd6917161f5ac32524dd0c40a8918bbca080c92dab466657c92bbb7bdf8c7cf0c7a59b4899533ad0ee752077b67b8a87c95416fbcf1b5a3fa67a9ec78346ca30f41a3ba3157b7bbaad738a4367c8fa7b02a0b3725c2c9292d7760abc66db569c28051980f0285fbd5b391715ac73b33d3f23b2440a30afaacce322a91d6c6e492aa18d9cd3492ab40ab2fd3798673744afab04323f710c5c01df4e605d5200099f410b908471005b79a630a3535ad36682399ba630bdb4e319244ddac6dda8647883567913085f23a1877f895a36479e0404ee0812d1ec3972e5b01d2d01961d57e45a352db2410b99818fe9c180b4b8fdf8413822a79be2834eb89052695bb40794ac18b18bda99551e431c6f726e22a88ff4a7e32c2a385b659c4714d0ef9490a205c9bea0ab9d3516f74149359621947a71050470e592fd98b5a6eb54d6a4669126423cb2c2391d21f33bc864cc31760cc3429962fb7f9cc3c843e25322cf720c67d8c01d1e5c4da1205fb85c74059a0a3a7c2d2160477f2c68a966b049331eca66ceb051e4b6079b168a98d408844b066be82ba0a327d553a12f5e76f03da2b6842013b7010215128c05681fa63acc27bcf6a284daed07a81f6cc775a65412600929a3c869505cc391a29da71b5b78ad8c2add3a79f80bb31555a2530953d84ea4c269c09a33aadd1033424e4b56faa3474581abad9c12e221b1673c9ee095a860152a92c2dc625994cf45b86e9b28e5658a0f722676810fbe7a8ac72a39611ca5e26cf69499462964ea342346f6a917beb251691764721c8dc7a4a0b896464c7b6d9f5231805a789026e1eeb988a8c9ac95b590bb9be89621c5a4b516b963ea7851287aa40e0d83b979b3e86732a89e05185a4136aba131351b8cae085ecb873d87b36104bba269cc4ebe530381b32dd929c80018b507cb085684bd359008c807750a63f48b6c5704a04f68711e5f4260b3458a3c7817c3aa0972b463bd238abd647bc2121869908ee83c448f575a2919bb781add91352ff2223175087e4c7a096f8758e335e59a37451778f3418bccef79bd92333ed8b6ab8b2b7f6eb25cb16a364eb7c2e95aeb0a61b6e0925a22120c1352a21f2963f5b9e5e193e78381135ab07e3b77633dca168e245f11088db840ced086bfc287cf5a1c8a50154c7b12dd044b75dfcc844aa7aa7118f9af416ed979ed6f543b7e564e979c014f5a2fc5081106465790918"
	v_d := "319ca2d8824710947ba8034e1886471014c38918b6b98754688006618b13c98b3ac199afb0054e008047e08406c119a989084118169cc90b0089084ed0803a610b34b0853a21080df198c9189688389195a8830670926e21883ac1198fd0004178040d1816c3a09195910a1a291ab6f10834f1881308926ed09088c11968318c54990c1a0080204895a2e91668009095688006088254c91b8fb98713e014758998a2918a47f10827f91aa900802d319cafb917b6c18961291aa9f198a2c1095b991c9c5117c3b0054e319c958918c33811a9e98606610b0d781482911a8f08927b18866168108f919a7b598961f91ac3d88254b98761f118c3a0119c18169cc10900a88313a00127c98b2dc1091a081268b917c3310c5bf99aa2f91a688196afd81282518720210841680034d8020d78946e598954181682108420b91782e0949551070d089295918a54310c00f99aaf59095b7092a20010a9b0853a518747b08513d8127538812dd01082e00427298a1368906ea813b6890834a0918889085b"

	testWithTestVectors(t, kemName, ek, dk, c, K, c1, c2, compress_u_0, compress_v, u_d, v_d)
}

func testWithTestVectors(t *testing.T,
	kemName string,
	ek, dk, ctxt, sharedSecret1, c1Known, c2Known []byte,
	comprU0Known, comprVKnown []uint16,
	uDecodedKnown, vDecodedKnown string,
) {
	kem := (kems.KeyEncapsulationMechanism)(oqs_wrapper.NewOqsWrapper(kemName))
	encoder := &KemeleonEncoder{}

	encoder.Init(kem)

	// Specific to Kemeleon: Check KEM output size
	if kem.LengthCiphertext() != encoder.kemCtxtLength {
		panic("Received invalid ciphertext size from KEM")
	}

	// KeyGen: Use ek, dk from test vectors
	keypair := kems.KeypairFromBytes(dk, ek, kem.LengthPrivateKey(), kem.LengthPublicKey())
	// No Encaps: Use K and c = c1 || c2 from test vectors

	// Decaps
	cd, err := cryptodata.New(ctxt, kem.LengthCiphertext())
	if err != nil {
		t.Fatal("cryptodata.New(ctxt) failed:", err)
	}
	sharedSecret2, err := kem.Decaps(keypair.Private(), kems.Ciphertext(cd))
	if err != nil {
		t.Fatal("kem.Decaps(sk, c) failed:", err)
	}
	if !bytes.Equal(sharedSecret1, sharedSecret2.Bytes()) {
		t.Fatalf("test vector on sharedSecret: expected %x, actual: %x", sharedSecret1, sharedSecret2.Bytes())
	}

	// Now that we checked that OQS can handle this test, we can dissect the bytestrings into components using our code

	// splitCtxt
	c1, c2 := encoder.splitCtxt(ctxt)
	if len(c1)+len(c2) != len(ctxt) {
		t.Fatalf("splitCtxt(ctxt) was not proper: len(c1)=%d, len(c2)=%d, len(ctxt)=%d", len(c1), len(c2), len(ctxt))
	}
	if !bytes.Equal(c1Known, c1) {
		t.Fatalf("test vector on c1: expected %x, actual: %x", c1Known, c1)
	}
	if !bytes.Equal(c2Known, c2) {
		t.Fatalf("test vector on c2: expected %x, actual: %x", c2Known, c2)
	}

	// decodeBytes
	comprU, comprV := encoder.decodeBytes(c1, c2)
	// test vector only considers first 256 integers for compress(u)
	if !slices.Equal(comprU0Known, comprU[:256]) {
		t.Fatalf("test vector on compress(u): expected %v, actual: %v", comprU0Known, comprU[:256])
	}
	if !slices.Equal(comprVKnown, comprV) {
		t.Fatalf("test vector on compress(v): expected %v, actual: %v", comprVKnown, comprV)
	}

	// decompress
	u, v := encoder.decompress(comprU, comprV)
	// hex string in test vectors uses full 12-bit representation
	uSerialized := make([]byte, 0, len(u)*2)
	for i := range encoder.k {
		var block [256]uint16 = [256]uint16(u[i*256 : (i+1)*256])
		uSerialized = append(uSerialized, encoder.byteEncodeSingle(12, block)...)
	}
	u_hex := hex.EncodeToString(uSerialized)
	v_hex := hex.EncodeToString(encoder.byteEncodeSingle(12, [256]uint16(v)))

	// cannot compare with the original values of u,v as those were captured during Encaps and often decompress(compress(x)) != x.
	if uDecodedKnown != u_hex {
		t.Fatalf("test vector on u^d: expected %v, actual: %v", uDecodedKnown, u_hex)
	}
	if vDecodedKnown != v_hex {
		t.Fatalf("test vector on v^d: expected %v, actual: %v", vDecodedKnown, v_hex)
	}

	// this time we should get back exactly the same ciphertext/intermediates, as compress(decompress(x)) = x always.

	// compress
	comprU, comprV = encoder.compress(u, v)
	if !slices.Equal(comprU0Known, comprU[:256]) {
		t.Fatalf("test vector on compress(u^d): expected %v, actual: %v", comprU0Known, comprU[:256])
	}
	if !slices.Equal(comprVKnown, comprV) {
		t.Fatalf("test vector on compress(v^d): expected %v, actual: %v", comprVKnown, comprV)
	}

	// encodeBytes
	c1, c2 = encoder.encodeBytes(comprU, comprV)
	if !bytes.Equal(c1Known, c1) {
		t.Fatalf("test vector on c1': expected %x, actual: %x", c1Known, c1)
	}
	if !bytes.Equal(c2Known, c2) {
		t.Fatalf("test vector on c2': expected %x, actual: %x", c2Known, c2)
	}

	// combineCtxt
	ctxt2 := encoder.combineCtxt(c1, c2)
	if !bytes.Equal(ctxt, ctxt2) {
		t.Fatalf("test vector on ctxt2: expected %x, actual: %x", ctxt, ctxt2)
	}
}

func TestCompress(t *testing.T) {
	// relevant values for du, dv for ML-KEM
	for _, d := range []int{4, 5, 10, 11} {
		t.Logf("Testing d=%d", d)

		// check that compress(decompress(y)) = y
		for y := range uint16(1 << d) {
			cd := compressSingle(decompressSingle(y, d), d)
			if cd != y {
				t.Fatalf("compression correctness violation: was %d, is %d", y, cd)
			}
		}
	}

	for _, d := range []int{10, 11} {
		t.Logf("Testing d=%d", d)
		// check that decompress(compress(x)) ~ x for large d
		for x := range q {
			dc := decompressSingle(compressSingle(x, d), d)
			change := int16(dc) - int16(x)
			if change < 0 {
				change = -change
			}
			if change > int16(q)/2 {
				change = int16(q) - change
			}
			if change > 2 {
				t.Fatalf("compression closeness violation: was %d, is %d", x, dc)
			}
		}

	}

	// Verify that simpler compression function is correct
	// Tests against compress(x,d) in crypto/internal/fips140/mlkem/field.go
	/* for _, d := range []int{4, 5, 10, 11} {
		t.Logf("Testing d=%d", d)
		for x := range q {
			x1 := compress(x, uint8(d)) // Insert implementation from crypto/internal/fips140/mlkem/field.go here
			x2 := compressSingle(x, d)
			t.Logf("Testing d=%d, x=%d, x1=%d, x2=%d", d, x, x1, x2)
			if x1 != x2 {
				panic(fmt.Sprintf("Error compressing. Original: %d, correct: %d, actual: %d", x, x1, x2))
			}
		}
	} */
}

func TestVectorEncode(t *testing.T) {
	// test various values of k, t
	for _, paramK := range []int{2, 3, 4} {
		for _, paramT := range []int{128, 192, 256} {
			var encoder KemeleonEncoder
			encoder.t = paramT
			encoder.k = paramK

			// create random array over Z_q
			w := make([]uint16, n*(encoder.k+1))
			for i := range w {
				w[i] = uint16(csrand.IntRange(0, int(q-1)))
			}

			// check that encoding and decoding returns the original array
			r := encoder.vectorEncodeNR(w)
			w2 := encoder.vectorDecodeNR(r)

			if !slices.Equal(w, w2) {
				t.Fatalf("vectorEncode not correct: expected %x, actual: %x", w, w2)
			}
		}
	}
}

func TestSamplePreimage(t *testing.T) {
	// test various values of d
	for _, d := range []int{4, 5, 10, 11} {
		t.Run(fmt.Sprintf("d=%d", d), func(t *testing.T) {
			testSamplePreimage(t, d)
		})
	}
}

func testSamplePreimage(t *testing.T, d int) {
	// TODO appears to produce a bug
	// https://github.com/rozbb/ct-kemeleon/blob/main/src/lib.rs#L69 does not implement SamplePreimage and directly encodes
	// comparing with the precomputed equivalence sets from https://github.com/jmwample/kemeleon/blob/main/src/kemeleon/ciphertext/precomputed.rs
	// ... also tells us that the preimage is incorrect
	for x := range q {
		// repeat for randomness in samplePreimage
		for range numRepeats {
			comprX := compressSingle(x, d)

			// SamplePreimage
			preim := samplePreimage(d, x, comprX)

			// check that preim compresses to the same as uncompressed
			comprPreim := compressSingle(preim, d)

			t.Logf("Testing d=%d, x=%d, preim=%d, comprX=%d, comprPreim=%d", d, x, preim, comprX, comprPreim)
			if comprPreim != comprX {
				t.Logf("equivSetIndex(x)=%d, equivSetIndex(preim)=%d", getEquivSetIndex(d, x), getEquivSetIndex(d, preim))

				t.Fatalf("samplePreimage not correct: x=%d, expected %d, actual: %d", x, comprX, comprPreim)
			}
		}
	}
}

func TestEquivSets(t *testing.T) {
	for _, d := range []int{4, 5, 10, 11} {
		for _, set := range equivSets[d] {
			// check that all entries of set compress to the same value
			target := compressSingle(set[0], d)
			for _, other := range set[1:] {
				compr := compressSingle(other, d)
				if target != compr {
					t.Fatalf("equivalence set not correct: d=%d, x=%d, target=%d, compr=%d", d, set[0], target, compr)
				}
			}
		}
	}
}

func getEquivSetIndex(d int, uncompressed uint16) int {
	for i, set := range equivSets[d] {
		if slices.Contains(set, uncompressed) {
			return i
		}
	}
	return -1
}

// https://github.com/jmwample/kemeleon/blob/main/src/kemeleon/ciphertext/precomputed.rs lists the following equivalence sets:
// equivSets[d] produces a list of equivalence sets, each an []int
var equivSets = map[int][][]uint16{
	10: [][]uint16{
		[]uint16{0, 1, 3328},
		[]uint16{2, 3, 4},
		[]uint16{5, 6, 7, 8},
		[]uint16{9, 10, 11},
		[]uint16{12, 13, 14},
		[]uint16{15, 16, 17},
		[]uint16{18, 19, 20, 21},
		[]uint16{22, 23, 24},
		[]uint16{25, 26, 27},
		[]uint16{28, 29, 30},
		[]uint16{31, 32, 33, 34},
		[]uint16{35, 36, 37},
		[]uint16{38, 39, 40},
		[]uint16{41, 42, 43},
		[]uint16{44, 45, 46, 47},
		[]uint16{48, 49, 50},
		[]uint16{51, 52, 53},
		[]uint16{54, 55, 56},
		[]uint16{57, 58, 59, 60},
		[]uint16{61, 62, 63},
		[]uint16{64, 65, 66},
		[]uint16{67, 68, 69},
		[]uint16{70, 71, 72, 73},
		[]uint16{74, 75, 76},
		[]uint16{77, 78, 79},
		[]uint16{80, 81, 82},
		[]uint16{83, 84, 85, 86},
		[]uint16{87, 88, 89},
		[]uint16{90, 91, 92},
		[]uint16{93, 94, 95},
		[]uint16{96, 97, 98, 99},
		[]uint16{100, 101, 102},
		[]uint16{103, 104, 105},
		[]uint16{106, 107, 108},
		[]uint16{109, 110, 111, 112},
		[]uint16{113, 114, 115},
		[]uint16{116, 117, 118},
		[]uint16{119, 120, 121},
		[]uint16{122, 123, 124, 125},
		[]uint16{126, 127, 128},
		[]uint16{129, 130, 131},
		[]uint16{132, 133, 134},
		[]uint16{135, 136, 137, 138},
		[]uint16{139, 140, 141},
		[]uint16{142, 143, 144},
		[]uint16{145, 146, 147},
		[]uint16{148, 149, 150, 151},
		[]uint16{152, 153, 154},
		[]uint16{155, 156, 157},
		[]uint16{158, 159, 160},
		[]uint16{161, 162, 163, 164},
		[]uint16{165, 166, 167},
		[]uint16{168, 169, 170},
		[]uint16{171, 172, 173},
		[]uint16{174, 175, 176, 177},
		[]uint16{178, 179, 180},
		[]uint16{181, 182, 183},
		[]uint16{184, 185, 186},
		[]uint16{187, 188, 189, 190},
		[]uint16{191, 192, 193},
		[]uint16{194, 195, 196},
		[]uint16{197, 198, 199},
		[]uint16{200, 201, 202, 203},
		[]uint16{204, 205, 206},
		[]uint16{207, 208, 209},
		[]uint16{210, 211, 212},
		[]uint16{213, 214, 215, 216},
		[]uint16{217, 218, 219},
		[]uint16{220, 221, 222},
		[]uint16{223, 224, 225},
		[]uint16{226, 227, 228, 229},
		[]uint16{230, 231, 232},
		[]uint16{233, 234, 235},
		[]uint16{236, 237, 238},
		[]uint16{239, 240, 241, 242},
		[]uint16{243, 244, 245},
		[]uint16{246, 247, 248},
		[]uint16{249, 250, 251},
		[]uint16{252, 253, 254, 255},
		[]uint16{256, 257, 258},
		[]uint16{259, 260, 261},
		[]uint16{262, 263, 264},
		[]uint16{265, 266, 267, 268},
		[]uint16{269, 270, 271},
		[]uint16{272, 273, 274},
		[]uint16{275, 276, 277},
		[]uint16{278, 279, 280, 281},
		[]uint16{282, 283, 284},
		[]uint16{285, 286, 287},
		[]uint16{288, 289, 290},
		[]uint16{291, 292, 293, 294},
		[]uint16{295, 296, 297},
		[]uint16{298, 299, 300},
		[]uint16{301, 302, 303},
		[]uint16{304, 305, 306, 307},
		[]uint16{308, 309, 310},
		[]uint16{311, 312, 313},
		[]uint16{314, 315, 316},
		[]uint16{317, 318, 319, 320},
		[]uint16{321, 322, 323},
		[]uint16{324, 325, 326},
		[]uint16{327, 328, 329},
		[]uint16{330, 331, 332, 333},
		[]uint16{334, 335, 336},
		[]uint16{337, 338, 339},
		[]uint16{340, 341, 342},
		[]uint16{343, 344, 345, 346},
		[]uint16{347, 348, 349},
		[]uint16{350, 351, 352},
		[]uint16{353, 354, 355},
		[]uint16{356, 357, 358, 359},
		[]uint16{360, 361, 362},
		[]uint16{363, 364, 365},
		[]uint16{366, 367, 368},
		[]uint16{369, 370, 371, 372},
		[]uint16{373, 374, 375},
		[]uint16{376, 377, 378},
		[]uint16{379, 380, 381},
		[]uint16{382, 383, 384, 385},
		[]uint16{386, 387, 388},
		[]uint16{389, 390, 391},
		[]uint16{392, 393, 394},
		[]uint16{395, 396, 397, 398},
		[]uint16{399, 400, 401},
		[]uint16{402, 403, 404},
		[]uint16{405, 406, 407},
		[]uint16{408, 409, 410, 411},
		[]uint16{412, 413, 414},
		[]uint16{415, 416, 417},
		[]uint16{418, 419, 420, 421},
		[]uint16{422, 423, 424},
		[]uint16{425, 426, 427},
		[]uint16{428, 429, 430},
		[]uint16{431, 432, 433, 434},
		[]uint16{435, 436, 437},
		[]uint16{438, 439, 440},
		[]uint16{441, 442, 443},
		[]uint16{444, 445, 446, 447},
		[]uint16{448, 449, 450},
		[]uint16{451, 452, 453},
		[]uint16{454, 455, 456},
		[]uint16{457, 458, 459, 460},
		[]uint16{461, 462, 463},
		[]uint16{464, 465, 466},
		[]uint16{467, 468, 469},
		[]uint16{470, 471, 472, 473},
		[]uint16{474, 475, 476},
		[]uint16{477, 478, 479},
		[]uint16{480, 481, 482},
		[]uint16{483, 484, 485, 486},
		[]uint16{487, 488, 489},
		[]uint16{490, 491, 492},
		[]uint16{493, 494, 495},
		[]uint16{496, 497, 498, 499},
		[]uint16{500, 501, 502},
		[]uint16{503, 504, 505},
		[]uint16{506, 507, 508},
		[]uint16{509, 510, 511, 512},
		[]uint16{513, 514, 515},
		[]uint16{516, 517, 518},
		[]uint16{519, 520, 521},
		[]uint16{522, 523, 524, 525},
		[]uint16{526, 527, 528},
		[]uint16{529, 530, 531},
		[]uint16{532, 533, 534},
		[]uint16{535, 536, 537, 538},
		[]uint16{539, 540, 541},
		[]uint16{542, 543, 544},
		[]uint16{545, 546, 547},
		[]uint16{548, 549, 550, 551},
		[]uint16{552, 553, 554},
		[]uint16{555, 556, 557},
		[]uint16{558, 559, 560},
		[]uint16{561, 562, 563, 564},
		[]uint16{565, 566, 567},
		[]uint16{568, 569, 570},
		[]uint16{571, 572, 573},
		[]uint16{574, 575, 576, 577},
		[]uint16{578, 579, 580},
		[]uint16{581, 582, 583},
		[]uint16{584, 585, 586},
		[]uint16{587, 588, 589, 590},
		[]uint16{591, 592, 593},
		[]uint16{594, 595, 596},
		[]uint16{597, 598, 599},
		[]uint16{600, 601, 602, 603},
		[]uint16{604, 605, 606},
		[]uint16{607, 608, 609},
		[]uint16{610, 611, 612},
		[]uint16{613, 614, 615, 616},
		[]uint16{617, 618, 619},
		[]uint16{620, 621, 622},
		[]uint16{623, 624, 625},
		[]uint16{626, 627, 628, 629},
		[]uint16{630, 631, 632},
		[]uint16{633, 634, 635},
		[]uint16{636, 637, 638},
		[]uint16{639, 640, 641, 642},
		[]uint16{643, 644, 645},
		[]uint16{646, 647, 648},
		[]uint16{649, 650, 651},
		[]uint16{652, 653, 654, 655},
		[]uint16{656, 657, 658},
		[]uint16{659, 660, 661},
		[]uint16{662, 663, 664},
		[]uint16{665, 666, 667, 668},
		[]uint16{669, 670, 671},
		[]uint16{672, 673, 674},
		[]uint16{675, 676, 677},
		[]uint16{678, 679, 680, 681},
		[]uint16{682, 683, 684},
		[]uint16{685, 686, 687},
		[]uint16{688, 689, 690},
		[]uint16{691, 692, 693, 694},
		[]uint16{695, 696, 697},
		[]uint16{698, 699, 700},
		[]uint16{701, 702, 703},
		[]uint16{704, 705, 706, 707},
		[]uint16{708, 709, 710},
		[]uint16{711, 712, 713},
		[]uint16{714, 715, 716},
		[]uint16{717, 718, 719, 720},
		[]uint16{721, 722, 723},
		[]uint16{724, 725, 726},
		[]uint16{727, 728, 729},
		[]uint16{730, 731, 732, 733},
		[]uint16{734, 735, 736},
		[]uint16{737, 738, 739},
		[]uint16{740, 741, 742},
		[]uint16{743, 744, 745, 746},
		[]uint16{747, 748, 749},
		[]uint16{750, 751, 752},
		[]uint16{753, 754, 755},
		[]uint16{756, 757, 758, 759},
		[]uint16{760, 761, 762},
		[]uint16{763, 764, 765},
		[]uint16{766, 767, 768},
		[]uint16{769, 770, 771, 772},
		[]uint16{773, 774, 775},
		[]uint16{776, 777, 778},
		[]uint16{779, 780, 781},
		[]uint16{782, 783, 784, 785},
		[]uint16{786, 787, 788},
		[]uint16{789, 790, 791},
		[]uint16{792, 793, 794},
		[]uint16{795, 796, 797, 798},
		[]uint16{799, 800, 801},
		[]uint16{802, 803, 804},
		[]uint16{805, 806, 807},
		[]uint16{808, 809, 810, 811},
		[]uint16{812, 813, 814},
		[]uint16{815, 816, 817},
		[]uint16{818, 819, 820},
		[]uint16{821, 822, 823, 824},
		[]uint16{825, 826, 827},
		[]uint16{828, 829, 830},
		[]uint16{831, 832, 833},
		[]uint16{834, 835, 836, 837},
		[]uint16{838, 839, 840},
		[]uint16{841, 842, 843},
		[]uint16{844, 845, 846},
		[]uint16{847, 848, 849, 850},
		[]uint16{851, 852, 853},
		[]uint16{854, 855, 856},
		[]uint16{857, 858, 859},
		[]uint16{860, 861, 862, 863},
		[]uint16{864, 865, 866},
		[]uint16{867, 868, 869},
		[]uint16{870, 871, 872},
		[]uint16{873, 874, 875, 876},
		[]uint16{877, 878, 879},
		[]uint16{880, 881, 882},
		[]uint16{883, 884, 885},
		[]uint16{886, 887, 888, 889},
		[]uint16{890, 891, 892},
		[]uint16{893, 894, 895},
		[]uint16{896, 897, 898},
		[]uint16{899, 900, 901, 902},
		[]uint16{903, 904, 905},
		[]uint16{906, 907, 908},
		[]uint16{909, 910, 911},
		[]uint16{912, 913, 914, 915},
		[]uint16{916, 917, 918},
		[]uint16{919, 920, 921},
		[]uint16{922, 923, 924},
		[]uint16{925, 926, 927, 928},
		[]uint16{929, 930, 931},
		[]uint16{932, 933, 934},
		[]uint16{935, 936, 937},
		[]uint16{938, 939, 940, 941},
		[]uint16{942, 943, 944},
		[]uint16{945, 946, 947},
		[]uint16{948, 949, 950},
		[]uint16{951, 952, 953, 954},
		[]uint16{955, 956, 957},
		[]uint16{958, 959, 960},
		[]uint16{961, 962, 963},
		[]uint16{964, 965, 966, 967},
		[]uint16{968, 969, 970},
		[]uint16{971, 972, 973},
		[]uint16{974, 975, 976},
		[]uint16{977, 978, 979, 980},
		[]uint16{981, 982, 983},
		[]uint16{984, 985, 986},
		[]uint16{987, 988, 989},
		[]uint16{990, 991, 992, 993},
		[]uint16{994, 995, 996},
		[]uint16{997, 998, 999},
		[]uint16{1000, 1001, 1002},
		[]uint16{1003, 1004, 1005, 1006},
		[]uint16{1007, 1008, 1009},
		[]uint16{1010, 1011, 1012},
		[]uint16{1013, 1014, 1015},
		[]uint16{1016, 1017, 1018, 1019},
		[]uint16{1020, 1021, 1022},
		[]uint16{1023, 1024, 1025},
		[]uint16{1026, 1027, 1028},
		[]uint16{1029, 1030, 1031, 1032},
		[]uint16{1033, 1034, 1035},
		[]uint16{1036, 1037, 1038},
		[]uint16{1039, 1040, 1041},
		[]uint16{1042, 1043, 1044, 1045},
		[]uint16{1046, 1047, 1048},
		[]uint16{1049, 1050, 1051},
		[]uint16{1052, 1053, 1054},
		[]uint16{1055, 1056, 1057, 1058},
		[]uint16{1059, 1060, 1061},
		[]uint16{1062, 1063, 1064},
		[]uint16{1065, 1066, 1067},
		[]uint16{1068, 1069, 1070, 1071},
		[]uint16{1072, 1073, 1074},
		[]uint16{1075, 1076, 1077},
		[]uint16{1078, 1079, 1080},
		[]uint16{1081, 1082, 1083, 1084},
		[]uint16{1085, 1086, 1087},
		[]uint16{1088, 1089, 1090},
		[]uint16{1091, 1092, 1093},
		[]uint16{1094, 1095, 1096, 1097},
		[]uint16{1098, 1099, 1100},
		[]uint16{1101, 1102, 1103},
		[]uint16{1104, 1105, 1106},
		[]uint16{1107, 1108, 1109, 1110},
		[]uint16{1111, 1112, 1113},
		[]uint16{1114, 1115, 1116},
		[]uint16{1117, 1118, 1119},
		[]uint16{1120, 1121, 1122, 1123},
		[]uint16{1124, 1125, 1126},
		[]uint16{1127, 1128, 1129},
		[]uint16{1130, 1131, 1132},
		[]uint16{1133, 1134, 1135, 1136},
		[]uint16{1137, 1138, 1139},
		[]uint16{1140, 1141, 1142},
		[]uint16{1143, 1144, 1145},
		[]uint16{1146, 1147, 1148, 1149},
		[]uint16{1150, 1151, 1152},
		[]uint16{1153, 1154, 1155},
		[]uint16{1156, 1157, 1158},
		[]uint16{1159, 1160, 1161, 1162},
		[]uint16{1163, 1164, 1165},
		[]uint16{1166, 1167, 1168},
		[]uint16{1169, 1170, 1171},
		[]uint16{1172, 1173, 1174, 1175},
		[]uint16{1176, 1177, 1178},
		[]uint16{1179, 1180, 1181},
		[]uint16{1182, 1183, 1184},
		[]uint16{1185, 1186, 1187, 1188},
		[]uint16{1189, 1190, 1191},
		[]uint16{1192, 1193, 1194},
		[]uint16{1195, 1196, 1197},
		[]uint16{1198, 1199, 1200, 1201},
		[]uint16{1202, 1203, 1204},
		[]uint16{1205, 1206, 1207},
		[]uint16{1208, 1209, 1210},
		[]uint16{1211, 1212, 1213, 1214},
		[]uint16{1215, 1216, 1217},
		[]uint16{1218, 1219, 1220},
		[]uint16{1221, 1222, 1223},
		[]uint16{1224, 1225, 1226, 1227},
		[]uint16{1228, 1229, 1230},
		[]uint16{1231, 1232, 1233},
		[]uint16{1234, 1235, 1236},
		[]uint16{1237, 1238, 1239, 1240},
		[]uint16{1241, 1242, 1243},
		[]uint16{1244, 1245, 1246},
		[]uint16{1247, 1248, 1249, 1250},
		[]uint16{1251, 1252, 1253},
		[]uint16{1254, 1255, 1256},
		[]uint16{1257, 1258, 1259},
		[]uint16{1260, 1261, 1262, 1263},
		[]uint16{1264, 1265, 1266},
		[]uint16{1267, 1268, 1269},
		[]uint16{1270, 1271, 1272},
		[]uint16{1273, 1274, 1275, 1276},
		[]uint16{1277, 1278, 1279},
		[]uint16{1280, 1281, 1282},
		[]uint16{1283, 1284, 1285},
		[]uint16{1286, 1287, 1288, 1289},
		[]uint16{1290, 1291, 1292},
		[]uint16{1293, 1294, 1295},
		[]uint16{1296, 1297, 1298},
		[]uint16{1299, 1300, 1301, 1302},
		[]uint16{1303, 1304, 1305},
		[]uint16{1306, 1307, 1308},
		[]uint16{1309, 1310, 1311},
		[]uint16{1312, 1313, 1314, 1315},
		[]uint16{1316, 1317, 1318},
		[]uint16{1319, 1320, 1321},
		[]uint16{1322, 1323, 1324},
		[]uint16{1325, 1326, 1327, 1328},
		[]uint16{1329, 1330, 1331},
		[]uint16{1332, 1333, 1334},
		[]uint16{1335, 1336, 1337},
		[]uint16{1338, 1339, 1340, 1341},
		[]uint16{1342, 1343, 1344},
		[]uint16{1345, 1346, 1347},
		[]uint16{1348, 1349, 1350},
		[]uint16{1351, 1352, 1353, 1354},
		[]uint16{1355, 1356, 1357},
		[]uint16{1358, 1359, 1360},
		[]uint16{1361, 1362, 1363},
		[]uint16{1364, 1365, 1366, 1367},
		[]uint16{1368, 1369, 1370},
		[]uint16{1371, 1372, 1373},
		[]uint16{1374, 1375, 1376},
		[]uint16{1377, 1378, 1379, 1380},
		[]uint16{1381, 1382, 1383},
		[]uint16{1384, 1385, 1386},
		[]uint16{1387, 1388, 1389},
		[]uint16{1390, 1391, 1392, 1393},
		[]uint16{1394, 1395, 1396},
		[]uint16{1397, 1398, 1399},
		[]uint16{1400, 1401, 1402},
		[]uint16{1403, 1404, 1405, 1406},
		[]uint16{1407, 1408, 1409},
		[]uint16{1410, 1411, 1412},
		[]uint16{1413, 1414, 1415},
		[]uint16{1416, 1417, 1418, 1419},
		[]uint16{1420, 1421, 1422},
		[]uint16{1423, 1424, 1425},
		[]uint16{1426, 1427, 1428},
		[]uint16{1429, 1430, 1431, 1432},
		[]uint16{1433, 1434, 1435},
		[]uint16{1436, 1437, 1438},
		[]uint16{1439, 1440, 1441},
		[]uint16{1442, 1443, 1444, 1445},
		[]uint16{1446, 1447, 1448},
		[]uint16{1449, 1450, 1451},
		[]uint16{1452, 1453, 1454},
		[]uint16{1455, 1456, 1457, 1458},
		[]uint16{1459, 1460, 1461},
		[]uint16{1462, 1463, 1464},
		[]uint16{1465, 1466, 1467},
		[]uint16{1468, 1469, 1470, 1471},
		[]uint16{1472, 1473, 1474},
		[]uint16{1475, 1476, 1477},
		[]uint16{1478, 1479, 1480},
		[]uint16{1481, 1482, 1483, 1484},
		[]uint16{1485, 1486, 1487},
		[]uint16{1488, 1489, 1490},
		[]uint16{1491, 1492, 1493},
		[]uint16{1494, 1495, 1496, 1497},
		[]uint16{1498, 1499, 1500},
		[]uint16{1501, 1502, 1503},
		[]uint16{1504, 1505, 1506},
		[]uint16{1507, 1508, 1509, 1510},
		[]uint16{1511, 1512, 1513},
		[]uint16{1514, 1515, 1516},
		[]uint16{1517, 1518, 1519},
		[]uint16{1520, 1521, 1522, 1523},
		[]uint16{1524, 1525, 1526},
		[]uint16{1527, 1528, 1529},
		[]uint16{1530, 1531, 1532},
		[]uint16{1533, 1534, 1535, 1536},
		[]uint16{1537, 1538, 1539},
		[]uint16{1540, 1541, 1542},
		[]uint16{1543, 1544, 1545},
		[]uint16{1546, 1547, 1548, 1549},
		[]uint16{1550, 1551, 1552},
		[]uint16{1553, 1554, 1555},
		[]uint16{1556, 1557, 1558},
		[]uint16{1559, 1560, 1561, 1562},
		[]uint16{1563, 1564, 1565},
		[]uint16{1566, 1567, 1568},
		[]uint16{1569, 1570, 1571},
		[]uint16{1572, 1573, 1574, 1575},
		[]uint16{1576, 1577, 1578},
		[]uint16{1579, 1580, 1581},
		[]uint16{1582, 1583, 1584},
		[]uint16{1585, 1586, 1587, 1588},
		[]uint16{1589, 1590, 1591},
		[]uint16{1592, 1593, 1594},
		[]uint16{1595, 1596, 1597},
		[]uint16{1598, 1599, 1600, 1601},
		[]uint16{1602, 1603, 1604},
		[]uint16{1605, 1606, 1607},
		[]uint16{1608, 1609, 1610},
		[]uint16{1611, 1612, 1613, 1614},
		[]uint16{1615, 1616, 1617},
		[]uint16{1618, 1619, 1620},
		[]uint16{1621, 1622, 1623},
		[]uint16{1624, 1625, 1626, 1627},
		[]uint16{1628, 1629, 1630},
		[]uint16{1631, 1632, 1633},
		[]uint16{1634, 1635, 1636},
		[]uint16{1637, 1638, 1639, 1640},
		[]uint16{1641, 1642, 1643},
		[]uint16{1644, 1645, 1646},
		[]uint16{1647, 1648, 1649},
		[]uint16{1650, 1651, 1652, 1653},
		[]uint16{1654, 1655, 1656},
		[]uint16{1657, 1658, 1659},
		[]uint16{1660, 1661, 1662},
		[]uint16{1663, 1664, 1665, 1666},
		[]uint16{1667, 1668, 1669},
		[]uint16{1670, 1671, 1672},
		[]uint16{1673, 1674, 1675},
		[]uint16{1676, 1677, 1678, 1679},
		[]uint16{1680, 1681, 1682},
		[]uint16{1683, 1684, 1685},
		[]uint16{1686, 1687, 1688},
		[]uint16{1689, 1690, 1691, 1692},
		[]uint16{1693, 1694, 1695},
		[]uint16{1696, 1697, 1698},
		[]uint16{1699, 1700, 1701},
		[]uint16{1702, 1703, 1704, 1705},
		[]uint16{1706, 1707, 1708},
		[]uint16{1709, 1710, 1711},
		[]uint16{1712, 1713, 1714},
		[]uint16{1715, 1716, 1717, 1718},
		[]uint16{1719, 1720, 1721},
		[]uint16{1722, 1723, 1724},
		[]uint16{1725, 1726, 1727},
		[]uint16{1728, 1729, 1730, 1731},
		[]uint16{1732, 1733, 1734},
		[]uint16{1735, 1736, 1737},
		[]uint16{1738, 1739, 1740},
		[]uint16{1741, 1742, 1743, 1744},
		[]uint16{1745, 1746, 1747},
		[]uint16{1748, 1749, 1750},
		[]uint16{1751, 1752, 1753},
		[]uint16{1754, 1755, 1756, 1757},
		[]uint16{1758, 1759, 1760},
		[]uint16{1761, 1762, 1763},
		[]uint16{1764, 1765, 1766},
		[]uint16{1767, 1768, 1769, 1770},
		[]uint16{1771, 1772, 1773},
		[]uint16{1774, 1775, 1776},
		[]uint16{1777, 1778, 1779},
		[]uint16{1780, 1781, 1782, 1783},
		[]uint16{1784, 1785, 1786},
		[]uint16{1787, 1788, 1789},
		[]uint16{1790, 1791, 1792},
		[]uint16{1793, 1794, 1795, 1796},
		[]uint16{1797, 1798, 1799},
		[]uint16{1800, 1801, 1802},
		[]uint16{1803, 1804, 1805},
		[]uint16{1806, 1807, 1808, 1809},
		[]uint16{1810, 1811, 1812},
		[]uint16{1813, 1814, 1815},
		[]uint16{1816, 1817, 1818},
		[]uint16{1819, 1820, 1821, 1822},
		[]uint16{1823, 1824, 1825},
		[]uint16{1826, 1827, 1828},
		[]uint16{1829, 1830, 1831},
		[]uint16{1832, 1833, 1834, 1835},
		[]uint16{1836, 1837, 1838},
		[]uint16{1839, 1840, 1841},
		[]uint16{1842, 1843, 1844},
		[]uint16{1845, 1846, 1847, 1848},
		[]uint16{1849, 1850, 1851},
		[]uint16{1852, 1853, 1854},
		[]uint16{1855, 1856, 1857},
		[]uint16{1858, 1859, 1860, 1861},
		[]uint16{1862, 1863, 1864},
		[]uint16{1865, 1866, 1867},
		[]uint16{1868, 1869, 1870},
		[]uint16{1871, 1872, 1873, 1874},
		[]uint16{1875, 1876, 1877},
		[]uint16{1878, 1879, 1880},
		[]uint16{1881, 1882, 1883},
		[]uint16{1884, 1885, 1886, 1887},
		[]uint16{1888, 1889, 1890},
		[]uint16{1891, 1892, 1893},
		[]uint16{1894, 1895, 1896},
		[]uint16{1897, 1898, 1899, 1900},
		[]uint16{1901, 1902, 1903},
		[]uint16{1904, 1905, 1906},
		[]uint16{1907, 1908, 1909},
		[]uint16{1910, 1911, 1912, 1913},
		[]uint16{1914, 1915, 1916},
		[]uint16{1917, 1918, 1919},
		[]uint16{1920, 1921, 1922},
		[]uint16{1923, 1924, 1925, 1926},
		[]uint16{1927, 1928, 1929},
		[]uint16{1930, 1931, 1932},
		[]uint16{1933, 1934, 1935},
		[]uint16{1936, 1937, 1938, 1939},
		[]uint16{1940, 1941, 1942},
		[]uint16{1943, 1944, 1945},
		[]uint16{1946, 1947, 1948},
		[]uint16{1949, 1950, 1951, 1952},
		[]uint16{1953, 1954, 1955},
		[]uint16{1956, 1957, 1958},
		[]uint16{1959, 1960, 1961},
		[]uint16{1962, 1963, 1964, 1965},
		[]uint16{1966, 1967, 1968},
		[]uint16{1969, 1970, 1971},
		[]uint16{1972, 1973, 1974},
		[]uint16{1975, 1976, 1977, 1978},
		[]uint16{1979, 1980, 1981},
		[]uint16{1982, 1983, 1984},
		[]uint16{1985, 1986, 1987},
		[]uint16{1988, 1989, 1990, 1991},
		[]uint16{1992, 1993, 1994},
		[]uint16{1995, 1996, 1997},
		[]uint16{1998, 1999, 2000},
		[]uint16{2001, 2002, 2003, 2004},
		[]uint16{2005, 2006, 2007},
		[]uint16{2008, 2009, 2010},
		[]uint16{2011, 2012, 2013},
		[]uint16{2014, 2015, 2016, 2017},
		[]uint16{2018, 2019, 2020},
		[]uint16{2021, 2022, 2023},
		[]uint16{2024, 2025, 2026},
		[]uint16{2027, 2028, 2029, 2030},
		[]uint16{2031, 2032, 2033},
		[]uint16{2034, 2035, 2036},
		[]uint16{2037, 2038, 2039},
		[]uint16{2040, 2041, 2042, 2043},
		[]uint16{2044, 2045, 2046},
		[]uint16{2047, 2048, 2049},
		[]uint16{2050, 2051, 2052},
		[]uint16{2053, 2054, 2055, 2056},
		[]uint16{2057, 2058, 2059},
		[]uint16{2060, 2061, 2062},
		[]uint16{2063, 2064, 2065},
		[]uint16{2066, 2067, 2068, 2069},
		[]uint16{2070, 2071, 2072},
		[]uint16{2073, 2074, 2075},
		[]uint16{2076, 2077, 2078},
		[]uint16{2079, 2080, 2081, 2082},
		[]uint16{2083, 2084, 2085},
		[]uint16{2086, 2087, 2088},
		[]uint16{2089, 2090, 2091, 2092},
		[]uint16{2093, 2094, 2095},
		[]uint16{2096, 2097, 2098},
		[]uint16{2099, 2100, 2101},
		[]uint16{2102, 2103, 2104, 2105},
		[]uint16{2106, 2107, 2108},
		[]uint16{2109, 2110, 2111},
		[]uint16{2112, 2113, 2114},
		[]uint16{2115, 2116, 2117, 2118},
		[]uint16{2119, 2120, 2121},
		[]uint16{2122, 2123, 2124},
		[]uint16{2125, 2126, 2127},
		[]uint16{2128, 2129, 2130, 2131},
		[]uint16{2132, 2133, 2134},
		[]uint16{2135, 2136, 2137},
		[]uint16{2138, 2139, 2140},
		[]uint16{2141, 2142, 2143, 2144},
		[]uint16{2145, 2146, 2147},
		[]uint16{2148, 2149, 2150},
		[]uint16{2151, 2152, 2153},
		[]uint16{2154, 2155, 2156, 2157},
		[]uint16{2158, 2159, 2160},
		[]uint16{2161, 2162, 2163},
		[]uint16{2164, 2165, 2166},
		[]uint16{2167, 2168, 2169, 2170},
		[]uint16{2171, 2172, 2173},
		[]uint16{2174, 2175, 2176},
		[]uint16{2177, 2178, 2179},
		[]uint16{2180, 2181, 2182, 2183},
		[]uint16{2184, 2185, 2186},
		[]uint16{2187, 2188, 2189},
		[]uint16{2190, 2191, 2192},
		[]uint16{2193, 2194, 2195, 2196},
		[]uint16{2197, 2198, 2199},
		[]uint16{2200, 2201, 2202},
		[]uint16{2203, 2204, 2205},
		[]uint16{2206, 2207, 2208, 2209},
		[]uint16{2210, 2211, 2212},
		[]uint16{2213, 2214, 2215},
		[]uint16{2216, 2217, 2218},
		[]uint16{2219, 2220, 2221, 2222},
		[]uint16{2223, 2224, 2225},
		[]uint16{2226, 2227, 2228},
		[]uint16{2229, 2230, 2231},
		[]uint16{2232, 2233, 2234, 2235},
		[]uint16{2236, 2237, 2238},
		[]uint16{2239, 2240, 2241},
		[]uint16{2242, 2243, 2244},
		[]uint16{2245, 2246, 2247, 2248},
		[]uint16{2249, 2250, 2251},
		[]uint16{2252, 2253, 2254},
		[]uint16{2255, 2256, 2257},
		[]uint16{2258, 2259, 2260, 2261},
		[]uint16{2262, 2263, 2264},
		[]uint16{2265, 2266, 2267},
		[]uint16{2268, 2269, 2270},
		[]uint16{2271, 2272, 2273, 2274},
		[]uint16{2275, 2276, 2277},
		[]uint16{2278, 2279, 2280},
		[]uint16{2281, 2282, 2283},
		[]uint16{2284, 2285, 2286, 2287},
		[]uint16{2288, 2289, 2290},
		[]uint16{2291, 2292, 2293},
		[]uint16{2294, 2295, 2296},
		[]uint16{2297, 2298, 2299, 2300},
		[]uint16{2301, 2302, 2303},
		[]uint16{2304, 2305, 2306},
		[]uint16{2307, 2308, 2309},
		[]uint16{2310, 2311, 2312, 2313},
		[]uint16{2314, 2315, 2316},
		[]uint16{2317, 2318, 2319},
		[]uint16{2320, 2321, 2322},
		[]uint16{2323, 2324, 2325, 2326},
		[]uint16{2327, 2328, 2329},
		[]uint16{2330, 2331, 2332},
		[]uint16{2333, 2334, 2335},
		[]uint16{2336, 2337, 2338, 2339},
		[]uint16{2340, 2341, 2342},
		[]uint16{2343, 2344, 2345},
		[]uint16{2346, 2347, 2348},
		[]uint16{2349, 2350, 2351, 2352},
		[]uint16{2353, 2354, 2355},
		[]uint16{2356, 2357, 2358},
		[]uint16{2359, 2360, 2361},
		[]uint16{2362, 2363, 2364, 2365},
		[]uint16{2366, 2367, 2368},
		[]uint16{2369, 2370, 2371},
		[]uint16{2372, 2373, 2374},
		[]uint16{2375, 2376, 2377, 2378},
		[]uint16{2379, 2380, 2381},
		[]uint16{2382, 2383, 2384},
		[]uint16{2385, 2386, 2387},
		[]uint16{2388, 2389, 2390, 2391},
		[]uint16{2392, 2393, 2394},
		[]uint16{2395, 2396, 2397},
		[]uint16{2398, 2399, 2400},
		[]uint16{2401, 2402, 2403, 2404},
		[]uint16{2405, 2406, 2407},
		[]uint16{2408, 2409, 2410},
		[]uint16{2411, 2412, 2413},
		[]uint16{2414, 2415, 2416, 2417},
		[]uint16{2418, 2419, 2420},
		[]uint16{2421, 2422, 2423},
		[]uint16{2424, 2425, 2426},
		[]uint16{2427, 2428, 2429, 2430},
		[]uint16{2431, 2432, 2433},
		[]uint16{2434, 2435, 2436},
		[]uint16{2437, 2438, 2439},
		[]uint16{2440, 2441, 2442, 2443},
		[]uint16{2444, 2445, 2446},
		[]uint16{2447, 2448, 2449},
		[]uint16{2450, 2451, 2452},
		[]uint16{2453, 2454, 2455, 2456},
		[]uint16{2457, 2458, 2459},
		[]uint16{2460, 2461, 2462},
		[]uint16{2463, 2464, 2465},
		[]uint16{2466, 2467, 2468, 2469},
		[]uint16{2470, 2471, 2472},
		[]uint16{2473, 2474, 2475},
		[]uint16{2476, 2477, 2478},
		[]uint16{2479, 2480, 2481, 2482},
		[]uint16{2483, 2484, 2485},
		[]uint16{2486, 2487, 2488},
		[]uint16{2489, 2490, 2491},
		[]uint16{2492, 2493, 2494, 2495},
		[]uint16{2496, 2497, 2498},
		[]uint16{2499, 2500, 2501},
		[]uint16{2502, 2503, 2504},
		[]uint16{2505, 2506, 2507, 2508},
		[]uint16{2509, 2510, 2511},
		[]uint16{2512, 2513, 2514},
		[]uint16{2515, 2516, 2517},
		[]uint16{2518, 2519, 2520, 2521},
		[]uint16{2522, 2523, 2524},
		[]uint16{2525, 2526, 2527},
		[]uint16{2528, 2529, 2530},
		[]uint16{2531, 2532, 2533, 2534},
		[]uint16{2535, 2536, 2537},
		[]uint16{2538, 2539, 2540},
		[]uint16{2541, 2542, 2543},
		[]uint16{2544, 2545, 2546, 2547},
		[]uint16{2548, 2549, 2550},
		[]uint16{2551, 2552, 2553},
		[]uint16{2554, 2555, 2556},
		[]uint16{2557, 2558, 2559, 2560},
		[]uint16{2561, 2562, 2563},
		[]uint16{2564, 2565, 2566},
		[]uint16{2567, 2568, 2569},
		[]uint16{2570, 2571, 2572, 2573},
		[]uint16{2574, 2575, 2576},
		[]uint16{2577, 2578, 2579},
		[]uint16{2580, 2581, 2582},
		[]uint16{2583, 2584, 2585, 2586},
		[]uint16{2587, 2588, 2589},
		[]uint16{2590, 2591, 2592},
		[]uint16{2593, 2594, 2595},
		[]uint16{2596, 2597, 2598, 2599},
		[]uint16{2600, 2601, 2602},
		[]uint16{2603, 2604, 2605},
		[]uint16{2606, 2607, 2608},
		[]uint16{2609, 2610, 2611, 2612},
		[]uint16{2613, 2614, 2615},
		[]uint16{2616, 2617, 2618},
		[]uint16{2619, 2620, 2621},
		[]uint16{2622, 2623, 2624, 2625},
		[]uint16{2626, 2627, 2628},
		[]uint16{2629, 2630, 2631},
		[]uint16{2632, 2633, 2634},
		[]uint16{2635, 2636, 2637, 2638},
		[]uint16{2639, 2640, 2641},
		[]uint16{2642, 2643, 2644},
		[]uint16{2645, 2646, 2647},
		[]uint16{2648, 2649, 2650, 2651},
		[]uint16{2652, 2653, 2654},
		[]uint16{2655, 2656, 2657},
		[]uint16{2658, 2659, 2660},
		[]uint16{2661, 2662, 2663, 2664},
		[]uint16{2665, 2666, 2667},
		[]uint16{2668, 2669, 2670},
		[]uint16{2671, 2672, 2673},
		[]uint16{2674, 2675, 2676, 2677},
		[]uint16{2678, 2679, 2680},
		[]uint16{2681, 2682, 2683},
		[]uint16{2684, 2685, 2686},
		[]uint16{2687, 2688, 2689, 2690},
		[]uint16{2691, 2692, 2693},
		[]uint16{2694, 2695, 2696},
		[]uint16{2697, 2698, 2699},
		[]uint16{2700, 2701, 2702, 2703},
		[]uint16{2704, 2705, 2706},
		[]uint16{2707, 2708, 2709},
		[]uint16{2710, 2711, 2712},
		[]uint16{2713, 2714, 2715, 2716},
		[]uint16{2717, 2718, 2719},
		[]uint16{2720, 2721, 2722},
		[]uint16{2723, 2724, 2725},
		[]uint16{2726, 2727, 2728, 2729},
		[]uint16{2730, 2731, 2732},
		[]uint16{2733, 2734, 2735},
		[]uint16{2736, 2737, 2738},
		[]uint16{2739, 2740, 2741, 2742},
		[]uint16{2743, 2744, 2745},
		[]uint16{2746, 2747, 2748},
		[]uint16{2749, 2750, 2751},
		[]uint16{2752, 2753, 2754, 2755},
		[]uint16{2756, 2757, 2758},
		[]uint16{2759, 2760, 2761},
		[]uint16{2762, 2763, 2764},
		[]uint16{2765, 2766, 2767, 2768},
		[]uint16{2769, 2770, 2771},
		[]uint16{2772, 2773, 2774},
		[]uint16{2775, 2776, 2777},
		[]uint16{2778, 2779, 2780, 2781},
		[]uint16{2782, 2783, 2784},
		[]uint16{2785, 2786, 2787},
		[]uint16{2788, 2789, 2790},
		[]uint16{2791, 2792, 2793, 2794},
		[]uint16{2795, 2796, 2797},
		[]uint16{2798, 2799, 2800},
		[]uint16{2801, 2802, 2803},
		[]uint16{2804, 2805, 2806, 2807},
		[]uint16{2808, 2809, 2810},
		[]uint16{2811, 2812, 2813},
		[]uint16{2814, 2815, 2816},
		[]uint16{2817, 2818, 2819, 2820},
		[]uint16{2821, 2822, 2823},
		[]uint16{2824, 2825, 2826},
		[]uint16{2827, 2828, 2829},
		[]uint16{2830, 2831, 2832, 2833},
		[]uint16{2834, 2835, 2836},
		[]uint16{2837, 2838, 2839},
		[]uint16{2840, 2841, 2842},
		[]uint16{2843, 2844, 2845, 2846},
		[]uint16{2847, 2848, 2849},
		[]uint16{2850, 2851, 2852},
		[]uint16{2853, 2854, 2855},
		[]uint16{2856, 2857, 2858, 2859},
		[]uint16{2860, 2861, 2862},
		[]uint16{2863, 2864, 2865},
		[]uint16{2866, 2867, 2868},
		[]uint16{2869, 2870, 2871, 2872},
		[]uint16{2873, 2874, 2875},
		[]uint16{2876, 2877, 2878},
		[]uint16{2879, 2880, 2881},
		[]uint16{2882, 2883, 2884, 2885},
		[]uint16{2886, 2887, 2888},
		[]uint16{2889, 2890, 2891},
		[]uint16{2892, 2893, 2894},
		[]uint16{2895, 2896, 2897, 2898},
		[]uint16{2899, 2900, 2901},
		[]uint16{2902, 2903, 2904},
		[]uint16{2905, 2906, 2907},
		[]uint16{2908, 2909, 2910, 2911},
		[]uint16{2912, 2913, 2914},
		[]uint16{2915, 2916, 2917},
		[]uint16{2918, 2919, 2920, 2921},
		[]uint16{2922, 2923, 2924},
		[]uint16{2925, 2926, 2927},
		[]uint16{2928, 2929, 2930},
		[]uint16{2931, 2932, 2933, 2934},
		[]uint16{2935, 2936, 2937},
		[]uint16{2938, 2939, 2940},
		[]uint16{2941, 2942, 2943},
		[]uint16{2944, 2945, 2946, 2947},
		[]uint16{2948, 2949, 2950},
		[]uint16{2951, 2952, 2953},
		[]uint16{2954, 2955, 2956},
		[]uint16{2957, 2958, 2959, 2960},
		[]uint16{2961, 2962, 2963},
		[]uint16{2964, 2965, 2966},
		[]uint16{2967, 2968, 2969},
		[]uint16{2970, 2971, 2972, 2973},
		[]uint16{2974, 2975, 2976},
		[]uint16{2977, 2978, 2979},
		[]uint16{2980, 2981, 2982},
		[]uint16{2983, 2984, 2985, 2986},
		[]uint16{2987, 2988, 2989},
		[]uint16{2990, 2991, 2992},
		[]uint16{2993, 2994, 2995},
		[]uint16{2996, 2997, 2998, 2999},
		[]uint16{3000, 3001, 3002},
		[]uint16{3003, 3004, 3005},
		[]uint16{3006, 3007, 3008},
		[]uint16{3009, 3010, 3011, 3012},
		[]uint16{3013, 3014, 3015},
		[]uint16{3016, 3017, 3018},
		[]uint16{3019, 3020, 3021},
		[]uint16{3022, 3023, 3024, 3025},
		[]uint16{3026, 3027, 3028},
		[]uint16{3029, 3030, 3031},
		[]uint16{3032, 3033, 3034},
		[]uint16{3035, 3036, 3037, 3038},
		[]uint16{3039, 3040, 3041},
		[]uint16{3042, 3043, 3044},
		[]uint16{3045, 3046, 3047},
		[]uint16{3048, 3049, 3050, 3051},
		[]uint16{3052, 3053, 3054},
		[]uint16{3055, 3056, 3057},
		[]uint16{3058, 3059, 3060},
		[]uint16{3061, 3062, 3063, 3064},
		[]uint16{3065, 3066, 3067},
		[]uint16{3068, 3069, 3070},
		[]uint16{3071, 3072, 3073},
		[]uint16{3074, 3075, 3076, 3077},
		[]uint16{3078, 3079, 3080},
		[]uint16{3081, 3082, 3083},
		[]uint16{3084, 3085, 3086},
		[]uint16{3087, 3088, 3089, 3090},
		[]uint16{3091, 3092, 3093},
		[]uint16{3094, 3095, 3096},
		[]uint16{3097, 3098, 3099},
		[]uint16{3100, 3101, 3102, 3103},
		[]uint16{3104, 3105, 3106},
		[]uint16{3107, 3108, 3109},
		[]uint16{3110, 3111, 3112},
		[]uint16{3113, 3114, 3115, 3116},
		[]uint16{3117, 3118, 3119},
		[]uint16{3120, 3121, 3122},
		[]uint16{3123, 3124, 3125},
		[]uint16{3126, 3127, 3128, 3129},
		[]uint16{3130, 3131, 3132},
		[]uint16{3133, 3134, 3135},
		[]uint16{3136, 3137, 3138},
		[]uint16{3139, 3140, 3141, 3142},
		[]uint16{3143, 3144, 3145},
		[]uint16{3146, 3147, 3148},
		[]uint16{3149, 3150, 3151},
		[]uint16{3152, 3153, 3154, 3155},
		[]uint16{3156, 3157, 3158},
		[]uint16{3159, 3160, 3161},
		[]uint16{3162, 3163, 3164},
		[]uint16{3165, 3166, 3167, 3168},
		[]uint16{3169, 3170, 3171},
		[]uint16{3172, 3173, 3174},
		[]uint16{3175, 3176, 3177},
		[]uint16{3178, 3179, 3180, 3181},
		[]uint16{3182, 3183, 3184},
		[]uint16{3185, 3186, 3187},
		[]uint16{3188, 3189, 3190},
		[]uint16{3191, 3192, 3193, 3194},
		[]uint16{3195, 3196, 3197},
		[]uint16{3198, 3199, 3200},
		[]uint16{3201, 3202, 3203},
		[]uint16{3204, 3205, 3206, 3207},
		[]uint16{3208, 3209, 3210},
		[]uint16{3211, 3212, 3213},
		[]uint16{3214, 3215, 3216},
		[]uint16{3217, 3218, 3219, 3220},
		[]uint16{3221, 3222, 3223},
		[]uint16{3224, 3225, 3226},
		[]uint16{3227, 3228, 3229},
		[]uint16{3230, 3231, 3232, 3233},
		[]uint16{3234, 3235, 3236},
		[]uint16{3237, 3238, 3239},
		[]uint16{3240, 3241, 3242},
		[]uint16{3243, 3244, 3245, 3246},
		[]uint16{3247, 3248, 3249},
		[]uint16{3250, 3251, 3252},
		[]uint16{3253, 3254, 3255},
		[]uint16{3256, 3257, 3258, 3259},
		[]uint16{3260, 3261, 3262},
		[]uint16{3263, 3264, 3265},
		[]uint16{3266, 3267, 3268},
		[]uint16{3269, 3270, 3271, 3272},
		[]uint16{3273, 3274, 3275},
		[]uint16{3276, 3277, 3278},
		[]uint16{3279, 3280, 3281},
		[]uint16{3282, 3283, 3284, 3285},
		[]uint16{3286, 3287, 3288},
		[]uint16{3289, 3290, 3291},
		[]uint16{3292, 3293, 3294},
		[]uint16{3295, 3296, 3297, 3298},
		[]uint16{3299, 3300, 3301},
		[]uint16{3302, 3303, 3304},
		[]uint16{3305, 3306, 3307},
		[]uint16{3308, 3309, 3310, 3311},
		[]uint16{3312, 3313, 3314},
		[]uint16{3315, 3316, 3317},
		[]uint16{3318, 3319, 3320},
		[]uint16{3321, 3322, 3323, 3324},
		[]uint16{3325, 3326, 3327},
	},
	11: [][]uint16{
		[]uint16{0},
		[]uint16{1, 2},
		[]uint16{3, 4},
		[]uint16{5},
		[]uint16{6, 7},
		[]uint16{8},
		[]uint16{9, 10},
		[]uint16{11, 12},
		[]uint16{13},
		[]uint16{14, 15},
		[]uint16{16, 17},
		[]uint16{18},
		[]uint16{19, 20},
		[]uint16{21},
		[]uint16{22, 23},
		[]uint16{24, 25},
		[]uint16{26},
		[]uint16{27, 28},
		[]uint16{29, 30},
		[]uint16{31},
		[]uint16{32, 33},
		[]uint16{34},
		[]uint16{35, 36},
		[]uint16{37, 38},
		[]uint16{39},
		[]uint16{40, 41},
		[]uint16{42, 43},
		[]uint16{44},
		[]uint16{45, 46},
		[]uint16{47},
		[]uint16{48, 49},
		[]uint16{50, 51},
		[]uint16{52},
		[]uint16{53, 54},
		[]uint16{55, 56},
		[]uint16{57},
		[]uint16{58, 59},
		[]uint16{60},
		[]uint16{61, 62},
		[]uint16{63, 64},
		[]uint16{65},
		[]uint16{66, 67},
		[]uint16{68, 69},
		[]uint16{70},
		[]uint16{71, 72},
		[]uint16{73},
		[]uint16{74, 75},
		[]uint16{76, 77},
		[]uint16{78},
		[]uint16{79, 80},
		[]uint16{81, 82},
		[]uint16{83},
		[]uint16{84, 85},
		[]uint16{86},
		[]uint16{87, 88},
		[]uint16{89, 90},
		[]uint16{91},
		[]uint16{92, 93},
		[]uint16{94, 95},
		[]uint16{96},
		[]uint16{97, 98},
		[]uint16{99},
		[]uint16{100, 101},
		[]uint16{102, 103},
		[]uint16{104},
		[]uint16{105, 106},
		[]uint16{107, 108},
		[]uint16{109},
		[]uint16{110, 111},
		[]uint16{112},
		[]uint16{113, 114},
		[]uint16{115, 116},
		[]uint16{117},
		[]uint16{118, 119},
		[]uint16{120, 121},
		[]uint16{122},
		[]uint16{123, 124},
		[]uint16{125},
		[]uint16{126, 127},
		[]uint16{128, 129},
		[]uint16{130},
		[]uint16{131, 132},
		[]uint16{133, 134},
		[]uint16{135},
		[]uint16{136, 137},
		[]uint16{138},
		[]uint16{139, 140},
		[]uint16{141, 142},
		[]uint16{143},
		[]uint16{144, 145},
		[]uint16{146, 147},
		[]uint16{148},
		[]uint16{149, 150},
		[]uint16{151},
		[]uint16{152, 153},
		[]uint16{154, 155},
		[]uint16{156},
		[]uint16{157, 158},
		[]uint16{159, 160},
		[]uint16{161},
		[]uint16{162, 163},
		[]uint16{164},
		[]uint16{165, 166},
		[]uint16{167, 168},
		[]uint16{169},
		[]uint16{170, 171},
		[]uint16{172, 173},
		[]uint16{174},
		[]uint16{175, 176},
		[]uint16{177},
		[]uint16{178, 179},
		[]uint16{180, 181},
		[]uint16{182},
		[]uint16{183, 184},
		[]uint16{185, 186},
		[]uint16{187},
		[]uint16{188, 189},
		[]uint16{190},
		[]uint16{191, 192},
		[]uint16{193, 194},
		[]uint16{195},
		[]uint16{196, 197},
		[]uint16{198, 199},
		[]uint16{200},
		[]uint16{201, 202},
		[]uint16{203},
		[]uint16{204, 205},
		[]uint16{206, 207},
		[]uint16{208},
		[]uint16{209, 210},
		[]uint16{211, 212},
		[]uint16{213},
		[]uint16{214, 215},
		[]uint16{216, 217},
		[]uint16{218},
		[]uint16{219, 220},
		[]uint16{221},
		[]uint16{222, 223},
		[]uint16{224, 225},
		[]uint16{226},
		[]uint16{227, 228},
		[]uint16{229, 230},
		[]uint16{231},
		[]uint16{232, 233},
		[]uint16{234},
		[]uint16{235, 236},
		[]uint16{237, 238},
		[]uint16{239},
		[]uint16{240, 241},
		[]uint16{242, 243},
		[]uint16{244},
		[]uint16{245, 246},
		[]uint16{247},
		[]uint16{248, 249},
		[]uint16{250, 251},
		[]uint16{252},
		[]uint16{253, 254},
		[]uint16{255, 256},
		[]uint16{257},
		[]uint16{258, 259},
		[]uint16{260},
		[]uint16{261, 262},
		[]uint16{263, 264},
		[]uint16{265},
		[]uint16{266, 267},
		[]uint16{268, 269},
		[]uint16{270},
		[]uint16{271, 272},
		[]uint16{273},
		[]uint16{274, 275},
		[]uint16{276, 277},
		[]uint16{278},
		[]uint16{279, 280},
		[]uint16{281, 282},
		[]uint16{283},
		[]uint16{284, 285},
		[]uint16{286},
		[]uint16{287, 288},
		[]uint16{289, 290},
		[]uint16{291},
		[]uint16{292, 293},
		[]uint16{294, 295},
		[]uint16{296},
		[]uint16{297, 298},
		[]uint16{299},
		[]uint16{300, 301},
		[]uint16{302, 303},
		[]uint16{304},
		[]uint16{305, 306},
		[]uint16{307, 308},
		[]uint16{309},
		[]uint16{310, 311},
		[]uint16{312},
		[]uint16{313, 314},
		[]uint16{315, 316},
		[]uint16{317},
		[]uint16{318, 319},
		[]uint16{320, 321},
		[]uint16{322},
		[]uint16{323, 324},
		[]uint16{325},
		[]uint16{326, 327},
		[]uint16{328, 329},
		[]uint16{330},
		[]uint16{331, 332},
		[]uint16{333, 334},
		[]uint16{335},
		[]uint16{336, 337},
		[]uint16{338},
		[]uint16{339, 340},
		[]uint16{341, 342},
		[]uint16{343},
		[]uint16{344, 345},
		[]uint16{346, 347},
		[]uint16{348},
		[]uint16{349, 350},
		[]uint16{351},
		[]uint16{352, 353},
		[]uint16{354, 355},
		[]uint16{356},
		[]uint16{357, 358},
		[]uint16{359, 360},
		[]uint16{361},
		[]uint16{362, 363},
		[]uint16{364},
		[]uint16{365, 366},
		[]uint16{367, 368},
		[]uint16{369},
		[]uint16{370, 371},
		[]uint16{372, 373},
		[]uint16{374},
		[]uint16{375, 376},
		[]uint16{377},
		[]uint16{378, 379},
		[]uint16{380, 381},
		[]uint16{382},
		[]uint16{383, 384},
		[]uint16{385, 386},
		[]uint16{387},
		[]uint16{388, 389},
		[]uint16{390},
		[]uint16{391, 392},
		[]uint16{393, 394},
		[]uint16{395},
		[]uint16{396, 397},
		[]uint16{398, 399},
		[]uint16{400},
		[]uint16{401, 402},
		[]uint16{403},
		[]uint16{404, 405},
		[]uint16{406, 407},
		[]uint16{408},
		[]uint16{409, 410},
		[]uint16{411, 412},
		[]uint16{413},
		[]uint16{414, 415},
		[]uint16{416},
		[]uint16{417, 418},
		[]uint16{419, 420},
		[]uint16{421},
		[]uint16{422, 423},
		[]uint16{424, 425},
		[]uint16{426},
		[]uint16{427, 428},
		[]uint16{429},
		[]uint16{430, 431},
		[]uint16{432, 433},
		[]uint16{434},
		[]uint16{435, 436},
		[]uint16{437, 438},
		[]uint16{439},
		[]uint16{440, 441},
		[]uint16{442},
		[]uint16{443, 444},
		[]uint16{445, 446},
		[]uint16{447},
		[]uint16{448, 449},
		[]uint16{450, 451},
		[]uint16{452},
		[]uint16{453, 454},
		[]uint16{455},
		[]uint16{456, 457},
		[]uint16{458, 459},
		[]uint16{460},
		[]uint16{461, 462},
		[]uint16{463, 464},
		[]uint16{465},
		[]uint16{466, 467},
		[]uint16{468},
		[]uint16{469, 470},
		[]uint16{471, 472},
		[]uint16{473},
		[]uint16{474, 475},
		[]uint16{476, 477},
		[]uint16{478},
		[]uint16{479, 480},
		[]uint16{481},
		[]uint16{482, 483},
		[]uint16{484, 485},
		[]uint16{486},
		[]uint16{487, 488},
		[]uint16{489, 490},
		[]uint16{491},
		[]uint16{492, 493},
		[]uint16{494},
		[]uint16{495, 496},
		[]uint16{497, 498},
		[]uint16{499},
		[]uint16{500, 501},
		[]uint16{502, 503},
		[]uint16{504},
		[]uint16{505, 506},
		[]uint16{507},
		[]uint16{508, 509},
		[]uint16{510, 511},
		[]uint16{512},
		[]uint16{513, 514},
		[]uint16{515, 516},
		[]uint16{517},
		[]uint16{518, 519},
		[]uint16{520},
		[]uint16{521, 522},
		[]uint16{523, 524},
		[]uint16{525},
		[]uint16{526, 527},
		[]uint16{528, 529},
		[]uint16{530},
		[]uint16{531, 532},
		[]uint16{533},
		[]uint16{534, 535},
		[]uint16{536, 537},
		[]uint16{538},
		[]uint16{539, 540},
		[]uint16{541, 542},
		[]uint16{543},
		[]uint16{544, 545},
		[]uint16{546},
		[]uint16{547, 548},
		[]uint16{549, 550},
		[]uint16{551},
		[]uint16{552, 553},
		[]uint16{554, 555},
		[]uint16{556},
		[]uint16{557, 558},
		[]uint16{559},
		[]uint16{560, 561},
		[]uint16{562, 563},
		[]uint16{564},
		[]uint16{565, 566},
		[]uint16{567, 568},
		[]uint16{569},
		[]uint16{570, 571},
		[]uint16{572},
		[]uint16{573, 574},
		[]uint16{575, 576},
		[]uint16{577},
		[]uint16{578, 579},
		[]uint16{580, 581},
		[]uint16{582},
		[]uint16{583, 584},
		[]uint16{585},
		[]uint16{586, 587},
		[]uint16{588, 589},
		[]uint16{590},
		[]uint16{591, 592},
		[]uint16{593, 594},
		[]uint16{595},
		[]uint16{596, 597},
		[]uint16{598},
		[]uint16{599, 600},
		[]uint16{601, 602},
		[]uint16{603},
		[]uint16{604, 605},
		[]uint16{606, 607},
		[]uint16{608},
		[]uint16{609, 610},
		[]uint16{611},
		[]uint16{612, 613},
		[]uint16{614, 615},
		[]uint16{616},
		[]uint16{617, 618},
		[]uint16{619, 620},
		[]uint16{621},
		[]uint16{622, 623},
		[]uint16{624, 625},
		[]uint16{626},
		[]uint16{627, 628},
		[]uint16{629},
		[]uint16{630, 631},
		[]uint16{632, 633},
		[]uint16{634},
		[]uint16{635, 636},
		[]uint16{637, 638},
		[]uint16{639},
		[]uint16{640, 641},
		[]uint16{642},
		[]uint16{643, 644},
		[]uint16{645, 646},
		[]uint16{647},
		[]uint16{648, 649},
		[]uint16{650, 651},
		[]uint16{652},
		[]uint16{653, 654},
		[]uint16{655},
		[]uint16{656, 657},
		[]uint16{658, 659},
		[]uint16{660},
		[]uint16{661, 662},
		[]uint16{663, 664},
		[]uint16{665},
		[]uint16{666, 667},
		[]uint16{668},
		[]uint16{669, 670},
		[]uint16{671, 672},
		[]uint16{673},
		[]uint16{674, 675},
		[]uint16{676, 677},
		[]uint16{678},
		[]uint16{679, 680},
		[]uint16{681},
		[]uint16{682, 683},
		[]uint16{684, 685},
		[]uint16{686},
		[]uint16{687, 688},
		[]uint16{689, 690},
		[]uint16{691},
		[]uint16{692, 693},
		[]uint16{694},
		[]uint16{695, 696},
		[]uint16{697, 698},
		[]uint16{699},
		[]uint16{700, 701},
		[]uint16{702, 703},
		[]uint16{704},
		[]uint16{705, 706},
		[]uint16{707},
		[]uint16{708, 709},
		[]uint16{710, 711},
		[]uint16{712},
		[]uint16{713, 714},
		[]uint16{715, 716},
		[]uint16{717},
		[]uint16{718, 719},
		[]uint16{720},
		[]uint16{721, 722},
		[]uint16{723, 724},
		[]uint16{725},
		[]uint16{726, 727},
		[]uint16{728, 729},
		[]uint16{730},
		[]uint16{731, 732},
		[]uint16{733},
		[]uint16{734, 735},
		[]uint16{736, 737},
		[]uint16{738},
		[]uint16{739, 740},
		[]uint16{741, 742},
		[]uint16{743},
		[]uint16{744, 745},
		[]uint16{746},
		[]uint16{747, 748},
		[]uint16{749, 750},
		[]uint16{751},
		[]uint16{752, 753},
		[]uint16{754, 755},
		[]uint16{756},
		[]uint16{757, 758},
		[]uint16{759},
		[]uint16{760, 761},
		[]uint16{762, 763},
		[]uint16{764},
		[]uint16{765, 766},
		[]uint16{767, 768},
		[]uint16{769},
		[]uint16{770, 771},
		[]uint16{772},
		[]uint16{773, 774},
		[]uint16{775, 776},
		[]uint16{777},
		[]uint16{778, 779},
		[]uint16{780, 781},
		[]uint16{782},
		[]uint16{783, 784},
		[]uint16{785},
		[]uint16{786, 787},
		[]uint16{788, 789},
		[]uint16{790},
		[]uint16{791, 792},
		[]uint16{793, 794},
		[]uint16{795},
		[]uint16{796, 797},
		[]uint16{798},
		[]uint16{799, 800},
		[]uint16{801, 802},
		[]uint16{803},
		[]uint16{804, 805},
		[]uint16{806, 807},
		[]uint16{808},
		[]uint16{809, 810},
		[]uint16{811},
		[]uint16{812, 813},
		[]uint16{814, 815},
		[]uint16{816},
		[]uint16{817, 818},
		[]uint16{819, 820},
		[]uint16{821},
		[]uint16{822, 823},
		[]uint16{824},
		[]uint16{825, 826},
		[]uint16{827, 828},
		[]uint16{829},
		[]uint16{830, 831},
		[]uint16{832, 833},
		[]uint16{834},
		[]uint16{835, 836},
		[]uint16{837},
		[]uint16{838, 839},
		[]uint16{840, 841},
		[]uint16{842},
		[]uint16{843, 844},
		[]uint16{845, 846},
		[]uint16{847},
		[]uint16{848, 849},
		[]uint16{850},
		[]uint16{851, 852},
		[]uint16{853, 854},
		[]uint16{855},
		[]uint16{856, 857},
		[]uint16{858, 859},
		[]uint16{860},
		[]uint16{861, 862},
		[]uint16{863},
		[]uint16{864, 865},
		[]uint16{866, 867},
		[]uint16{868},
		[]uint16{869, 870},
		[]uint16{871, 872},
		[]uint16{873},
		[]uint16{874, 875},
		[]uint16{876},
		[]uint16{877, 878},
		[]uint16{879, 880},
		[]uint16{881},
		[]uint16{882, 883},
		[]uint16{884, 885},
		[]uint16{886},
		[]uint16{887, 888},
		[]uint16{889},
		[]uint16{890, 891},
		[]uint16{892, 893},
		[]uint16{894},
		[]uint16{895, 896},
		[]uint16{897, 898},
		[]uint16{899},
		[]uint16{900, 901},
		[]uint16{902},
		[]uint16{903, 904},
		[]uint16{905, 906},
		[]uint16{907},
		[]uint16{908, 909},
		[]uint16{910, 911},
		[]uint16{912},
		[]uint16{913, 914},
		[]uint16{915},
		[]uint16{916, 917},
		[]uint16{918, 919},
		[]uint16{920},
		[]uint16{921, 922},
		[]uint16{923, 924},
		[]uint16{925},
		[]uint16{926, 927},
		[]uint16{928},
		[]uint16{929, 930},
		[]uint16{931, 932},
		[]uint16{933},
		[]uint16{934, 935},
		[]uint16{936, 937},
		[]uint16{938},
		[]uint16{939, 940},
		[]uint16{941},
		[]uint16{942, 943},
		[]uint16{944, 945},
		[]uint16{946},
		[]uint16{947, 948},
		[]uint16{949, 950},
		[]uint16{951},
		[]uint16{952, 953},
		[]uint16{954},
		[]uint16{955, 956},
		[]uint16{957, 958},
		[]uint16{959},
		[]uint16{960, 961},
		[]uint16{962, 963},
		[]uint16{964},
		[]uint16{965, 966},
		[]uint16{967},
		[]uint16{968, 969},
		[]uint16{970, 971},
		[]uint16{972},
		[]uint16{973, 974},
		[]uint16{975, 976},
		[]uint16{977},
		[]uint16{978, 979},
		[]uint16{980},
		[]uint16{981, 982},
		[]uint16{983, 984},
		[]uint16{985},
		[]uint16{986, 987},
		[]uint16{988, 989},
		[]uint16{990},
		[]uint16{991, 992},
		[]uint16{993},
		[]uint16{994, 995},
		[]uint16{996, 997},
		[]uint16{998},
		[]uint16{999, 1000},
		[]uint16{1001, 1002},
		[]uint16{1003},
		[]uint16{1004, 1005},
		[]uint16{1006},
		[]uint16{1007, 1008},
		[]uint16{1009, 1010},
		[]uint16{1011},
		[]uint16{1012, 1013},
		[]uint16{1014, 1015},
		[]uint16{1016},
		[]uint16{1017, 1018},
		[]uint16{1019},
		[]uint16{1020, 1021},
		[]uint16{1022, 1023},
		[]uint16{1024},
		[]uint16{1025, 1026},
		[]uint16{1027, 1028},
		[]uint16{1029},
		[]uint16{1030, 1031},
		[]uint16{1032},
		[]uint16{1033, 1034},
		[]uint16{1035, 1036},
		[]uint16{1037},
		[]uint16{1038, 1039},
		[]uint16{1040, 1041},
		[]uint16{1042},
		[]uint16{1043, 1044},
		[]uint16{1045, 1046},
		[]uint16{1047},
		[]uint16{1048, 1049},
		[]uint16{1050},
		[]uint16{1051, 1052},
		[]uint16{1053, 1054},
		[]uint16{1055},
		[]uint16{1056, 1057},
		[]uint16{1058, 1059},
		[]uint16{1060},
		[]uint16{1061, 1062},
		[]uint16{1063},
		[]uint16{1064, 1065},
		[]uint16{1066, 1067},
		[]uint16{1068},
		[]uint16{1069, 1070},
		[]uint16{1071, 1072},
		[]uint16{1073},
		[]uint16{1074, 1075},
		[]uint16{1076},
		[]uint16{1077, 1078},
		[]uint16{1079, 1080},
		[]uint16{1081},
		[]uint16{1082, 1083},
		[]uint16{1084, 1085},
		[]uint16{1086},
		[]uint16{1087, 1088},
		[]uint16{1089},
		[]uint16{1090, 1091},
		[]uint16{1092, 1093},
		[]uint16{1094},
		[]uint16{1095, 1096},
		[]uint16{1097, 1098},
		[]uint16{1099},
		[]uint16{1100, 1101},
		[]uint16{1102},
		[]uint16{1103, 1104},
		[]uint16{1105, 1106},
		[]uint16{1107},
		[]uint16{1108, 1109},
		[]uint16{1110, 1111},
		[]uint16{1112},
		[]uint16{1113, 1114},
		[]uint16{1115},
		[]uint16{1116, 1117},
		[]uint16{1118, 1119},
		[]uint16{1120},
		[]uint16{1121, 1122},
		[]uint16{1123, 1124},
		[]uint16{1125},
		[]uint16{1126, 1127},
		[]uint16{1128},
		[]uint16{1129, 1130},
		[]uint16{1131, 1132},
		[]uint16{1133},
		[]uint16{1134, 1135},
		[]uint16{1136, 1137},
		[]uint16{1138},
		[]uint16{1139, 1140},
		[]uint16{1141},
		[]uint16{1142, 1143},
		[]uint16{1144, 1145},
		[]uint16{1146},
		[]uint16{1147, 1148},
		[]uint16{1149, 1150},
		[]uint16{1151},
		[]uint16{1152, 1153},
		[]uint16{1154},
		[]uint16{1155, 1156},
		[]uint16{1157, 1158},
		[]uint16{1159},
		[]uint16{1160, 1161},
		[]uint16{1162, 1163},
		[]uint16{1164},
		[]uint16{1165, 1166},
		[]uint16{1167},
		[]uint16{1168, 1169},
		[]uint16{1170, 1171},
		[]uint16{1172},
		[]uint16{1173, 1174},
		[]uint16{1175, 1176},
		[]uint16{1177},
		[]uint16{1178, 1179},
		[]uint16{1180},
		[]uint16{1181, 1182},
		[]uint16{1183, 1184},
		[]uint16{1185},
		[]uint16{1186, 1187},
		[]uint16{1188, 1189},
		[]uint16{1190},
		[]uint16{1191, 1192},
		[]uint16{1193},
		[]uint16{1194, 1195},
		[]uint16{1196, 1197},
		[]uint16{1198},
		[]uint16{1199, 1200},
		[]uint16{1201, 1202},
		[]uint16{1203},
		[]uint16{1204, 1205},
		[]uint16{1206},
		[]uint16{1207, 1208},
		[]uint16{1209, 1210},
		[]uint16{1211},
		[]uint16{1212, 1213},
		[]uint16{1214, 1215},
		[]uint16{1216},
		[]uint16{1217, 1218},
		[]uint16{1219},
		[]uint16{1220, 1221},
		[]uint16{1222, 1223},
		[]uint16{1224},
		[]uint16{1225, 1226},
		[]uint16{1227, 1228},
		[]uint16{1229},
		[]uint16{1230, 1231},
		[]uint16{1232},
		[]uint16{1233, 1234},
		[]uint16{1235, 1236},
		[]uint16{1237},
		[]uint16{1238, 1239},
		[]uint16{1240, 1241},
		[]uint16{1242},
		[]uint16{1243, 1244},
		[]uint16{1245},
		[]uint16{1246, 1247},
		[]uint16{1248, 1249},
		[]uint16{1250},
		[]uint16{1251, 1252},
		[]uint16{1253, 1254},
		[]uint16{1255},
		[]uint16{1256, 1257},
		[]uint16{1258},
		[]uint16{1259, 1260},
		[]uint16{1261, 1262},
		[]uint16{1263},
		[]uint16{1264, 1265},
		[]uint16{1266, 1267},
		[]uint16{1268},
		[]uint16{1269, 1270},
		[]uint16{1271},
		[]uint16{1272, 1273},
		[]uint16{1274, 1275},
		[]uint16{1276},
		[]uint16{1277, 1278},
		[]uint16{1279, 1280},
		[]uint16{1281},
		[]uint16{1282, 1283},
		[]uint16{1284},
		[]uint16{1285, 1286},
		[]uint16{1287, 1288},
		[]uint16{1289},
		[]uint16{1290, 1291},
		[]uint16{1292, 1293},
		[]uint16{1294},
		[]uint16{1295, 1296},
		[]uint16{1297},
		[]uint16{1298, 1299},
		[]uint16{1300, 1301},
		[]uint16{1302},
		[]uint16{1303, 1304},
		[]uint16{1305, 1306},
		[]uint16{1307},
		[]uint16{1308, 1309},
		[]uint16{1310},
		[]uint16{1311, 1312},
		[]uint16{1313, 1314},
		[]uint16{1315},
		[]uint16{1316, 1317},
		[]uint16{1318, 1319},
		[]uint16{1320},
		[]uint16{1321, 1322},
		[]uint16{1323},
		[]uint16{1324, 1325},
		[]uint16{1326, 1327},
		[]uint16{1328},
		[]uint16{1329, 1330},
		[]uint16{1331, 1332},
		[]uint16{1333},
		[]uint16{1334, 1335},
		[]uint16{1336},
		[]uint16{1337, 1338},
		[]uint16{1339, 1340},
		[]uint16{1341},
		[]uint16{1342, 1343},
		[]uint16{1344, 1345},
		[]uint16{1346},
		[]uint16{1347, 1348},
		[]uint16{1349},
		[]uint16{1350, 1351},
		[]uint16{1352, 1353},
		[]uint16{1354},
		[]uint16{1355, 1356},
		[]uint16{1357, 1358},
		[]uint16{1359},
		[]uint16{1360, 1361},
		[]uint16{1362},
		[]uint16{1363, 1364},
		[]uint16{1365, 1366},
		[]uint16{1367},
		[]uint16{1368, 1369},
		[]uint16{1370, 1371},
		[]uint16{1372},
		[]uint16{1373, 1374},
		[]uint16{1375},
		[]uint16{1376, 1377},
		[]uint16{1378, 1379},
		[]uint16{1380},
		[]uint16{1381, 1382},
		[]uint16{1383, 1384},
		[]uint16{1385},
		[]uint16{1386, 1387},
		[]uint16{1388},
		[]uint16{1389, 1390},
		[]uint16{1391, 1392},
		[]uint16{1393},
		[]uint16{1394, 1395},
		[]uint16{1396, 1397},
		[]uint16{1398},
		[]uint16{1399, 1400},
		[]uint16{1401},
		[]uint16{1402, 1403},
		[]uint16{1404, 1405},
		[]uint16{1406},
		[]uint16{1407, 1408},
		[]uint16{1409, 1410},
		[]uint16{1411},
		[]uint16{1412, 1413},
		[]uint16{1414},
		[]uint16{1415, 1416},
		[]uint16{1417, 1418},
		[]uint16{1419},
		[]uint16{1420, 1421},
		[]uint16{1422, 1423},
		[]uint16{1424},
		[]uint16{1425, 1426},
		[]uint16{1427},
		[]uint16{1428, 1429},
		[]uint16{1430, 1431},
		[]uint16{1432},
		[]uint16{1433, 1434},
		[]uint16{1435, 1436},
		[]uint16{1437},
		[]uint16{1438, 1439},
		[]uint16{1440},
		[]uint16{1441, 1442},
		[]uint16{1443, 1444},
		[]uint16{1445},
		[]uint16{1446, 1447},
		[]uint16{1448, 1449},
		[]uint16{1450},
		[]uint16{1451, 1452},
		[]uint16{1453},
		[]uint16{1454, 1455},
		[]uint16{1456, 1457},
		[]uint16{1458},
		[]uint16{1459, 1460},
		[]uint16{1461, 1462},
		[]uint16{1463},
		[]uint16{1464, 1465},
		[]uint16{1466, 1467},
		[]uint16{1468},
		[]uint16{1469, 1470},
		[]uint16{1471},
		[]uint16{1472, 1473},
		[]uint16{1474, 1475},
		[]uint16{1476},
		[]uint16{1477, 1478},
		[]uint16{1479, 1480},
		[]uint16{1481},
		[]uint16{1482, 1483},
		[]uint16{1484},
		[]uint16{1485, 1486},
		[]uint16{1487, 1488},
		[]uint16{1489},
		[]uint16{1490, 1491},
		[]uint16{1492, 1493},
		[]uint16{1494},
		[]uint16{1495, 1496},
		[]uint16{1497},
		[]uint16{1498, 1499},
		[]uint16{1500, 1501},
		[]uint16{1502},
		[]uint16{1503, 1504},
		[]uint16{1505, 1506},
		[]uint16{1507},
		[]uint16{1508, 1509},
		[]uint16{1510},
		[]uint16{1511, 1512},
		[]uint16{1513, 1514},
		[]uint16{1515},
		[]uint16{1516, 1517},
		[]uint16{1518, 1519},
		[]uint16{1520},
		[]uint16{1521, 1522},
		[]uint16{1523},
		[]uint16{1524, 1525},
		[]uint16{1526, 1527},
		[]uint16{1528},
		[]uint16{1529, 1530},
		[]uint16{1531, 1532},
		[]uint16{1533},
		[]uint16{1534, 1535},
		[]uint16{1536},
		[]uint16{1537, 1538},
		[]uint16{1539, 1540},
		[]uint16{1541},
		[]uint16{1542, 1543},
		[]uint16{1544, 1545},
		[]uint16{1546},
		[]uint16{1547, 1548},
		[]uint16{1549},
		[]uint16{1550, 1551},
		[]uint16{1552, 1553},
		[]uint16{1554},
		[]uint16{1555, 1556},
		[]uint16{1557, 1558},
		[]uint16{1559},
		[]uint16{1560, 1561},
		[]uint16{1562},
		[]uint16{1563, 1564},
		[]uint16{1565, 1566},
		[]uint16{1567},
		[]uint16{1568, 1569},
		[]uint16{1570, 1571},
		[]uint16{1572},
		[]uint16{1573, 1574},
		[]uint16{1575},
		[]uint16{1576, 1577},
		[]uint16{1578, 1579},
		[]uint16{1580},
		[]uint16{1581, 1582},
		[]uint16{1583, 1584},
		[]uint16{1585},
		[]uint16{1586, 1587},
		[]uint16{1588},
		[]uint16{1589, 1590},
		[]uint16{1591, 1592},
		[]uint16{1593},
		[]uint16{1594, 1595},
		[]uint16{1596, 1597},
		[]uint16{1598},
		[]uint16{1599, 1600},
		[]uint16{1601},
		[]uint16{1602, 1603},
		[]uint16{1604, 1605},
		[]uint16{1606},
		[]uint16{1607, 1608},
		[]uint16{1609, 1610},
		[]uint16{1611},
		[]uint16{1612, 1613},
		[]uint16{1614},
		[]uint16{1615, 1616},
		[]uint16{1617, 1618},
		[]uint16{1619},
		[]uint16{1620, 1621},
		[]uint16{1622, 1623},
		[]uint16{1624},
		[]uint16{1625, 1626},
		[]uint16{1627},
		[]uint16{1628, 1629},
		[]uint16{1630, 1631},
		[]uint16{1632},
		[]uint16{1633, 1634},
		[]uint16{1635, 1636},
		[]uint16{1637},
		[]uint16{1638, 1639},
		[]uint16{1640},
		[]uint16{1641, 1642},
		[]uint16{1643, 1644},
		[]uint16{1645},
		[]uint16{1646, 1647},
		[]uint16{1648, 1649},
		[]uint16{1650},
		[]uint16{1651, 1652},
		[]uint16{1653},
		[]uint16{1654, 1655},
		[]uint16{1656, 1657},
		[]uint16{1658},
		[]uint16{1659, 1660},
		[]uint16{1661, 1662},
		[]uint16{1663},
		[]uint16{1664, 1665},
		[]uint16{1666},
		[]uint16{1667, 1668},
		[]uint16{1669, 1670},
		[]uint16{1671},
		[]uint16{1672, 1673},
		[]uint16{1674, 1675},
		[]uint16{1676},
		[]uint16{1677, 1678},
		[]uint16{1679},
		[]uint16{1680, 1681},
		[]uint16{1682, 1683},
		[]uint16{1684},
		[]uint16{1685, 1686},
		[]uint16{1687, 1688},
		[]uint16{1689},
		[]uint16{1690, 1691},
		[]uint16{1692},
		[]uint16{1693, 1694},
		[]uint16{1695, 1696},
		[]uint16{1697},
		[]uint16{1698, 1699},
		[]uint16{1700, 1701},
		[]uint16{1702},
		[]uint16{1703, 1704},
		[]uint16{1705},
		[]uint16{1706, 1707},
		[]uint16{1708, 1709},
		[]uint16{1710},
		[]uint16{1711, 1712},
		[]uint16{1713, 1714},
		[]uint16{1715},
		[]uint16{1716, 1717},
		[]uint16{1718},
		[]uint16{1719, 1720},
		[]uint16{1721, 1722},
		[]uint16{1723},
		[]uint16{1724, 1725},
		[]uint16{1726, 1727},
		[]uint16{1728},
		[]uint16{1729, 1730},
		[]uint16{1731},
		[]uint16{1732, 1733},
		[]uint16{1734, 1735},
		[]uint16{1736},
		[]uint16{1737, 1738},
		[]uint16{1739, 1740},
		[]uint16{1741},
		[]uint16{1742, 1743},
		[]uint16{1744},
		[]uint16{1745, 1746},
		[]uint16{1747, 1748},
		[]uint16{1749},
		[]uint16{1750, 1751},
		[]uint16{1752, 1753},
		[]uint16{1754},
		[]uint16{1755, 1756},
		[]uint16{1757},
		[]uint16{1758, 1759},
		[]uint16{1760, 1761},
		[]uint16{1762},
		[]uint16{1763, 1764},
		[]uint16{1765, 1766},
		[]uint16{1767},
		[]uint16{1768, 1769},
		[]uint16{1770},
		[]uint16{1771, 1772},
		[]uint16{1773, 1774},
		[]uint16{1775},
		[]uint16{1776, 1777},
		[]uint16{1778, 1779},
		[]uint16{1780},
		[]uint16{1781, 1782},
		[]uint16{1783},
		[]uint16{1784, 1785},
		[]uint16{1786, 1787},
		[]uint16{1788},
		[]uint16{1789, 1790},
		[]uint16{1791, 1792},
		[]uint16{1793},
		[]uint16{1794, 1795},
		[]uint16{1796},
		[]uint16{1797, 1798},
		[]uint16{1799, 1800},
		[]uint16{1801},
		[]uint16{1802, 1803},
		[]uint16{1804, 1805},
		[]uint16{1806},
		[]uint16{1807, 1808},
		[]uint16{1809},
		[]uint16{1810, 1811},
		[]uint16{1812, 1813},
		[]uint16{1814},
		[]uint16{1815, 1816},
		[]uint16{1817, 1818},
		[]uint16{1819},
		[]uint16{1820, 1821},
		[]uint16{1822},
		[]uint16{1823, 1824},
		[]uint16{1825, 1826},
		[]uint16{1827},
		[]uint16{1828, 1829},
		[]uint16{1830, 1831},
		[]uint16{1832},
		[]uint16{1833, 1834},
		[]uint16{1835},
		[]uint16{1836, 1837},
		[]uint16{1838, 1839},
		[]uint16{1840},
		[]uint16{1841, 1842},
		[]uint16{1843, 1844},
		[]uint16{1845},
		[]uint16{1846, 1847},
		[]uint16{1848},
		[]uint16{1849, 1850},
		[]uint16{1851, 1852},
		[]uint16{1853},
		[]uint16{1854, 1855},
		[]uint16{1856, 1857},
		[]uint16{1858},
		[]uint16{1859, 1860},
		[]uint16{1861},
		[]uint16{1862, 1863},
		[]uint16{1864, 1865},
		[]uint16{1866},
		[]uint16{1867, 1868},
		[]uint16{1869, 1870},
		[]uint16{1871},
		[]uint16{1872, 1873},
		[]uint16{1874, 1875},
		[]uint16{1876},
		[]uint16{1877, 1878},
		[]uint16{1879},
		[]uint16{1880, 1881},
		[]uint16{1882, 1883},
		[]uint16{1884},
		[]uint16{1885, 1886},
		[]uint16{1887, 1888},
		[]uint16{1889},
		[]uint16{1890, 1891},
		[]uint16{1892},
		[]uint16{1893, 1894},
		[]uint16{1895, 1896},
		[]uint16{1897},
		[]uint16{1898, 1899},
		[]uint16{1900, 1901},
		[]uint16{1902},
		[]uint16{1903, 1904},
		[]uint16{1905},
		[]uint16{1906, 1907},
		[]uint16{1908, 1909},
		[]uint16{1910},
		[]uint16{1911, 1912},
		[]uint16{1913, 1914},
		[]uint16{1915},
		[]uint16{1916, 1917},
		[]uint16{1918},
		[]uint16{1919, 1920},
		[]uint16{1921, 1922},
		[]uint16{1923},
		[]uint16{1924, 1925},
		[]uint16{1926, 1927},
		[]uint16{1928},
		[]uint16{1929, 1930},
		[]uint16{1931},
		[]uint16{1932, 1933},
		[]uint16{1934, 1935},
		[]uint16{1936},
		[]uint16{1937, 1938},
		[]uint16{1939, 1940},
		[]uint16{1941},
		[]uint16{1942, 1943},
		[]uint16{1944},
		[]uint16{1945, 1946},
		[]uint16{1947, 1948},
		[]uint16{1949},
		[]uint16{1950, 1951},
		[]uint16{1952, 1953},
		[]uint16{1954},
		[]uint16{1955, 1956},
		[]uint16{1957},
		[]uint16{1958, 1959},
		[]uint16{1960, 1961},
		[]uint16{1962},
		[]uint16{1963, 1964},
		[]uint16{1965, 1966},
		[]uint16{1967},
		[]uint16{1968, 1969},
		[]uint16{1970},
		[]uint16{1971, 1972},
		[]uint16{1973, 1974},
		[]uint16{1975},
		[]uint16{1976, 1977},
		[]uint16{1978, 1979},
		[]uint16{1980},
		[]uint16{1981, 1982},
		[]uint16{1983},
		[]uint16{1984, 1985},
		[]uint16{1986, 1987},
		[]uint16{1988},
		[]uint16{1989, 1990},
		[]uint16{1991, 1992},
		[]uint16{1993},
		[]uint16{1994, 1995},
		[]uint16{1996},
		[]uint16{1997, 1998},
		[]uint16{1999, 2000},
		[]uint16{2001},
		[]uint16{2002, 2003},
		[]uint16{2004, 2005},
		[]uint16{2006},
		[]uint16{2007, 2008},
		[]uint16{2009},
		[]uint16{2010, 2011},
		[]uint16{2012, 2013},
		[]uint16{2014},
		[]uint16{2015, 2016},
		[]uint16{2017, 2018},
		[]uint16{2019},
		[]uint16{2020, 2021},
		[]uint16{2022},
		[]uint16{2023, 2024},
		[]uint16{2025, 2026},
		[]uint16{2027},
		[]uint16{2028, 2029},
		[]uint16{2030, 2031},
		[]uint16{2032},
		[]uint16{2033, 2034},
		[]uint16{2035},
		[]uint16{2036, 2037},
		[]uint16{2038, 2039},
		[]uint16{2040},
		[]uint16{2041, 2042},
		[]uint16{2043, 2044},
		[]uint16{2045},
		[]uint16{2046, 2047},
		[]uint16{2048},
		[]uint16{2049, 2050},
		[]uint16{2051, 2052},
		[]uint16{2053},
		[]uint16{2054, 2055},
		[]uint16{2056, 2057},
		[]uint16{2058},
		[]uint16{2059, 2060},
		[]uint16{2061},
		[]uint16{2062, 2063},
		[]uint16{2064, 2065},
		[]uint16{2066},
		[]uint16{2067, 2068},
		[]uint16{2069, 2070},
		[]uint16{2071},
		[]uint16{2072, 2073},
		[]uint16{2074},
		[]uint16{2075, 2076},
		[]uint16{2077, 2078},
		[]uint16{2079},
		[]uint16{2080, 2081},
		[]uint16{2082, 2083},
		[]uint16{2084},
		[]uint16{2085, 2086},
		[]uint16{2087},
		[]uint16{2088, 2089},
		[]uint16{2090, 2091},
		[]uint16{2092},
		[]uint16{2093, 2094},
		[]uint16{2095, 2096},
		[]uint16{2097},
		[]uint16{2098, 2099},
		[]uint16{2100},
		[]uint16{2101, 2102},
		[]uint16{2103, 2104},
		[]uint16{2105},
		[]uint16{2106, 2107},
		[]uint16{2108, 2109},
		[]uint16{2110},
		[]uint16{2111, 2112},
		[]uint16{2113},
		[]uint16{2114, 2115},
		[]uint16{2116, 2117},
		[]uint16{2118},
		[]uint16{2119, 2120},
		[]uint16{2121, 2122},
		[]uint16{2123},
		[]uint16{2124, 2125},
		[]uint16{2126},
		[]uint16{2127, 2128},
		[]uint16{2129, 2130},
		[]uint16{2131},
		[]uint16{2132, 2133},
		[]uint16{2134, 2135},
		[]uint16{2136},
		[]uint16{2137, 2138},
		[]uint16{2139},
		[]uint16{2140, 2141},
		[]uint16{2142, 2143},
		[]uint16{2144},
		[]uint16{2145, 2146},
		[]uint16{2147, 2148},
		[]uint16{2149},
		[]uint16{2150, 2151},
		[]uint16{2152},
		[]uint16{2153, 2154},
		[]uint16{2155, 2156},
		[]uint16{2157},
		[]uint16{2158, 2159},
		[]uint16{2160, 2161},
		[]uint16{2162},
		[]uint16{2163, 2164},
		[]uint16{2165},
		[]uint16{2166, 2167},
		[]uint16{2168, 2169},
		[]uint16{2170},
		[]uint16{2171, 2172},
		[]uint16{2173, 2174},
		[]uint16{2175},
		[]uint16{2176, 2177},
		[]uint16{2178},
		[]uint16{2179, 2180},
		[]uint16{2181, 2182},
		[]uint16{2183},
		[]uint16{2184, 2185},
		[]uint16{2186, 2187},
		[]uint16{2188},
		[]uint16{2189, 2190},
		[]uint16{2191},
		[]uint16{2192, 2193},
		[]uint16{2194, 2195},
		[]uint16{2196},
		[]uint16{2197, 2198},
		[]uint16{2199, 2200},
		[]uint16{2201},
		[]uint16{2202, 2203},
		[]uint16{2204},
		[]uint16{2205, 2206},
		[]uint16{2207, 2208},
		[]uint16{2209},
		[]uint16{2210, 2211},
		[]uint16{2212, 2213},
		[]uint16{2214},
		[]uint16{2215, 2216},
		[]uint16{2217},
		[]uint16{2218, 2219},
		[]uint16{2220, 2221},
		[]uint16{2222},
		[]uint16{2223, 2224},
		[]uint16{2225, 2226},
		[]uint16{2227},
		[]uint16{2228, 2229},
		[]uint16{2230},
		[]uint16{2231, 2232},
		[]uint16{2233, 2234},
		[]uint16{2235},
		[]uint16{2236, 2237},
		[]uint16{2238, 2239},
		[]uint16{2240},
		[]uint16{2241, 2242},
		[]uint16{2243},
		[]uint16{2244, 2245},
		[]uint16{2246, 2247},
		[]uint16{2248},
		[]uint16{2249, 2250},
		[]uint16{2251, 2252},
		[]uint16{2253},
		[]uint16{2254, 2255},
		[]uint16{2256},
		[]uint16{2257, 2258},
		[]uint16{2259, 2260},
		[]uint16{2261},
		[]uint16{2262, 2263},
		[]uint16{2264, 2265},
		[]uint16{2266},
		[]uint16{2267, 2268},
		[]uint16{2269},
		[]uint16{2270, 2271},
		[]uint16{2272, 2273},
		[]uint16{2274},
		[]uint16{2275, 2276},
		[]uint16{2277, 2278},
		[]uint16{2279},
		[]uint16{2280, 2281},
		[]uint16{2282},
		[]uint16{2283, 2284},
		[]uint16{2285, 2286},
		[]uint16{2287},
		[]uint16{2288, 2289},
		[]uint16{2290, 2291},
		[]uint16{2292},
		[]uint16{2293, 2294},
		[]uint16{2295, 2296},
		[]uint16{2297},
		[]uint16{2298, 2299},
		[]uint16{2300},
		[]uint16{2301, 2302},
		[]uint16{2303, 2304},
		[]uint16{2305},
		[]uint16{2306, 2307},
		[]uint16{2308, 2309},
		[]uint16{2310},
		[]uint16{2311, 2312},
		[]uint16{2313},
		[]uint16{2314, 2315},
		[]uint16{2316, 2317},
		[]uint16{2318},
		[]uint16{2319, 2320},
		[]uint16{2321, 2322},
		[]uint16{2323},
		[]uint16{2324, 2325},
		[]uint16{2326},
		[]uint16{2327, 2328},
		[]uint16{2329, 2330},
		[]uint16{2331},
		[]uint16{2332, 2333},
		[]uint16{2334, 2335},
		[]uint16{2336},
		[]uint16{2337, 2338},
		[]uint16{2339},
		[]uint16{2340, 2341},
		[]uint16{2342, 2343},
		[]uint16{2344},
		[]uint16{2345, 2346},
		[]uint16{2347, 2348},
		[]uint16{2349},
		[]uint16{2350, 2351},
		[]uint16{2352},
		[]uint16{2353, 2354},
		[]uint16{2355, 2356},
		[]uint16{2357},
		[]uint16{2358, 2359},
		[]uint16{2360, 2361},
		[]uint16{2362},
		[]uint16{2363, 2364},
		[]uint16{2365},
		[]uint16{2366, 2367},
		[]uint16{2368, 2369},
		[]uint16{2370},
		[]uint16{2371, 2372},
		[]uint16{2373, 2374},
		[]uint16{2375},
		[]uint16{2376, 2377},
		[]uint16{2378},
		[]uint16{2379, 2380},
		[]uint16{2381, 2382},
		[]uint16{2383},
		[]uint16{2384, 2385},
		[]uint16{2386, 2387},
		[]uint16{2388},
		[]uint16{2389, 2390},
		[]uint16{2391},
		[]uint16{2392, 2393},
		[]uint16{2394, 2395},
		[]uint16{2396},
		[]uint16{2397, 2398},
		[]uint16{2399, 2400},
		[]uint16{2401},
		[]uint16{2402, 2403},
		[]uint16{2404},
		[]uint16{2405, 2406},
		[]uint16{2407, 2408},
		[]uint16{2409},
		[]uint16{2410, 2411},
		[]uint16{2412, 2413},
		[]uint16{2414},
		[]uint16{2415, 2416},
		[]uint16{2417},
		[]uint16{2418, 2419},
		[]uint16{2420, 2421},
		[]uint16{2422},
		[]uint16{2423, 2424},
		[]uint16{2425, 2426},
		[]uint16{2427},
		[]uint16{2428, 2429},
		[]uint16{2430},
		[]uint16{2431, 2432},
		[]uint16{2433, 2434},
		[]uint16{2435},
		[]uint16{2436, 2437},
		[]uint16{2438, 2439},
		[]uint16{2440},
		[]uint16{2441, 2442},
		[]uint16{2443},
		[]uint16{2444, 2445},
		[]uint16{2446, 2447},
		[]uint16{2448},
		[]uint16{2449, 2450},
		[]uint16{2451, 2452},
		[]uint16{2453},
		[]uint16{2454, 2455},
		[]uint16{2456},
		[]uint16{2457, 2458},
		[]uint16{2459, 2460},
		[]uint16{2461},
		[]uint16{2462, 2463},
		[]uint16{2464, 2465},
		[]uint16{2466},
		[]uint16{2467, 2468},
		[]uint16{2469},
		[]uint16{2470, 2471},
		[]uint16{2472, 2473},
		[]uint16{2474},
		[]uint16{2475, 2476},
		[]uint16{2477, 2478},
		[]uint16{2479},
		[]uint16{2480, 2481},
		[]uint16{2482},
		[]uint16{2483, 2484},
		[]uint16{2485, 2486},
		[]uint16{2487},
		[]uint16{2488, 2489},
		[]uint16{2490, 2491},
		[]uint16{2492},
		[]uint16{2493, 2494},
		[]uint16{2495},
		[]uint16{2496, 2497},
		[]uint16{2498, 2499},
		[]uint16{2500},
		[]uint16{2501, 2502},
		[]uint16{2503, 2504},
		[]uint16{2505},
		[]uint16{2506, 2507},
		[]uint16{2508},
		[]uint16{2509, 2510},
		[]uint16{2511, 2512},
		[]uint16{2513},
		[]uint16{2514, 2515},
		[]uint16{2516, 2517},
		[]uint16{2518},
		[]uint16{2519, 2520},
		[]uint16{2521},
		[]uint16{2522, 2523},
		[]uint16{2524, 2525},
		[]uint16{2526},
		[]uint16{2527, 2528},
		[]uint16{2529, 2530},
		[]uint16{2531},
		[]uint16{2532, 2533},
		[]uint16{2534},
		[]uint16{2535, 2536},
		[]uint16{2537, 2538},
		[]uint16{2539},
		[]uint16{2540, 2541},
		[]uint16{2542, 2543},
		[]uint16{2544},
		[]uint16{2545, 2546},
		[]uint16{2547},
		[]uint16{2548, 2549},
		[]uint16{2550, 2551},
		[]uint16{2552},
		[]uint16{2553, 2554},
		[]uint16{2555, 2556},
		[]uint16{2557},
		[]uint16{2558, 2559},
		[]uint16{2560},
		[]uint16{2561, 2562},
		[]uint16{2563, 2564},
		[]uint16{2565},
		[]uint16{2566, 2567},
		[]uint16{2568, 2569},
		[]uint16{2570},
		[]uint16{2571, 2572},
		[]uint16{2573},
		[]uint16{2574, 2575},
		[]uint16{2576, 2577},
		[]uint16{2578},
		[]uint16{2579, 2580},
		[]uint16{2581, 2582},
		[]uint16{2583},
		[]uint16{2584, 2585},
		[]uint16{2586},
		[]uint16{2587, 2588},
		[]uint16{2589, 2590},
		[]uint16{2591},
		[]uint16{2592, 2593},
		[]uint16{2594, 2595},
		[]uint16{2596},
		[]uint16{2597, 2598},
		[]uint16{2599},
		[]uint16{2600, 2601},
		[]uint16{2602, 2603},
		[]uint16{2604},
		[]uint16{2605, 2606},
		[]uint16{2607, 2608},
		[]uint16{2609},
		[]uint16{2610, 2611},
		[]uint16{2612},
		[]uint16{2613, 2614},
		[]uint16{2615, 2616},
		[]uint16{2617},
		[]uint16{2618, 2619},
		[]uint16{2620, 2621},
		[]uint16{2622},
		[]uint16{2623, 2624},
		[]uint16{2625},
		[]uint16{2626, 2627},
		[]uint16{2628, 2629},
		[]uint16{2630},
		[]uint16{2631, 2632},
		[]uint16{2633, 2634},
		[]uint16{2635},
		[]uint16{2636, 2637},
		[]uint16{2638},
		[]uint16{2639, 2640},
		[]uint16{2641, 2642},
		[]uint16{2643},
		[]uint16{2644, 2645},
		[]uint16{2646, 2647},
		[]uint16{2648},
		[]uint16{2649, 2650},
		[]uint16{2651},
		[]uint16{2652, 2653},
		[]uint16{2654, 2655},
		[]uint16{2656},
		[]uint16{2657, 2658},
		[]uint16{2659, 2660},
		[]uint16{2661},
		[]uint16{2662, 2663},
		[]uint16{2664},
		[]uint16{2665, 2666},
		[]uint16{2667, 2668},
		[]uint16{2669},
		[]uint16{2670, 2671},
		[]uint16{2672, 2673},
		[]uint16{2674},
		[]uint16{2675, 2676},
		[]uint16{2677},
		[]uint16{2678, 2679},
		[]uint16{2680, 2681},
		[]uint16{2682},
		[]uint16{2683, 2684},
		[]uint16{2685, 2686},
		[]uint16{2687},
		[]uint16{2688, 2689},
		[]uint16{2690},
		[]uint16{2691, 2692},
		[]uint16{2693, 2694},
		[]uint16{2695},
		[]uint16{2696, 2697},
		[]uint16{2698, 2699},
		[]uint16{2700},
		[]uint16{2701, 2702},
		[]uint16{2703},
		[]uint16{2704, 2705},
		[]uint16{2706, 2707},
		[]uint16{2708},
		[]uint16{2709, 2710},
		[]uint16{2711, 2712},
		[]uint16{2713},
		[]uint16{2714, 2715},
		[]uint16{2716, 2717},
		[]uint16{2718},
		[]uint16{2719, 2720},
		[]uint16{2721},
		[]uint16{2722, 2723},
		[]uint16{2724, 2725},
		[]uint16{2726},
		[]uint16{2727, 2728},
		[]uint16{2729, 2730},
		[]uint16{2731},
		[]uint16{2732, 2733},
		[]uint16{2734},
		[]uint16{2735, 2736},
		[]uint16{2737, 2738},
		[]uint16{2739},
		[]uint16{2740, 2741},
		[]uint16{2742, 2743},
		[]uint16{2744},
		[]uint16{2745, 2746},
		[]uint16{2747},
		[]uint16{2748, 2749},
		[]uint16{2750, 2751},
		[]uint16{2752},
		[]uint16{2753, 2754},
		[]uint16{2755, 2756},
		[]uint16{2757},
		[]uint16{2758, 2759},
		[]uint16{2760},
		[]uint16{2761, 2762},
		[]uint16{2763, 2764},
		[]uint16{2765},
		[]uint16{2766, 2767},
		[]uint16{2768, 2769},
		[]uint16{2770},
		[]uint16{2771, 2772},
		[]uint16{2773},
		[]uint16{2774, 2775},
		[]uint16{2776, 2777},
		[]uint16{2778},
		[]uint16{2779, 2780},
		[]uint16{2781, 2782},
		[]uint16{2783},
		[]uint16{2784, 2785},
		[]uint16{2786},
		[]uint16{2787, 2788},
		[]uint16{2789, 2790},
		[]uint16{2791},
		[]uint16{2792, 2793},
		[]uint16{2794, 2795},
		[]uint16{2796},
		[]uint16{2797, 2798},
		[]uint16{2799},
		[]uint16{2800, 2801},
		[]uint16{2802, 2803},
		[]uint16{2804},
		[]uint16{2805, 2806},
		[]uint16{2807, 2808},
		[]uint16{2809},
		[]uint16{2810, 2811},
		[]uint16{2812},
		[]uint16{2813, 2814},
		[]uint16{2815, 2816},
		[]uint16{2817},
		[]uint16{2818, 2819},
		[]uint16{2820, 2821},
		[]uint16{2822},
		[]uint16{2823, 2824},
		[]uint16{2825},
		[]uint16{2826, 2827},
		[]uint16{2828, 2829},
		[]uint16{2830},
		[]uint16{2831, 2832},
		[]uint16{2833, 2834},
		[]uint16{2835},
		[]uint16{2836, 2837},
		[]uint16{2838},
		[]uint16{2839, 2840},
		[]uint16{2841, 2842},
		[]uint16{2843},
		[]uint16{2844, 2845},
		[]uint16{2846, 2847},
		[]uint16{2848},
		[]uint16{2849, 2850},
		[]uint16{2851},
		[]uint16{2852, 2853},
		[]uint16{2854, 2855},
		[]uint16{2856},
		[]uint16{2857, 2858},
		[]uint16{2859, 2860},
		[]uint16{2861},
		[]uint16{2862, 2863},
		[]uint16{2864},
		[]uint16{2865, 2866},
		[]uint16{2867, 2868},
		[]uint16{2869},
		[]uint16{2870, 2871},
		[]uint16{2872, 2873},
		[]uint16{2874},
		[]uint16{2875, 2876},
		[]uint16{2877},
		[]uint16{2878, 2879},
		[]uint16{2880, 2881},
		[]uint16{2882},
		[]uint16{2883, 2884},
		[]uint16{2885, 2886},
		[]uint16{2887},
		[]uint16{2888, 2889},
		[]uint16{2890},
		[]uint16{2891, 2892},
		[]uint16{2893, 2894},
		[]uint16{2895},
		[]uint16{2896, 2897},
		[]uint16{2898, 2899},
		[]uint16{2900},
		[]uint16{2901, 2902},
		[]uint16{2903},
		[]uint16{2904, 2905},
		[]uint16{2906, 2907},
		[]uint16{2908},
		[]uint16{2909, 2910},
		[]uint16{2911, 2912},
		[]uint16{2913},
		[]uint16{2914, 2915},
		[]uint16{2916},
		[]uint16{2917, 2918},
		[]uint16{2919, 2920},
		[]uint16{2921},
		[]uint16{2922, 2923},
		[]uint16{2924, 2925},
		[]uint16{2926},
		[]uint16{2927, 2928},
		[]uint16{2929},
		[]uint16{2930, 2931},
		[]uint16{2932, 2933},
		[]uint16{2934},
		[]uint16{2935, 2936},
		[]uint16{2937, 2938},
		[]uint16{2939},
		[]uint16{2940, 2941},
		[]uint16{2942},
		[]uint16{2943, 2944},
		[]uint16{2945, 2946},
		[]uint16{2947},
		[]uint16{2948, 2949},
		[]uint16{2950, 2951},
		[]uint16{2952},
		[]uint16{2953, 2954},
		[]uint16{2955},
		[]uint16{2956, 2957},
		[]uint16{2958, 2959},
		[]uint16{2960},
		[]uint16{2961, 2962},
		[]uint16{2963, 2964},
		[]uint16{2965},
		[]uint16{2966, 2967},
		[]uint16{2968},
		[]uint16{2969, 2970},
		[]uint16{2971, 2972},
		[]uint16{2973},
		[]uint16{2974, 2975},
		[]uint16{2976, 2977},
		[]uint16{2978},
		[]uint16{2979, 2980},
		[]uint16{2981},
		[]uint16{2982, 2983},
		[]uint16{2984, 2985},
		[]uint16{2986},
		[]uint16{2987, 2988},
		[]uint16{2989, 2990},
		[]uint16{2991},
		[]uint16{2992, 2993},
		[]uint16{2994},
		[]uint16{2995, 2996},
		[]uint16{2997, 2998},
		[]uint16{2999},
		[]uint16{3000, 3001},
		[]uint16{3002, 3003},
		[]uint16{3004},
		[]uint16{3005, 3006},
		[]uint16{3007},
		[]uint16{3008, 3009},
		[]uint16{3010, 3011},
		[]uint16{3012},
		[]uint16{3013, 3014},
		[]uint16{3015, 3016},
		[]uint16{3017},
		[]uint16{3018, 3019},
		[]uint16{3020},
		[]uint16{3021, 3022},
		[]uint16{3023, 3024},
		[]uint16{3025},
		[]uint16{3026, 3027},
		[]uint16{3028, 3029},
		[]uint16{3030},
		[]uint16{3031, 3032},
		[]uint16{3033},
		[]uint16{3034, 3035},
		[]uint16{3036, 3037},
		[]uint16{3038},
		[]uint16{3039, 3040},
		[]uint16{3041, 3042},
		[]uint16{3043},
		[]uint16{3044, 3045},
		[]uint16{3046},
		[]uint16{3047, 3048},
		[]uint16{3049, 3050},
		[]uint16{3051},
		[]uint16{3052, 3053},
		[]uint16{3054, 3055},
		[]uint16{3056},
		[]uint16{3057, 3058},
		[]uint16{3059},
		[]uint16{3060, 3061},
		[]uint16{3062, 3063},
		[]uint16{3064},
		[]uint16{3065, 3066},
		[]uint16{3067, 3068},
		[]uint16{3069},
		[]uint16{3070, 3071},
		[]uint16{3072},
		[]uint16{3073, 3074},
		[]uint16{3075, 3076},
		[]uint16{3077},
		[]uint16{3078, 3079},
		[]uint16{3080, 3081},
		[]uint16{3082},
		[]uint16{3083, 3084},
		[]uint16{3085},
		[]uint16{3086, 3087},
		[]uint16{3088, 3089},
		[]uint16{3090},
		[]uint16{3091, 3092},
		[]uint16{3093, 3094},
		[]uint16{3095},
		[]uint16{3096, 3097},
		[]uint16{3098},
		[]uint16{3099, 3100},
		[]uint16{3101, 3102},
		[]uint16{3103},
		[]uint16{3104, 3105},
		[]uint16{3106, 3107},
		[]uint16{3108},
		[]uint16{3109, 3110},
		[]uint16{3111},
		[]uint16{3112, 3113},
		[]uint16{3114, 3115},
		[]uint16{3116},
		[]uint16{3117, 3118},
		[]uint16{3119, 3120},
		[]uint16{3121},
		[]uint16{3122, 3123},
		[]uint16{3124, 3125},
		[]uint16{3126},
		[]uint16{3127, 3128},
		[]uint16{3129},
		[]uint16{3130, 3131},
		[]uint16{3132, 3133},
		[]uint16{3134},
		[]uint16{3135, 3136},
		[]uint16{3137, 3138},
		[]uint16{3139},
		[]uint16{3140, 3141},
		[]uint16{3142},
		[]uint16{3143, 3144},
		[]uint16{3145, 3146},
		[]uint16{3147},
		[]uint16{3148, 3149},
		[]uint16{3150, 3151},
		[]uint16{3152},
		[]uint16{3153, 3154},
		[]uint16{3155},
		[]uint16{3156, 3157},
		[]uint16{3158, 3159},
		[]uint16{3160},
		[]uint16{3161, 3162},
		[]uint16{3163, 3164},
		[]uint16{3165},
		[]uint16{3166, 3167},
		[]uint16{3168},
		[]uint16{3169, 3170},
		[]uint16{3171, 3172},
		[]uint16{3173},
		[]uint16{3174, 3175},
		[]uint16{3176, 3177},
		[]uint16{3178},
		[]uint16{3179, 3180},
		[]uint16{3181},
		[]uint16{3182, 3183},
		[]uint16{3184, 3185},
		[]uint16{3186},
		[]uint16{3187, 3188},
		[]uint16{3189, 3190},
		[]uint16{3191},
		[]uint16{3192, 3193},
		[]uint16{3194},
		[]uint16{3195, 3196},
		[]uint16{3197, 3198},
		[]uint16{3199},
		[]uint16{3200, 3201},
		[]uint16{3202, 3203},
		[]uint16{3204},
		[]uint16{3205, 3206},
		[]uint16{3207},
		[]uint16{3208, 3209},
		[]uint16{3210, 3211},
		[]uint16{3212},
		[]uint16{3213, 3214},
		[]uint16{3215, 3216},
		[]uint16{3217},
		[]uint16{3218, 3219},
		[]uint16{3220},
		[]uint16{3221, 3222},
		[]uint16{3223, 3224},
		[]uint16{3225},
		[]uint16{3226, 3227},
		[]uint16{3228, 3229},
		[]uint16{3230},
		[]uint16{3231, 3232},
		[]uint16{3233},
		[]uint16{3234, 3235},
		[]uint16{3236, 3237},
		[]uint16{3238},
		[]uint16{3239, 3240},
		[]uint16{3241, 3242},
		[]uint16{3243},
		[]uint16{3244, 3245},
		[]uint16{3246},
		[]uint16{3247, 3248},
		[]uint16{3249, 3250},
		[]uint16{3251},
		[]uint16{3252, 3253},
		[]uint16{3254, 3255},
		[]uint16{3256},
		[]uint16{3257, 3258},
		[]uint16{3259},
		[]uint16{3260, 3261},
		[]uint16{3262, 3263},
		[]uint16{3264},
		[]uint16{3265, 3266},
		[]uint16{3267, 3268},
		[]uint16{3269},
		[]uint16{3270, 3271},
		[]uint16{3272},
		[]uint16{3273, 3274},
		[]uint16{3275, 3276},
		[]uint16{3277},
		[]uint16{3278, 3279},
		[]uint16{3280, 3281},
		[]uint16{3282},
		[]uint16{3283, 3284},
		[]uint16{3285},
		[]uint16{3286, 3287},
		[]uint16{3288, 3289},
		[]uint16{3290},
		[]uint16{3291, 3292},
		[]uint16{3293, 3294},
		[]uint16{3295},
		[]uint16{3296, 3297},
		[]uint16{3298},
		[]uint16{3299, 3300},
		[]uint16{3301, 3302},
		[]uint16{3303},
		[]uint16{3304, 3305},
		[]uint16{3306, 3307},
		[]uint16{3308},
		[]uint16{3309, 3310},
		[]uint16{3311},
		[]uint16{3312, 3313},
		[]uint16{3314, 3315},
		[]uint16{3316},
		[]uint16{3317, 3318},
		[]uint16{3319, 3320},
		[]uint16{3321},
		[]uint16{3322, 3323},
		[]uint16{3324},
		[]uint16{3325, 3326},
		[]uint16{3327, 3328},
	},
}
